[{"number": 1944, "title": "Incorrect wallet restore command example shown on ordinals.com", "summary": "{\"summary\": \"User reported an issue of incorrect wallet restore command being shown on ordinals.com\", \"sentiment\": \"neutral\", \"labels\": [\"website-content\", \"documentation\", \"wallet\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User reported an issue of incorrect wallet restore command being shown on ordinals.com", "sentiment": "neutral", "labels": ["website-content", "documentation", "wallet"]}}, {"number": 1943, "title": "ord shows wallet balance zero while sparrow shows correct amount.", "summary": "{\"summary\": \"ord wallet balance is showing zero despite importing the same mnemonic as Sparrow which shows the correct balance\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"balance-issue\", \"mnemonic-importing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "ord wallet balance is showing zero despite importing the same mnemonic as Sparrow which shows the correct balance", "sentiment": "frustrated", "labels": ["wallet", "balance-issue", "mnemonic-importing"]}}, {"number": 1940, "title": "\u3010 How to get inscription information from Bitcoin's original transaction\u3011\u5982\u4f55\u4ecebitcoin\u7684\u539f\u59cb\u4ea4\u6613\u4e2d\u83b7\u53d6inscription\u4fe1\u606f\uff1f", "summary": "{\"summary\": \"User is having trouble obtaining complete and relevant inscription information from Bitcoin's original transaction data\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin\", \"transaction\", \"data-analysis\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is having trouble obtaining complete and relevant inscription information from Bitcoin's original transaction data", "sentiment": "frustrated", "labels": ["bitcoin", "transaction", "data-analysis"]}}, {"number": 1933, "title": "ADJ", "summary": "I'm sorry, I cannot generate a valid response with the given input. Can you please provide more information or context about the task?", "reactionGroups": {"HEART": 1}}, {"number": 1932, "title": "The successful value of the inscription shows 10,000. I can't use it and it can't be used as a handling fee. Can I close it or adjust it?", "summary": "{\"summary\": \"User is unable to use an inscription valued at 10,000 and is seeking guidance on how to resolve the issue\", \"sentiment\": \"grateful\", \"labels\": [\"transaction\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is unable to use an inscription valued at 10,000 and is seeking guidance on how to resolve the issue", "sentiment": "grateful", "labels": ["transaction", "user-support"]}}, {"number": 1930, "title": "How to send Funds from my Ord Wallet without my Inscriptions", "summary": "{\"summary\": \"User has a question about how to withdraw funds from their Ord Wallet without affecting their inscriptions\", \"sentiment\": \"uncertain\", \"labels\": [\"wallet\", \"user-support\", \"crypto-operations\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User has a question about how to withdraw funds from their Ord Wallet without affecting their inscriptions", "sentiment": "uncertain", "labels": ["wallet", "user-support", "crypto-operations"]}}, {"number": 1925, "title": "Import mnenomic words to sparrow wallet, the addresses did not match", "summary": "{\"summary\": \"User is having trouble importing a mnemonic phrase to Sparrow wallet as the generated addresses do not match the ones from another wallet\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"address-generation\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is having trouble importing a mnemonic phrase to Sparrow wallet as the generated addresses do not match the ones from another wallet", "sentiment": "frustrated", "labels": ["wallet", "address-generation", "user-support"]}}, {"number": 1924, "title": "explain cardinals", "summary": "{\"summary\": \"User is seeking an explanation for cardinals and limitations on adding ordinals in transactions\", \"sentiment\": \"curious\", \"labels\": [\"wallet\", \"user-support\", \"documentation\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is seeking an explanation for cardinals and limitations on adding ordinals in transactions", "sentiment": "curious", "labels": ["wallet", "user-support", "documentation"]}}, {"number": 1918, "title": "listdescriptors is not available for non-descriptor wallets", "summary": "{\"summary\": \"User is encountering listdescriptors error while trying to transfer sats from non-descriptor wallet\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin\", \"wallet\", \"technical-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is encountering listdescriptors error while trying to transfer sats from non-descriptor wallet", "sentiment": "frustrated", "labels": ["bitcoin", "wallet", "technical-support"]}}, {"number": 1917, "title": "Transactions are not confirmed", "summary": "{\"summary\": \"User is experiencing issues with unconfirmed transactions due to small fee rate\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"user-support\", \"transaction\"]}\nThe user is frustrated because their transactions are not confirmed due to a small fee rate. They have included screenshots of their balance being debited without confirmation. The comment suggests setting the fee rate and waiting for confirmation, but the user is still looking for assistance. Relevant labels would be wallet, user-support, and transaction.", "reactionGroups": {}}, {"number": 1916, "title": "Fee not calculated correctly when using parent inscription", "summary": "{\"summary\": \"User reports a bug with fee calculation when using parent inscription\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"documentation\", \"pull-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User reports a bug with fee calculation when using parent inscription", "sentiment": "frustrated", "labels": ["bug", "documentation", "pull-request"]}}, {"number": 1915, "title": "Batch inscribing but getting errors after a few hundred inscriptions on 0.4.2", "summary": "{\"summary\": \"Error message 'JSON-RPC error: transport error: Couldn't connect to host: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.' occurs after a few hundred inscriptions.\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"blockchain\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Error message 'JSON-RPC error: transport error: Couldn't connect to host: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.' occurs after a few hundred inscriptions.", "sentiment": "frustrated", "labels": ["bug", "blockchain", "user-support"]}}, {"number": 1914, "title": "Is it possible to provide a complete verified index.redb download\uff1f", "summary": "{\n  \"summary\": \"User is experiencing slow indexing process and is looking for a verified index.redb file download to speed it up\",\n  \"sentiment\": \"hopeful\",\n  \"labels\": [\"performance\", \"indexing\", \"download\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing slow indexing process and is looking for a verified index.redb file download to speed it up", "sentiment": "hopeful", "labels": ["performance", "indexing", "download"]}}, {"number": 1913, "title": "ord wallet outputs takes forever", "summary": "{\"summary\": \"User is experiencing slow output times for ord wallet due to block indexing\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"performance\", \"indexing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing slow output times for ord wallet due to block indexing", "sentiment": "frustrated", "labels": ["wallet", "performance", "indexing"]}}, {"number": 1910, "title": "Add a handbook page explaining the concept of teleburn", "summary": "{\"summary\": \"Proposal to add handbook page for explaining teleburn concept\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"feature-request\"]\"}", "reactionGroups": {}}, {"number": 1902, "title": "Ord explorer returns \"Internal Server Error\" when trying to display inscription", "summary": "{\"summary\": \"When trying to access specific inscriptions on Ord explorer, server returns 'Internal Server Error' with HTTP 500 error\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"web-development\", \"crypto\", \"server\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "When trying to access specific inscriptions on Ord explorer, server returns 'Internal Server Error' with HTTP 500 error", "sentiment": "neutral", "labels": ["bug", "web-development", "crypto", "server"]}}, {"number": 1901, "title": "Inscription Verification Failed @ Cash App Talk", "summary": "{\"summary\": \"User is experiencing issues with inscribing after Cash App talk\", \"sentiment\": \"frustrated\", \"labels\": [\"Bitcoin daemon\", \"fee rate\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1896, "title": "Ordinal Inscription In Correct Format, But Does Not Get Indexed - Sample Mainnet Tx Included Here", "summary": "{\n    \"summary\": \"Issue with indexing ordinal inscription correctly using taproot spend reveal procedure\",\n    \"sentiment\": \"neutral\",\n    \"labels\": [\"taproot\", \"documentation\", \"indexing\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "Issue with indexing ordinal inscription correctly using taproot spend reveal procedure", "sentiment": "neutral", "labels": ["taproot", "documentation", "indexing"]}}, {"number": 1895, "title": "[2023-03-08T06:17:15Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Use -txindex or provide a block hash to enable blockchain transaction queries. Use gettransaction for wallet transactions.", "summary": "{\"summary\": \"Users are experiencing an error message when trying to fetch raw transactions\", \"sentiment\": \"frustrated\", \"labels\": [\"error-handling\", \"blockchain\"]}", "reactionGroups": {"THUMBS_UP": 2, "EYES": 2}, "summaryJson": {"summary": "Users are experiencing an error message when trying to fetch raw transactions", "sentiment": "frustrated", "labels": ["error-handling", "blockchain"]}}, {"number": 1894, "title": "Use Improved Memory Allocators When Available", "summary": "{\"summary\": \"Proposal to use improved memory allocators when available for rust, specifically `jemalloc`\", \"sentiment\": \"neutral\", \"labels\": [\"performance\", \"memory-management\", \"rust\", \"proposal\"]}\"", "reactionGroups": {}}, {"number": 1893, "title": "Improve Heap Allocation In Index::blocks", "summary": "{\"summary\": \"Proposal to improve heap allocation in 'index::blocks' function for better performance\", \"sentiment\": \"neutral\", \"labels\": [\"optimization\", \"performance\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to improve heap allocation in 'index::blocks' function for better performance", "sentiment": "neutral", "labels": ["optimization", "performance"]}}, {"number": 1889, "title": "Cache all /preview endpoints", "summary": "{\"summary\": \"Request to cache all /preview endpoints for improved caching and performance benefits\", \"sentiment\": \"positive\", \"labels\": [\"cache\", \"performance\", \"web-development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to cache all /preview endpoints for improved caching and performance benefits", "sentiment": "positive", "labels": ["cache", "performance", "web-development"]}}, {"number": 1888, "title": "Localization (Website/Documentation)", "summary": "{\"summary\": \"Discussion on localizing Ordinals website/documentation with a focus on low-tech users\", \"sentiment\": \"neutral\", \"labels\": [\"localization\", \"website\", \"documentation\", \"user-experience\", \"low-tech\", \"development-resources\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Discussion on localizing Ordinals website/documentation with a focus on low-tech users", "sentiment": "neutral", "labels": ["localization", "website", "documentation", "user-experience", "low-tech", "development-resources"]}}, {"number": 1884, "title": "Unrecoverable crash when running `ord --index-sats index`", "summary": "{\"summary\": \"`ord --index-sats index` crashes on Mac M1 with 'assertion failed' error message\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"Mac M1\", \"crash\", \"redb\"]}", "reactionGroups": {}, "summaryJson": {"summary": "`ord --index-sats index` crashes on Mac M1 with 'assertion failed' error message", "sentiment": "frustrated", "labels": ["bug", "Mac M1", "crash", "redb"]}}, {"number": 1883, "title": "ord server not working (testnet)", "summary": "{\"summary\": \"ord testnet server not working, preview works but showing regtest results\", \"sentiment\": \"frustrated\", \"labels\": [\"server\", \"testnet\", \"explorer\"]}", "reactionGroups": {"EYES": 1}, "summaryJson": {"summary": "ord testnet server not working, preview works but showing regtest results", "sentiment": "frustrated", "labels": ["server", "testnet", "explorer"]}}, {"number": 1880, "title": "Block height off by one error?", "summary": "{\"summary\": \"User suspects an off-by-one error in block height calculation when running wallet operations\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"bug\"]}\"", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 1878, "title": "Ordinals Protocol future and how cost scale", "summary": "{\n\"summary\": \"Proposal for a new convention to address cost scalability and resource quality in Ordinals Protocol\", \n\"sentiment\": \"optimistic\", \n\"labels\": [\"blockchain\", \"digital-artifacts\", \"protocol-development\"]\n}", "reactionGroups": {"THUMBS_UP": 6}, "summaryJson": {"summary": "Proposal for a new convention to address cost scalability and resource quality in Ordinals Protocol", "sentiment": "optimistic", "labels": ["blockchain", "digital-artifacts", "protocol-development"]}}, {"number": 1877, "title": "ord indexing with 0.5.1 unbearably slow", "summary": "{\"summary\": \"User is experiencing extremely slow indexing with ord 0.5.1 and Bitcoin RPC becoming unresponsive\", \"sentiment\": \"frustrated\", \"labels\": [\"indexing\", \"performance\", \"bug\", \"bitcoin\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing extremely slow indexing with ord 0.5.1 and Bitcoin RPC becoming unresponsive", "sentiment": "frustrated", "labels": ["indexing", "performance", "bug", "bitcoin"]}}, {"number": 1873, "title": "How to increase transaction fee of a ordinal tx?", "summary": "{\"summary\": \"User wants to increase the fee of an ordinal transaction and is unsure of how to do so\", \"sentiment\": \"concerned\", \"labels\": [\"transaction-fees\", \"wallet\", \"user-support\"]}\"", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 1872, "title": "Certain inscriptions are not viewable on ordinals.com and don't return on my own node either", "summary": "{\"summary\": \"User reports certain inscriptions not viewable on ordinals.com or local node\", \"sentiment\": \"frustrated\", \"labels\": [\"BTC\", \"indexing\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1867, "title": "Extend contributors guide, link it to README", "summary": "{\"summary\": \"Proposal to extend contributors guide and link it to README with tips for high efficiency dev workflow and insight from other contributors\", \"sentiment\": \"neutral\", \"labels\": [\"developer-experience\", \"documentation\"] }", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to extend contributors guide and link it to README with tips for high efficiency dev workflow and insight from other contributors", "sentiment": "neutral", "labels": ["developer-experience", "documentation"]}}, {"number": 1865, "title": "Not enough sats on my utxo", "summary": "{\"summary\": \"User is experiencing issues with insufficient sats to pay the fee for sending an inscription from their utxo\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1864, "title": "Bitcoin-cli index sats", "summary": "{\"summary\": \"User is facing difficulties with using the bitcoin-cli command for index sats\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin\", \"command-line-interface\", \"error-handling\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is facing difficulties with using the bitcoin-cli command for index sats", "sentiment": "frustrated", "labels": ["bitcoin", "command-line-interface", "error-handling"]}}, {"number": 1863, "title": "Cannot make inscriptions because ord indexer never finishes.", "summary": "{\"summary\": \"User facing issues with `ord wallet inscribe` command when indexing blocks on node\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin\", \"node-setup\", \"indexing\", \"wallet\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User facing issues with `ord wallet inscribe` command when indexing blocks on node", "sentiment": "frustrated", "labels": ["bitcoin", "node-setup", "indexing", "wallet"]}}, {"number": 1862, "title": "HTTP code: 403", "summary": "{\"summary\": \"User is encountering HTTP error 403 when attempting to access wallet balance\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"HTTP-errors\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is encountering HTTP error 403 when attempting to access wallet balance", "sentiment": "frustrated", "labels": ["wallet", "HTTP-errors"]}}, {"number": 1861, "title": "Running 'ord server' seems to leave the index in bad state, delays next ord launch", "summary": "{\"summary\": \"Running 'ord server' causes delays up to 30 mins before next ord launch; index file constantly read and a large amount of drive space being used\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"performance\", \"indexing\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Running 'ord server' causes delays up to 30 mins before next ord launch; index file constantly read and a large amount of drive space being used", "sentiment": "frustrated", "labels": ["bug", "performance", "indexing"]}}, {"number": 1860, "title": "Is it possible to look for rare sats in a non-taproot wallet?", "summary": "{\"summary\": \"User is asking if it's possible to search for rare sats in a non-taproot wallet and experiences issues when attempting to do so\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"bitcoin\", \"rarity\"]}", "reactionGroups": {"THUMBS_UP": 1, "EYES": 1}, "summaryJson": {"summary": "User is asking if it's possible to search for rare sats in a non-taproot wallet and experiences issues when attempting to do so", "sentiment": "neutral", "labels": ["wallet", "bitcoin", "rarity"]}}, {"number": 1852, "title": "error: JSON-RPC error: transport error: Couldn't connect to host: Resource temporarily unavailable (os error 11)", "summary": "{\"summary\": \"User is experiencing error while inscribing due to high memory pool and backup recovery key issue\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"bug-report\", \"technical-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing error while inscribing due to high memory pool and backup recovery key issue", "sentiment": "frustrated", "labels": ["wallet", "bug-report", "technical-support"]}}, {"number": 1850, "title": "RpcError { code: -4, message: \"Wallet already loading.\", data: None }", "summary": "{\"summary\": \"User is experiencing an error message 'Wallet already loading' when trying to receive Bitcoin through the ord wallet\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"error-handling\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing an error message 'Wallet already loading' when trying to receive Bitcoin through the ord wallet", "sentiment": "frustrated", "labels": ["wallet", "error-handling", "user-support"]}}, {"number": 1849, "title": "Connecting to remote bitcoind rpc does not work - I/O error: No such file or directory (os error 2)", "summary": "{\"summary\": \"User is experiencing issues with connecting to remote bitcoind rpc\", \"sentiment\": \"frustrated\", \"labels\": [\"node\", \"rpc\", \"syncing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing issues with connecting to remote bitcoind rpc", "sentiment": "frustrated", "labels": ["node", "rpc", "syncing"]}}, {"number": 1848, "title": "Indicate that identity of sub inscriptions are different", "summary": "{\"summary\": \"Issue related to indicating different identity of sub inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"user-interface\", \"subscription\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue related to indicating different identity of sub inscriptions", "sentiment": "neutral", "labels": ["user-interface", "subscription"]}}, {"number": 1845, "title": "How to inscribe continuously?", "summary": "{\"summary\": \"User is having trouble inscribing NFTs continuously without waiting for confirmation\", \"sentiment\": \"frustrated\", \"labels\": [\"NFT\", \"wallet\", \"user-support\"] }", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "User is having trouble inscribing NFTs continuously without waiting for confirmation", "sentiment": "frustrated", "labels": ["NFT", "wallet", "user-support"]}}, {"number": 1843, "title": "sending cardinals leaves all inscriptions locked", "summary": "{\"summary\": \"Issue with inscription outputs remaining locked after sending a cardinal, preventing further sends and causing errors\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin\", \"wallet\", \"bug-report\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue with inscription outputs remaining locked after sending a cardinal, preventing further sends and causing errors", "sentiment": "frustrated", "labels": ["bitcoin", "wallet", "bug-report"]}}, {"number": 1842, "title": "sending cardinals requires but ignores --fee-rate", "summary": "{\"summary\": \"User reports that the wallet send function ignores specified fee rate\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"bug\", \"transaction\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User reports that the wallet send function ignores specified fee rate", "sentiment": "frustrated", "labels": ["wallet", "bug", "transaction"]}}, {"number": 1841, "title": "Internal server error for some inscriptions", "summary": "{\"summary\": \"Some URLs on /inscription endpoint throw internal server error, inscriptions visible on /tx endpoint\", \"sentiment\": \"neutral\", \"labels\": [\"server-error\", \"backend\", \"bug-report\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Some URLs on /inscription endpoint throw internal server error, inscriptions visible on /tx endpoint", "sentiment": "neutral", "labels": ["server-error", "backend", "bug-report"]}}, {"number": 1838, "title": "Document Decentralized Namespace Standards and Proposals", "summary": "{\"summary\": \"Proposal to create a decentralized username system on top of ordinals\", \"sentiment\": \"encouraging\", \"labels\": [\"blockchain\", \"decentralization\", \"usernames\"]}", "reactionGroups": {"THUMBS_UP": 4, "LAUGH": 1, "EYES": 1}, "summaryJson": {"summary": "Proposal to create a decentralized username system on top of ordinals", "sentiment": "encouraging", "labels": ["blockchain", "decentralization", "usernames"]}}, {"number": 1837, "title": "Inscription taking all the remaining cardinals / Sats from the wallet", "summary": "{\"summary\": \"User experienced issues with inscription in ord causing their wallet's balance to become 0 despite having some sats, and they suspect it is related to low fee rate. Several comments discuss the issue further and recommend using Sparrow Wallet or importing the wallet into it to send remaining sats to another account with a higher fee rate.\", \n\"sentiment\": \"frustrated\", \n\"labels\": [\"wallet\", \"fee-rate\", \"user-support\"] }", "reactionGroups": {}, "summaryJson": {"summary": "User experienced issues with inscription in ord causing their wallet's balance to become 0 despite having some sats, and they suspect it is related to low fee rate. Several comments discuss the issue further and recommend using Sparrow Wallet or importing the wallet into it to send remaining sats to another account with a higher fee rate.", "sentiment": "frustrated", "labels": ["wallet", "fee-rate", "user-support"]}}, {"number": 1836, "title": "Index progress commit taking 20+min", "summary": "{\"summary\": \"User is experiencing slow indexing speed with high disk usage while syncing, resulting in lengthy commit times for index progress\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"performance\", \"syncing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing slow indexing speed with high disk usage while syncing, resulting in lengthy commit times for index progress", "sentiment": "frustrated", "labels": ["bug", "performance", "syncing"]}}, {"number": 1832, "title": "Ord indexing process extreme disk usage", "summary": "{\"summary\": \"User is experiencing extreme disk usage while building an index using ord with --index-sats enabled\", \"sentiment\": \"concerned\", \"labels\": [\"optimization\", \"macOS\", \"performance\", \"indexing\"] }", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing extreme disk usage while building an index using ord with --index-sats enabled", "sentiment": "concerned", "labels": ["optimization", "macOS", "performance", "indexing"]}}, {"number": 1831, "title": "Ord wallet restore doesn't restore the correct wallet - copy of wallet.dat and wallet.dat-journal works", "summary": "Title: \"Ord wallet restore doesn't restore the correct wallet - copy of wallet.dat and wallet.dat-journal works\"\nBody: \"Not sure if this has been tested by anyone yet but I'm having a really hard time getting the wallet restore command to restore the correct wallet for me. I've tried with multiple machines and the only thing that works is if I copy the wallet files (dat and dat-journal) to the wallets folder.   Yes - I know there's a possibility I didn't correctly  store my mnemonic lol but after having dealt with several hundred of them I'm pretty sure I have the right mnemonic  Has anyone successfully restored a wallet using the wallet restore command and verified its the correct wallet.    Steps:  1) Install bitcoin core and wait for it to complete sync   2) Install ord  3) Copy index.redb from @Greg's torrent (thank you @Greg)  4) run ord index to get to latest block  5) run ord --wallet <wallet-name> wallet restore \"<mnemonic inside quotes>\"  6) run ord --wallet <wallet-name> wallet inscriptions (it doesn't show my inscriptions)  7) stop bitcoin daemon  8) copy wallet dat files (that I got from the original machine that's setup with the wallet in question) to wallets folder to replace the ones that are already there  9) start bitcoin daemon  10) run ord --wallet <wallet-name> wallet inscriptions (voila! shows all my inscriptions)\"\nComment0 :I think I have a clue on what's going on (thx to some direction from Greg#0913 on discord). it may be possible the wallet receive command is generating several addresses instead of just 1. this may inadvertently be creating a gap that's causing the wallet restore to not show all addresses from the original wallet    some additional steps to repro this  - after creating the original wallet run wallet receive 2 times  - run wallet receive again and use this address to receive ordinal  - this will most likely repro this issue i.e. the wallet restore followed by wallet inscriptions will not show the ordinal   \nComment1 :Same issue here. `ord restore` doesn't show txs. I need to manually copy the original `wallet.dat` & `wallet.dat-journal`.    To verify the seed is correct, I restored into Sparrow and saw the expected txs.\nComment2 :so restoring into Sparrow is safe? I just tried it and while the checksum is getting verified the \"Discover wallet\" button stays grayed out. Thoughts?\nComment3 :I think I know what's happening. When you restore a wallet ord creates the descriptors in the new wallet with timestamp \"now\" and so bitcoind only scans blocks from the last 2 hours.     People affected by this can get their transactions back by rescanning the blockchain:        bitcoin-cli -rpcwallet=<restorewalletname> rescanblockchain 767430    That will rescan from block 767430, the first block that contained an inscription. Use a block number from shortly before your first transaction confirmed.\nComment4 :You are AMAZING! that WORKED!! thx ser!\nComment5 :> I think I know what's happening. When you restore a wallet ord creates the descriptors in the new wallet with timestamp \"now\" and so bitcoind only scans blocks from the last 2 hours.  >   > People affected by this can get their transactions back by rescanning the blockchain:  >   > ```  > bitcoin-cli -rpcwallet=<restorewalletname> rescanblockchain 767430  > ```  >   > That will rescan from block 767430, the first block that contained an inscription. Use a block number from shortly before your first transaction confirmed.      i use ord wallet create  so no name what i should put for -rpcwallet=<restorewalletname>   ???\nComment6 :> I think I know what's happening. When you restore a wallet ord creates the descriptors in the new wallet with timestamp \"now\" and so bitcoind only scans blocks from the last 2 hours.    Note that it rescans blocks from 2 hours before the most recent block's `mediantime`. So to reproduce this on regtest I had to wait 2 hours and also generate enough new blocks to allow the mediantime to catch up with the current time.\nComment7 :> i use ord wallet create so no name what i should put for -rpcwallet= ???    The default wallet name used by ord is ord.  \nComment8 :ofc I'm stupid, need more sleep ;) ty  Le dim. 26 f\u00e9vr. 2023 \u00e0 17:04, gmart7t2 ***@***.***> a \u00e9crit :  > i use ord wallet create so no name what i should put for -rpcwallet= ??? > > The default wallet name used by ord is ord. > > \u2014 > Reply to this email directly, view it on GitHub > <https://github.com/casey/ord/issues/1831#issuecomment-1445397424>, or > unsubscribe > <https://github.com/notifications/unsubscribe-auth/AFO5XEWNMZV2TCJA2L3SKXTWZN5JDANCNFSM6AAAAAAVHAJBFM> > . > You are receiving this because you commented.Message ID: > ***@***.***> > \nComment9 :Hi we had this same issue.      > I think I know what's happening. When you restore a wallet ord creates the descriptors in the new wallet with timestamp \"now\" and so bitcoind only scans blocks from the last 2 hours.  >   > People affected by this can get their transactions back by rescanning the blockchain:  >   > ```  > bitcoin-cli -rpcwallet=<restorewalletname> rescanblockchain 767430  > ```  >   > That will rescan from block 767430, the first block that contained an inscription. Use a block number from shortly before your first transaction confirmed.    We had this issue as well and this fix solved it.  Thank you!", "reactionGroups": {"THUMBS_UP": 2, "HOORAY": 2}}, {"number": 1830, "title": "Sending cardinals", "summary": "{\"summary\": \"User is trying to send non-inscripted BTC but is having trouble using existing commands in the ord wallet\", \"sentiment\": \"concerned\", \"labels\": [\"wallet\", \"command-error\", \"BTC\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is trying to send non-inscripted BTC but is having trouble using existing commands in the ord wallet", "sentiment": "concerned", "labels": ["wallet", "command-error", "BTC"]}}, {"number": 1824, "title": "ord indexing error", "summary": "Title: \"ord indexing error \"\nBody: \"Getting a error when indexing blocks:  ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Use -txindex or provide a block hash to enable blockchain transaction queries. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214\"\nComment0 :Ah yeah I had the same and now it's     ```bash  ord git:(master) \u2717 cargo run wallet inscribe inscription/galoisfield.btc.txt      Finished dev [unoptimized + debuginfo] target(s) in 1.84s       Running `target/debug/ord wallet inscribe inscription/galoisfield.btc.txt`  error: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  ```  Obviously my bitcoind is running it's since more than 1 week I can't finish indexing for these both reasons !!    I hope that we will find solutions\nComment1 :getting the same error    Getting a error when indexing blocks:  ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Use -txindex or provide a block hash to enable blockchain transaction queries. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  \nComment2 :> getting the same error  >   > Getting a error when indexing blocks: ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Use -txindex or provide a block hash to enable blockchain transaction queries. Use gettransaction for wallet transactions. error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214    This error is might be because you forgot `-txindex=1` after `bitcoind` command.  It can\u2019t find the mempool and the rest of the chain \nComment3 :I\u2019m used with it. And after repeated repeated repeated now it\u2019s work. I don\u2019t really know why but now it\u2019s ~good\nComment4 :```  root@docker-desktop:~/ord/target/release# ./ord --rpc-url 172.16.0.3 --cookie-file ~/ord/.cookie --index ~/.local/share/ord/index0.5.1.redb info    [indexing blocks] 767429/778345[2023-02-26T11:36:53Z ERROR ord::index::updater] Couldn't receive txs error trying to connect: tcp connect error: Connection refused (os error 111)  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  ```    With` RUST_BACKTRACE=1 RUST_LOG=debug`    ```  2023-02-26T17:43:11Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767429]  [2023-02-26T17:43:11Z INFO  ord::index::updater] Block 767428 at 2022-12-14 20:12:25 UTC with 0 transactions\u2026  [2023-02-26T17:43:11Z INFO  ord::index::updater] Wrote 0 sat ranges from 0 outputs in 0 ms  [2023-02-26T17:43:11Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockheader [\"00000000000000000002b35aef66eb15cd2b232a800f75a2f25cedca4cfe52c4\",false]  [2023-02-26T17:43:11Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767430]  [2023-02-26T17:43:11Z INFO  ord::index::updater] Block 767429 at 2022-12-14 20:21:27 UTC with 0 transactions\u2026  [2023-02-26T17:43:11Z INFO  ord::index::updater] Wrote 0 sat ranges from 0 outputs in 0 ms  [2023-02-26T17:43:11Z DEBUG bitcoincore_rpc] JSON-RPC request: getblock [\"000000000000000000029730547464f056f8b6e2e0a02eaf69c24389983a04f5\",0]  [2023-02-26T17:43:12Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767431]  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z INFO  ord::index::updater] Block 767430 at 2022-12-14 20:32:00 UTC with 2332 transactions\u2026  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG hyper::client::connect::http] connecting to 172.16.0.3:80  [2023-02-26T17:43:12Z DEBUG bitcoincore_rpc] JSON-RPC request: getblock [\"0000000000000000000098ecdd4b0d5dd45351e15ca25865a52278d6826483b9\",0]  [2023-02-26T17:43:12Z ERROR ord::index::updater] Couldn't receive txs error trying to connect: tcp connect error: Connection refused (os error 111)  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214     0: ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions     1: ord::index::updater::Updater::update_index     2: ord::index::updater::Updater::update     3: ord::subcommand::info::Info::run     4: ord::subcommand::Subcommand::run     5: ord::main     6: std::sys_common::backtrace::__rust_begin_short_backtrace     7: std::rt::lang_start::{{closure}}     8: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/ops/function.rs:606:13        std::panicking::try::do_call               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:483:40        std::panicking::try               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:447:19        std::panic::catch_unwind               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panic.rs:137:14        std::rt::lang_start_internal::{{closure}}               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/rt.rs:148:48        std::panicking::try::do_call               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:483:40        std::panicking::try               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:447:19        std::panic::catch_unwind               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panic.rs:137:14        std::rt::lang_start_internal               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/rt.rs:148:20     9: main    10: __libc_start_main    11: _start    ```  \nComment5 :You need to specify the port for rpc-url as well. By default it's 8332, so it would be 172.16.0.3:8332\nComment6 :That fixed the issue, thanks\nComment7 :Howdy, similar issue here (same tx ID), but not an RPC connection issue described above.    Running a fully synced Bitcoin Core v22.0.0 on Ubuntu. Compiled ord 0.5.1 from source. Began indexing, ran up to 765k block fast and without errors, then bombed (I didn't catch the exact message, but it was similar to this one).     Started researching, turned txindex=1, then rest=1 on for bitcoind - same error. After googling by tx ID found this thread ;-)    The block it originally bombed on was 767430 (same as here) and same tx ID a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214    Turned debug on, went past block 767430, now bombed on 767433 trying to fetch the same tx ID. When rerunning the index command keep getting the error on the same tx ID, but each time it claims a different [prior] block that supposedly had already been indexed.    Tried looking up this tx via ordinals.com explorer - it finds it, and it's actually in block 767427  https://ordinals.com/tx/a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  https://ordinals.com/block/767427    My hunch is maybe either the ord index got corrupt when being built or somehow my local copy of the blockchain is corrupt (how's that possible?! - bitcoind continues interacting with peers fine). But what a coincidence ord needing to fetch more info on exactly the same tx and not finding it!    Anyhow, here are some logs. Appreciate any hints!    [2023-02-27T18:47:06Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767429]  [2023-02-27T18:47:06Z INFO  ord::index::updater] Block 767428 at 2022-12-14 20:12:25 UTC with 0 transactions\u2026  [2023-02-27T18:47:06Z INFO  ord::index::updater] Wrote 0 sat ranges from 0 outputs in 0 ms  [2023-02-27T18:47:06Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockheader [\"00000000000000000002b35aef66eb15cd2b232a800f75a2f25cedca4cfe52c4\",false]  [2023-02-27T18:47:06Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767430]  [2023-02-27T18:47:06Z INFO  ord::index::updater] Block 767429 at 2022-12-14 20:21:27 UTC with 0 transactions\u2026  [2023-02-27T18:47:06Z INFO  ord::index::updater] Wrote 0 sat ranges from 0 outputs in 0 ms  [2023-02-27T18:47:06Z DEBUG bitcoincore_rpc] JSON-RPC request: getblock [\"000000000000000000029730547464f056f8b6e2e0a02eaf69c24389983a04f5\",0]  [2023-02-27T18:47:07Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767431]  [2023-02-27T18:47:07Z DEBUG bitcoincore_rpc] JSON-RPC request: getblock [\"0000000000000000000098ecdd4b0d5dd45351e15ca25865a52278d6826483b9\",0]  [2023-02-27T18:47:07Z INFO  ord::index::updater] Block 767430 at 2022-12-14 20:32:00 UTC with 2332 transactions\u2026  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connecting to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG hyper::client::connect::http] connected to 127.0.0.1:8332  [2023-02-27T18:47:07Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767432]  [2023-02-27T18:47:07Z DEBUG bitcoincore_rpc] JSON-RPC request: getblock [\"00000000000000000001b471a4b9aa32de5cb794d15eb663ad05db6c848cbd04\",0]  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 4209 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG hyper::proto::h1::io] flushed 5672 bytes  [2023-02-27T18:47:07Z DEBUG bitcoincore_rpc] JSON-RPC request: getblockhash [767433]  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::io] parsed 3 headers  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::conn] incoming body is content-length (8028 bytes)  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::conn] incoming body completed  [2023-02-27T18:47:09Z DEBUG hyper::client::pool] pooling idle connection for (\"http\", 127.0.0.1:8332)  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::io] parsed 3 headers  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::conn] incoming body is content-length (8028 bytes)  [2023-02-27T18:47:09Z DEBUG hyper::proto::h1::conn] incoming body completed  [2023-02-27T18:47:09Z DEBUG hyper::client::pool] pooling idle connection for (\"http\", 127.0.0.1:8332)  [2023-02-27T18:47:09Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214     0: ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions     1: ord::index::updater::Updater::update_index     2: ord::index::updater::Updater::update     3: ord::subcommand::index::run     4: ord::subcommand::Subcommand::run     5: ord::main     6: std::sys_common::backtrace::__rust_begin_short_backtrace     7: std::rt::lang_start::{{closure}}     8: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/ops/function.rs:606:13        std::panicking::try::do_call               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:483:40        std::panicking::try               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:447:19        std::panic::catch_unwind               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panic.rs:137:14        std::rt::lang_start_internal::{{closure}}               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/rt.rs:148:48        std::panicking::try::do_call               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:483:40        std::panicking::try               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panicking.rs:447:19        std::panic::catch_unwind               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/panic.rs:137:14        std::rt::lang_start_internal               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/rt.rs:148:20     9: main    10: __libc_start_call_main               at ./csu/../sysdeps/nptl/libc_start_call_main.h:58:16    11: __libc_start_main_impl               at ./csu/../csu/libc-start.c:392:3    12: _start    catson@fubar:~$ unset RUST_LOG RUST_BACKTRACE  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767421/778548[2023-02-27T18:48:46Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767319/778548[2023-02-27T18:48:52Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767412/778548[2023-02-27T18:48:58Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767426/778548[2023-02-27T18:49:03Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767361/778548[2023-02-27T18:49:17Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767276/778548[2023-02-27T18:49:23Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767359/778548[2023-02-27T18:49:27Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767341/778548[2023-02-27T18:49:30Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767381/778548[2023-02-27T18:49:32Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767338/778548[2023-02-27T18:49:34Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767421/778548[2023-02-27T18:49:38Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  catson@fubar:~$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767293/778548[2023-02-27T18:49:47Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  \nComment8 :Update:    Tried removing and recreating ord index. Went through very fast (less than 1/2 hr), bombed on block 767365 with the same tx ID.  I thought \"well, maybe 767365 is where the transaction whose input was a2df...bd1214's input but no - that transaction (ae692be4fa337daf7dd4e351e6dccd5de0e05fe7cfe8106d1793d3b62dfa278c) is in 767419.     catson@fubar:~/.local/share/ord$ mv index.redb index.redb.bad  catson@fubar:~/.local/share/ord$ ord index  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 767365/778555[2023-02-27T20:23:41Z ERROR ord::index::updater] Couldn't receive txs Failed to fetch raw transaction: code -5 message No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.  error: failed to get transaction for a2df039d22ce84803de677328efe3a2fe82b0102d66c32f899715608babd1214  \nComment9 :It says in the error message `Blockchain transactions are still in the process of being indexed.`. Run `bitcoin-cli getindexinfo` and wait until it says `synced: true`.\nComment10 :Gotcha, noobie mistake! I didn't realize that even though the core is in sync with the network, txindex didn't finish building because I just recently turned that flag on. Thanks, Andrew!\nComment11 :when i run command bitcoin-cli getindexinfo it show empty just this : {  }\nComment12 :You need to run bitcoind with `txindex=1`.\nComment13 :i run bitcoind in the background   ![Screenshot_9](https://user-images.githubusercontent.com/88089483/223188396-b9756fe8-3faa-4e23-a37a-75fc9b8afc3b.png)  \nComment14 :how to do that pls ?\nComment15 :Run `bitcoind -txindex`\nComment16 :in any folder ?\nComment17 :i run it on daemon folder and i got this   ![Screenshot_10](https://user-images.githubusercontent.com/88089483/223189497-b981d379-64b2-40ee-9c49-fb80c562f272.png)  \nComment18 :Yes, it says in the log it is syncing txindex now.\nComment19 :thank you it's running right now the sync has started i just will wait tell it says true that my balance can be showing is that right \nComment20 :I just solve this problem  In addition to the solutions mentioned by others, here's my own key point  1.make sure sync data and bitcoincore in the same folder  2.keep bitcoind.exe running and open a new tab for other command like \"ord.exe wallet balance\"  then everything goes fine.  hope this help.", "reactionGroups": {"THUMBS_UP": 2}}, {"number": 1822, "title": "Ord Core Daily Stand-up Agenda", "summary": "{\"summary\": \"Planning agenda for Ord Core daily stand-up, including MR submissions and mission statement discussion\", \"sentiment\": \"neutral\", \"labels\": [\"project-management\", \"agile-scrum\", \"development-process\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Planning agenda for Ord Core daily stand-up, including MR submissions and mission statement discussion", "sentiment": "neutral", "labels": ["project-management", "agile-scrum", "development-process"]}}, {"number": 1821, "title": "error: output in Bitcoin Core wallet but not in ord index:", "summary": "{\"summary\": \"User is experiencing an error related to output in Bitcoin Core wallet but not in order index\", \"sentiment\": \"neutral\", \"labels\": [\"Bitcoin Core\", \"wallet\", \"error-reporting\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing an error related to output in Bitcoin Core wallet but not in order index", "sentiment": "neutral", "labels": ["Bitcoin Core", "wallet", "error-reporting"]}}, {"number": 1816, "title": "How to update ord?", "summary": "{\"summary\": \"User is seeking help to update ord to the newest version\", \"sentiment\": \"grateful\", \"labels\": [\"installation\", \"user-support\", \"git\"]}", "reactionGroups": {"THUMBS_UP": 2, "HEART": 1}, "summaryJson": {"summary": "User is seeking help to update ord to the newest version", "sentiment": "grateful", "labels": ["installation", "user-support", "git"]}}, {"number": 1813, "title": "Ordinals tracking onchain", "summary": "{\"summary\": \"User is asking for advice on tracking ordinal transactions on-chain\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"development\"]}\"", "reactionGroups": {}}, {"number": 1811, "title": "Ord unresponsive to SIGINT", "summary": "{\"summary\": \"The 'ord' process becomes unresponsive to user signals during certain tasks, and interrupting the process could corrupt the index file\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"command-line-interface\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The 'ord' process becomes unresponsive to user signals during certain tasks, and interrupting the process could corrupt the index file", "sentiment": "neutral", "labels": ["bug", "command-line-interface"]}}, {"number": 1808, "title": "Did anyone manage to use ord on Raspberry Pi?", "summary": "{\"summary\": \"User is having trouble getting ord running on Raspberry Pi with Raspbian 64bit, but installation was possible when compiling from source with Raspbian 32bit. Users provide helpful tips and solutions to get ord running on the Raspiblitz with slight modifications and index updates.\", \"sentiment\": \"helpful\", \"labels\": [\"raspberry-pi\", \"bitcoin-core\", \"ord\", \"indexing\", \"installation\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is having trouble getting ord running on Raspberry Pi with Raspbian 64bit, but installation was possible when compiling from source with Raspbian 32bit. Users provide helpful tips and solutions to get ord running on the Raspiblitz with slight modifications and index updates.", "sentiment": "helpful", "labels": ["raspberry-pi", "bitcoin-core", "ord", "indexing", "installation"]}}, {"number": 1807, "title": "Cost per inscription", "summary": "{\"summary\": \"User is experiencing unexpected charges while using ord wallet inscribe command\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"transaction-fee\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1803, "title": "Preview page not loading CSS when iframed", "summary": "{\"summary\": \"The preview page is not loading CSS when iframed due to the 'sandbox' attribute on the iframe\", \"sentiment\": \"neutral\", \"labels\": [\"HTML\", \"CSS\", \"web-development\"] }", "reactionGroups": {}, "summaryJson": {"summary": "The preview page is not loading CSS when iframed due to the 'sandbox' attribute on the iframe", "sentiment": "neutral", "labels": ["HTML", "CSS", "web-development"]}}, {"number": 1801, "title": "Use change addresses for change", "summary": "{\"summary\": \"Issue with the use of change addresses in wallet creation in ord\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"code-fix\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue with the use of change addresses in wallet creation in ord", "sentiment": "neutral", "labels": ["wallet", "code-fix"]}}, {"number": 1799, "title": "Ord still runs --index-sats by default on testnet", "summary": "{\"summary\": \"Ord testnet runs --index-sats by default causing issues with wallet inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"testnet\", \"wallet\", \"indexing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Ord testnet runs --index-sats by default causing issues with wallet inscriptions", "sentiment": "neutral", "labels": ["testnet", "wallet", "indexing"]}}, {"number": 1796, "title": "ord wallet balance issue", "summary": "{\"summary\": \"User is experiencing issues with ord wallet balance command hanging while indexing at 350000 and is seeking guidance on how to optimize the process. One user suggests checking files in the src/subcommand/wallet/balance.rs directory. Another suggests downloading a git-branch of andrewtoth to run the command 'cargo run wallet balance'.\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"user-support\", \"optimization\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is experiencing issues with ord wallet balance command hanging while indexing at 350000 and is seeking guidance on how to optimize the process. One user suggests checking files in the src/subcommand/wallet/balance.rs directory. Another suggests downloading a git-branch of andrewtoth to run the command 'cargo run wallet balance'.", "sentiment": "neutral", "labels": ["wallet", "user-support", "optimization"]}}, {"number": 1795, "title": "rendering of text inscription broken in some cases and `content` API returns \"not found\"", "summary": "{\"summary\": \"Issues with rendering text inscription and `content` API returns 'not found'\", \"sentiment\": \"frustrated\", \"labels\": [\"API\", \"web-development\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issues with rendering text inscription and `content` API returns 'not found'", "sentiment": "frustrated", "labels": ["API", "web-development", "bug"]}}, {"number": 1794, "title": "inscribe command used inscription as input", "summary": "{\"summary\": \"Wallet used previous inscribed output as input to the second one\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"blockchain\",\"transactions\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Wallet used previous inscribed output as input to the second one", "sentiment": "neutral", "labels": ["wallet", "blockchain", "transactions"]}}, {"number": 1789, "title": "Rocktoshi will not sell me a rock", "summary": "{\"summary\": \"User is unable to buy a rock from Rocktoshi, and is concerned about a potential attack on the network\", \"sentiment\": \"frustrated\", \"labels\": [\"cryptocurrency\", \"network-security\", \"bug-report\"]}", "reactionGroups": {"HEART": 2, "LAUGH": 4}, "summaryJson": {"summary": "User is unable to buy a rock from Rocktoshi, and is concerned about a potential attack on the network", "sentiment": "frustrated", "labels": ["cryptocurrency", "network-security", "bug-report"]}}, {"number": 1788, "title": "Import dependencies where they are used", "summary": "{\"summary\": \"Suggestion to import dependencies where they are used instead of `use super::*;` everywhere\", \"sentiment\": \"neutral\", \"labels\": [\"code-quality\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Suggestion to import dependencies where they are used instead of `use super::*;` everywhere", "sentiment": "neutral", "labels": ["code-quality"]}}, {"number": 1787, "title": "Flaky tests", "summary": "{\"summary\": \"Flaky tests are causing slow edit/test/debug loop.\", \"sentiment\": \"neutral\", \"labels\": [\"testing\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Flaky tests are causing slow edit/test/debug loop.", "sentiment": "neutral", "labels": ["testing", "bug"]}}, {"number": 1782, "title": "Is there a way to pre-fetch the sat number of the next inscription?", "summary": "{\"summary\": \"User is a generative artist experimenting with a full node and looking for a way to predict the next satoshi number for inscribing\", \"sentiment\": \"neutral\", \"labels\": [\"full-node\", \"generative-art\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is a generative artist experimenting with a full node and looking for a way to predict the next satoshi number for inscribing", "sentiment": "neutral", "labels": ["full-node", "generative-art"]}}, {"number": 1780, "title": "Running ord wallet inscribe FILE is abnormal", "summary": "{\"summary\": \"Users are experiencing errors when running the ord wallet inscribe\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"error-handling\", \"indexing\", \"data-loss\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Users are experiencing errors when running the ord wallet inscribe", "sentiment": "frustrated", "labels": ["wallet", "error-handling", "indexing", "data-loss"]}}, {"number": 1779, "title": "Indexing from Dec 2022", "summary": "{\"summary\": \"Discussion on indexing the Bitcoin blockchain with the 'ord' client and ways to optimize the process including using SSDs and parallelization\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"optimization\", \"indexing\", \"SSD\", \"user-support\", \"testing\"]}", "reactionGroups": {"THUMBS_UP": 10, "HEART": 2, "ROCKET": 1}, "summaryJson": {"summary": "Discussion on indexing the Bitcoin blockchain with the 'ord' client and ways to optimize the process including using SSDs and parallelization", "sentiment": "neutral", "labels": ["blockchain", "optimization", "indexing", "SSD", "user-support", "testing"]}}, {"number": 1778, "title": "ord inscribe goes out of its way to spend my locked utxos", "summary": "{\"summary\": \"User is experiencing issues with ord inscribe spending locked utxos despite using 'lockunspent'\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"bug-report\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing issues with ord inscribe spending locked utxos despite using 'lockunspent'", "sentiment": "frustrated", "labels": ["wallet", "bug-report"]}}, {"number": 1776, "title": "Inscriptions not showing vs sparrow", "summary": "{\"summary\": \"Inscriptions not showing in ord wallet after restoring from Sparrow\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"importing-wallets\", \"inscriptions\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Inscriptions not showing in ord wallet after restoring from Sparrow", "sentiment": "neutral", "labels": ["wallet", "importing-wallets", "inscriptions"]}}, {"number": 1775, "title": "Ordinals ios app", "summary": "{\"summary\": \"Create an iOS app to display the ordinals clock and publish it on the app store\", \"sentiment\": \"neutral\", \"labels\": [\"iOS\", \"app-development\", \"app-store\"]}", "reactionGroups": {"EYES": 2}, "summaryJson": {"summary": "Create an iOS app to display the ordinals clock and publish it on the app store", "sentiment": "neutral", "labels": ["iOS", "app-development", "app-store"]}}, {"number": 1774, "title": "Ord wallet balance", "summary": "{\n    \"summary\": \"User is experiencing issues with Ord wallet balance after upgrading to version 0.5.0\",\n    \"sentiment\": \"frustrated\",\n    \"labels\": [\"wallet\", \"bug-report\", \"user-support\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing issues with Ord wallet balance after upgrading to version 0.5.0", "sentiment": "frustrated", "labels": ["wallet", "bug-report", "user-support"]}}, {"number": 1770, "title": "Please help to understand \"inscriptions\" <-> \"sats\" command", "summary": "{\"summary\": \"User is seeking help understanding 'inscriptions' and 'sats' commands in their wallet and how to lock rare 'sats'\", \"sentiment\": \"confused\", \"labels\": [\"wallet\", \"user-support\", \"cryptocurrency\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is seeking help understanding 'inscriptions' and 'sats' commands in their wallet and how to lock rare 'sats'", "sentiment": "confused", "labels": ["wallet", "user-support", "cryptocurrency"]}}, {"number": 1767, "title": "Make `--fee-rate` mandatory for `wallet inscribe`", "summary": "{\"summary\": \"Proposal to make `--fee-rate` mandatory for `wallet inscribe`\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"wallet\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "Proposal to make `--fee-rate` mandatory for `wallet inscribe`", "sentiment": "neutral", "labels": ["enhancement", "wallet"]}}, {"number": 1764, "title": "Dockerizing Ord wallet", "summary": "{\"summary\": \"Proposal to dockerize the Ord wallet to lower the barrier of entry for developers in a windows-based environment and allow for easy publishing on docker.io\", \"sentiment\": \"positive\", \"labels\": [\"development\", \"dockerization\", \"user-support\"] }", "reactionGroups": {"THUMBS_UP": 3, "HOORAY": 1}, "summaryJson": {"summary": "Proposal to dockerize the Ord wallet to lower the barrier of entry for developers in a windows-based environment and allow for easy publishing on docker.io", "sentiment": "positive", "labels": ["development", "dockerization", "user-support"]}}, {"number": 1763, "title": "Don't upload metadata by default, require flag", "summary": "{\"summary\": \"Proposal to strip EXIF metadata by default and require a flag to upload it\", \"sentiment\": \"neutral\", \"labels\": [\"privacy\", \"metadata\", \"user-experience\"]}", "reactionGroups": {"THUMBS_UP": 3}, "summaryJson": {"summary": "Proposal to strip EXIF metadata by default and require a flag to upload it", "sentiment": "neutral", "labels": ["privacy", "metadata", "user-experience"]}}, {"number": 1762, "title": "Feature Request: API - lookup inscription by file content hash", "summary": "{\"summary\": \"User requests an API feature to lookup inscriptions by file content hash\", \"sentiment\": \"enthusiastic\", \"labels\": [\"API\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User requests an API feature to lookup inscriptions by file content hash", "sentiment": "enthusiastic", "labels": ["API", "feature-request"]}}, {"number": 1761, "title": "Feature Request: API - lookup inscription by inscription number", "summary": "{\"summary\": \"User has requested an API feature to lookup inscriptions by inscription number\", \"sentiment\": \"neutral\", \"labels\": [\"API\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User has requested an API feature to lookup inscriptions by inscription number", "sentiment": "neutral", "labels": ["API", "feature-request"]}}, {"number": 1760, "title": "Get GitHub codespaces up and running", "summary": "{\"summary\": \"User needs assistance with setting up GitHub codespaces and installing cargo and just\", \"sentiment\": \"positive\", \"labels\": [\"GitHub\", \"codespaces\", \"installation\"]}", "reactionGroups": {"ROCKET": 1}, "summaryJson": {"summary": "User needs assistance with setting up GitHub codespaces and installing cargo and just", "sentiment": "positive", "labels": ["GitHub", "codespaces", "installation"]}}, {"number": 1749, "title": "Wallet Balance cmd error", "summary": "{\"summary\": \"User is experiencing an error with 'wallet balance' command in the wallet setup, and getting 'called `Result::unwrap()` on an `Err` value: TryFromIntError(())' error\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing an error with 'wallet balance' command in the wallet setup, and getting 'called `Result::unwrap()` on an `Err` value: TryFromIntError(())' error", "sentiment": "frustrated", "labels": ["wallet", "bug"]}}, {"number": 1748, "title": "To Secure the protocol from repeating the OP_FALSE OP_IF \u2026 OP_ENDIF", "summary": "{\"summary\": \"Request for description of the title 'To Secure the protocol from repeating the OP_FALSE OP_IF \u2026 OP_ENDIF'\", \"sentiment\": \"neutral\", \"labels\": [\"protocol\", \"documentation\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request for description of the title 'To Secure the protocol from repeating the OP_FALSE OP_IF \u2026 OP_ENDIF'", "sentiment": "neutral", "labels": ["protocol", "documentation"]}}, {"number": 1745, "title": "os error 10060", "summary": "{\"summary\": \"User is experiencing issues with ord wallet inscribing due to errors such as error code 10060 and non-mandatory-script-verify-flag\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin-core\", \"wallet\", \"node\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing issues with ord wallet inscribing due to errors such as error code 10060 and non-mandatory-script-verify-flag", "sentiment": "frustrated", "labels": ["bitcoin-core", "wallet", "node"]}}, {"number": 1744, "title": "Lack of Restrictions for PDFs", "summary": "{\"summary\": \"PDFs lack restrictions applied to other MIME types, potentially allowing for malicious content to be included. Proposed mitigations include sandboxing and displaying warnings, but drawbacks exist for each option.\", \"sentiment\": \"neutral\", \"labels\": [\"web development\", \"cybersecurity\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "PDFs lack restrictions applied to other MIME types, potentially allowing for malicious content to be included. Proposed mitigations include sandboxing and displaying warnings, but drawbacks exist for each option.", "sentiment": "neutral", "labels": ["web development", "cybersecurity"]}}, {"number": 1743, "title": "Salt Mines standup 2023-2-13", "summary": "{\"summary\": \"Salt Mines team discusses IT security, dev tools, VPNs, DevOps/SRE tasks, and scaling dev work in standup meeting\", \"sentiment\": \"neutral\", \"labels\": [\"IT-Security\", \"DevOps\", \"VPN\", \"DevTools\", \"Scaling\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Salt Mines team discusses IT security, dev tools, VPNs, DevOps/SRE tasks, and scaling dev work in standup meeting", "sentiment": "neutral", "labels": ["IT-Security", "DevOps", "VPN", "DevTools", "Scaling"]}}, {"number": 1736, "title": "error: wallet does not contain enough cardinal UTXOs, please add additional funds to wallet.", "summary": "{\"summary\": \"Error message 'wallet does not contain enough cardinal UTXOs, please add additional funds to wallet' while using 'ord wallet inscribe' command\", \"sentiment\": \"frustrated\", \"labels\": [\"Bitcoin Core\", \"wallet\", \"transaction fee\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 5}, "summaryJson": {"summary": "Error message 'wallet does not contain enough cardinal UTXOs, please add additional funds to wallet' while using 'ord wallet inscribe' command", "sentiment": "frustrated", "labels": ["Bitcoin Core", "wallet", "transaction fee", "bug"]}}, {"number": 1734, "title": "ordinals.com links/redirects", "summary": "{\"summary\": \"Proposal to allow adding short redirect links in a config file for ordinals.com links/redirects\", \"sentiment\": \"optimistic\", \"labels\": [\"web-development\", \"contributor-friendly\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to allow adding short redirect links in a config file for ordinals.com links/redirects", "sentiment": "optimistic", "labels": ["web-development", "contributor-friendly"]}}, {"number": 1733, "title": "index Kill erro", "summary": "{\"summary\": \"User is experiencing an error when trying to restart the indexing process\", \"sentiment\": \"frustrated\", \"labels\": [\"indexing\", \"database-corruption\", \"error-handling\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing an error when trying to restart the indexing process", "sentiment": "frustrated", "labels": ["indexing", "database-corruption", "error-handling"]}}, {"number": 1729, "title": "thread 'main' panicked at 'attempt to subtract with overflow'", "summary": "{\"summary\": \"Panic error while attempting to inscribe on a specific sat in a UTXO due to overflow\", \"sentiment\": \"frustrated\", \"labels\": [\"error-handling\", \"wallet\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Panic error while attempting to inscribe on a specific sat in a UTXO due to overflow", "sentiment": "frustrated", "labels": ["error-handling", "wallet"]}}, {"number": 1728, "title": "AssumeIndex", "summary": "{\"summary\": \"Proposal to speed up indexing process by allowing users to download ordinal index snapshot at specific blockheight\", \"sentiment\": \"neutral\", \"labels\": [\"optimization\", \"discussion\"]}", "reactionGroups": {"THUMBS_UP": 1, "HEART": 1}, "summaryJson": {"summary": "Proposal to speed up indexing process by allowing users to download ordinal index snapshot at specific blockheight", "sentiment": "neutral", "labels": ["optimization", "discussion"]}}, {"number": 1727, "title": "testnet.ordinals.com is out of sync", "summary": "{\"summary\": \"Testnet at https://testnet.ordinals.com/ is out of sync and stuck at block 2417545\", \"sentiment\": \"frustrated\", \"labels\": [\"testnet\", \"blockchain\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "Testnet at https://testnet.ordinals.com/ is out of sync and stuck at block 2417545", "sentiment": "frustrated", "labels": ["testnet", "blockchain", "bug"]}}, {"number": 1726, "title": "Technical agenda from salt mines standup 2023-2-13", "summary": "{\"summary\": \"Meeting agenda for Salt Mines standup on February 13, 2023, discussing GitHub strategies, ord library for ecosystem, assume valid for index, gallery feature, and first API endpoint.\", \"sentiment\": \"neutral\", \"labels\": [\"tech\", \"project-management\"]}", "reactionGroups": {"EYES": 2}, "summaryJson": {"summary": "Meeting agenda for Salt Mines standup on February 13, 2023, discussing GitHub strategies, ord library for ecosystem, assume valid for index, gallery feature, and first API endpoint.", "sentiment": "neutral", "labels": ["tech", "project-management"]}}, {"number": 1724, "title": "Sign new releases", "summary": "{\"summary\": \"Project needs new releases to be signed\", \"sentiment\": \"neutral\", \"labels\": [\"security\", \"release-management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Project needs new releases to be signed", "sentiment": "neutral", "labels": ["security", "release-management"]}}, {"number": 1722, "title": "\"ord --index-sats index\" is incredibly slow", "summary": "{\"summary\": \"Running ord 0.5.0 with --index-sats is extremely slow, even on an M1 Max CPU and fast internal SSD. Users have noticed a significant slowdown on Mac systems as compared to Linux and Windows systems. Some users have had success with merging open PRs #1516 and #1636 or using a forked branch from andrewtoth to increase the indexing speed.\", \"sentiment\": \"frustrated\", \"labels\": [\"performance\", \"macOS\", \"indexing\", \"forks\"]}", "reactionGroups": {"THUMBS_UP": 7}, "summaryJson": {"summary": "Running ord 0.5.0 with --index-sats is extremely slow, even on an M1 Max CPU and fast internal SSD. Users have noticed a significant slowdown on Mac systems as compared to Linux and Windows systems. Some users have had success with merging open PRs #1516 and #1636 or using a forked branch from andrewtoth to increase the indexing speed.", "sentiment": "frustrated", "labels": ["performance", "macOS", "indexing", "forks"]}}, {"number": 1719, "title": "Bitcoin-backed Domain Name & Decentralized Identifiers (DIDs) using Inscriptions", "summary": "{\"summary\": \"Proposal to use Bitcoin-backed inscriptions for decentralized domain names and identifiers (DIDs), without the need for a centralized registrar. The proposal includes a collateral requirement for inscriptions, directories operated by community consensus, and support for Ordinal names. Some commenters expressed support for the idea of Ordinals as DIDs, but had reservations about using custom names or having directories moderated by entities.\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"decentralization\", \"identity\", \"bitcoin\", \"community-consensus\", \"pki\"]}", "reactionGroups": {"HEART": 1, "THUMBS_DOWN": 1}, "summaryJson": {"summary": "Proposal to use Bitcoin-backed inscriptions for decentralized domain names and identifiers (DIDs), without the need for a centralized registrar. The proposal includes a collateral requirement for inscriptions, directories operated by community consensus, and support for Ordinal names. Some commenters expressed support for the idea of Ordinals as DIDs, but had reservations about using custom names or having directories moderated by entities.", "sentiment": "neutral", "labels": ["blockchain", "decentralization", "identity", "bitcoin", "community-consensus", "pki"]}}, {"number": 1717, "title": "Can't send bitcoin from Ord wallet   code: -8, message: \"Invalid parameter, output already locked\", data: None", "summary": "{\"summary\": \"User is unable to send bitcoin from Ord wallet due to an 'Invalid parameter, output already locked' error\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"bitcoin\", \"error-resolution\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is unable to send bitcoin from Ord wallet due to an 'Invalid parameter, output already locked' error", "sentiment": "frustrated", "labels": ["wallet", "bitcoin", "error-resolution"]}}, {"number": 1712, "title": "repeated core dumps doing ord index on 0.5.0 on 16gb ram t2.xlarge instance", "summary": "{\"summary\": \"User is experiencing repeated core dumps while running ord index on a 16gb ram t2.xlarge instance with 0.5.0 version. The user wants to identify the cause of the issue to unblock other users\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"performance\", \"cloud-storage\"]}", "reactionGroups": {"THUMBS_UP": 2, "HOORAY": 1}, "summaryJson": {"summary": "User is experiencing repeated core dumps while running ord index on a 16gb ram t2.xlarge instance with 0.5.0 version. The user wants to identify the cause of the issue to unblock other users", "sentiment": "neutral", "labels": ["bug", "performance", "cloud-storage"]}}, {"number": 1709, "title": "Ord Wallet Restore - Error on 'budget'", "summary": "{\"summary\": \"User is having trouble restoring Ord wallet due to an error with the 'budget' argument\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"error-handling\", \"user-support\"] }", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "User is having trouble restoring Ord wallet due to an error with the 'budget' argument", "sentiment": "frustrated", "labels": ["wallet", "error-handling", "user-support"]}}, {"number": 1708, "title": "Create redirects with confit file", "summary": "{\"summary\": \"User wants to create redirects for various links using confit file\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"redirects\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User wants to create redirects for various links using confit file", "sentiment": "neutral", "labels": ["website", "redirects"]}}, {"number": 1707, "title": "Create Viewer for glbs", "summary": "{\"summary\": \"Issue with creating viewer for GLBs and discussion of viewer options.\", \"sentiment\": \"neutral\", \"labels\": [\"3D-modeling\", \"frontend-development\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Issue with creating viewer for GLBs and discussion of viewer options.", "sentiment": "neutral", "labels": ["3D-modeling", "frontend-development"]}}, {"number": 1706, "title": "Tezos Teleburn Address", "summary": "{\"summary\": \"The issue relates to the Tezos Teleburn address\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"Tezos\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The issue relates to the Tezos Teleburn address", "sentiment": "neutral", "labels": ["blockchain", "Tezos"]}}, {"number": 1705, "title": "Solana Teleburn Address", "summary": "{\"summary\": \"Discussion about a potential implementation of Solana Teleburn Address\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"implementation\"]", "reactionGroups": {}}, {"number": 1704, "title": "Stacks teleburn address", "summary": "I'm sorry, but the body of the issue is empty. Can you please provide more context or information about the issue?", "reactionGroups": {"HOORAY": 3}}, {"number": 1703, "title": "Cookie file parsing doesn't ignore trailing whitespace / newlines", "summary": "{\"summary\": \"Issues encountered with parsing cookie files due to trailing whitespace and newlines\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"parsing\", \"file-handling\"]}", "reactionGroups": {"EYES": 1, "HEART": 1}, "summaryJson": {"summary": "Issues encountered with parsing cookie files due to trailing whitespace and newlines", "sentiment": "neutral", "labels": ["bug", "parsing", "file-handling"]}}, {"number": 1701, "title": "index.redb download link", "summary": "{\"summary\": \"Request for index.redb download link for latest version of ord\", \"sentiment\": \"mixed\", \"labels\": [\"user-support\", \"data-management\"]}\n\nExplanation: The issue revolves around a request for a download link for the index.redb file for the latest version of ord, with multiple comments discussing potential solutions and sharing their experiences. The sentiment is mixed, as some users express frustration and difficulty indexing while others offer help and suggestions. The labels include user-support because it is a support-related issue, and data-management because it pertains to managing and handling database files.", "reactionGroups": {"THUMBS_UP": 7, "ROCKET": 1}}, {"number": 1692, "title": "Web App Security: Serve HTML/script-based content from different domain", "summary": "{\"summary\": \"Security vulnerability: Cross-site scripting can be performed through iframe sandbox on the main page\", \"sentiment\": \"concerned\", \"labels\": [\"security\", \"web-app\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Security vulnerability: Cross-site scripting can be performed through iframe sandbox on the main page", "sentiment": "concerned", "labels": ["security", "web-app"]}}, {"number": 1691, "title": "Inscribed UTXO Account on Balance", "summary": "{\"summary\": \"Proposal to improve clarity for users with Inscribed UTXOs on wallet balance check\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"user-experience\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to improve clarity for users with Inscribed UTXOs on wallet balance check", "sentiment": "neutral", "labels": ["wallet", "user-experience"]}}, {"number": 1686, "title": "Require bitcoin 24 for everything", "summary": "{\"summary\": \"Proposal to require Bitcoin 24 for all functions\", \"sentiment\": \"neutral\", \"labels\": [\"technical\", \"discussion\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to require Bitcoin 24 for all functions", "sentiment": "neutral", "labels": ["technical", "discussion"]}}, {"number": 1685, "title": "Identify and link to previous inscriptions with same content", "summary": "{\"summary\": \"Feature request to identify and link previous inscriptions with identical content through hashing\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"explorer\", \"hashing\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Feature request to identify and link previous inscriptions with identical content through hashing", "sentiment": "neutral", "labels": ["feature-request", "explorer", "hashing"]}}, {"number": 1678, "title": "> seeing similar behavior on AWS hosted windows machine. was smooth sailing until block 335,000. after that getting the below error consistently every 5000 blocks", "summary": "{\"summary\": \"User experiencing consistent errors fetching blocks on AWS-hosted windows machine\", \"sentiment\": \"frustrated\", \"labels\": [\"AWS\", \"error-handling\", \"blockchain\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User experiencing consistent errors fetching blocks on AWS-hosted windows machine", "sentiment": "frustrated", "labels": ["AWS", "error-handling", "blockchain"]}}, {"number": 1675, "title": "JSON-RPC error: transport error: unexpected HTTP code: 404", "summary": "{\"summary\": \"User is experiencing JSON-RPC error when running full node with specific settings in bitcoin.conf file\", \"sentiment\": \"frustrated\", \"labels\": [\"full-node\", \"configuration\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing JSON-RPC error when running full node with specific settings in bitcoin.conf file", "sentiment": "frustrated", "labels": ["full-node", "configuration", "user-support"]}}, {"number": 1674, "title": "RUST_BACKTRACE=1", "summary": "{\"summary\": \"Error encountered while indexing (300,000 block) and unable to reindex with ord --bitcoin-data-dir /mypath/info\", \"sentiment\": \"frustration\", \"labels\": [\"Rust\", \"Bitcoin\", \"indexing\", \"binary vs. build\", \"Raspbian\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Error encountered while indexing (300,000 block) and unable to reindex with ord --bitcoin-data-dir /mypath/info", "sentiment": "frustration", "labels": ["Rust", "Bitcoin", "indexing", "binary vs. build", "Raspbian"]}}, {"number": 1672, "title": "ord setup /commands not working", "summary": "{\"summary\": \"User is having trouble running bitcoin core and ord commands as per the setup guide\", \"sentiment\": \"frustrated\", \"labels\": [\"bitcoin-core\", \"user-support\", \"setup-guide\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is having trouble running bitcoin core and ord commands as per the setup guide", "sentiment": "frustrated", "labels": ["bitcoin-core", "user-support", "setup-guide"]}}, {"number": 1668, "title": "Make ord available in nixpkgs", "summary": "{\"summary\": \"User has created a simple nix package for 'ord' and wants to see it available in nixpkgs\", \"sentiment\": \"enthusiastic\", \"labels\": [\"nix\", \"packaging\", \"contributions\"]}", "reactionGroups": {"THUMBS_UP": 4, "HEART": 1}, "summaryJson": {"summary": "User has created a simple nix package for 'ord' and wants to see it available in nixpkgs", "sentiment": "enthusiastic", "labels": ["nix", "packaging", "contributions"]}}, {"number": 1661, "title": "Indexing does nothing?", "summary": "{\n    \"summary\": \"User is experiencing indexing issues where the program appears to be stuck or starting from scratch again after renaming the original index file.\",\n    \"sentiment\": \"frustrated\",\n    \"labels\": [\"data-management\", \"bug\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing indexing issues where the program appears to be stuck or starting from scratch again after renaming the original index file.", "sentiment": "frustrated", "labels": ["data-management", "bug"]}}, {"number": 1660, "title": "`ord wallet inscribe` takes longer with each inscription", "summary": "{\n\"summary\": \"The `ord wallet inscribe` call gets slower with each call made, and there are concerns about inefficiencies in backing up the key.\",\n\"sentiment\": \"positive\",\n\"labels\": [\"performance\", \"optimization\", \"backup\"]\n}", "reactionGroups": {"EYES": 1, "HEART": 1}, "summaryJson": {"summary": "The `ord wallet inscribe` call gets slower with each call made, and there are concerns about inefficiencies in backing up the key.", "sentiment": "positive", "labels": ["performance", "optimization", "backup"]}}, {"number": 1657, "title": "Create Option To Make Inscriptions Non-Transferable", "summary": "{\"summary\": \"Proposal to create option for non-transferable inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"smart-contracts\"]}\n\nExplanation: The issue is focused on creating a new feature for non-transferable inscriptions in the blockchain. The sentiment of the discussion is neutral, as there are different opinions and ideas being shared but no clear emotional tone. Relevant labels for this issue would include blockchain and smart-contracts.", "reactionGroups": {"THUMBS_UP": 2}}, {"number": 1652, "title": "Can I lose my inscriptions?", "summary": "{\"summary\": \"User is concerned about losing inscriptions when conducting BTC transactions\", \"sentiment\": \"concerned\", \"labels\": [\"wallet\", \"transaction-fees\", \"nft\", \"btc\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is concerned about losing inscriptions when conducting BTC transactions", "sentiment": "concerned", "labels": ["wallet", "transaction-fees", "nft", "btc"]}}, {"number": 1649, "title": "Unable to use 'ord wallet receive' after creating wallet", "summary": "{\"summary\": \"Users experiencing issues creating and receiving with the 'ord' wallet, resulting in unexpected output descriptors error message\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"troubleshooting\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Users experiencing issues creating and receiving with the 'ord' wallet, resulting in unexpected output descriptors error message", "sentiment": "frustrated", "labels": ["wallet", "troubleshooting", "bug"]}}, {"number": 1648, "title": "ord index", "summary": "Title: \"ord index\"\nBody: \"Hey,    my index is syncing for 2 days already and each second only 1 point of the 775k gets added. this would take 190 days to full sync the index. The first 100k starts to sync in 10 minutes and after it gets super slow.    I am on debian.    Any idea how to fix that or to speed that up?    Thanks \"\nComment0 :This can be fixed by merging #1516 and #1636 and then reverting #1357.\nComment1 :@andrewtoth I have merged https://github.com/casey/ord/pull/1516 and https://github.com/casey/ord/pull/1636 and reverted https://github.com/casey/ord/pull/1357. It gets to the value set in the --first-inscription-height parameter very quickly. However, afterwards it is extremely slow taking around 1 minute per block. I have built using the cargo build -r command. Any other ideas?\nComment2 :Did you start bitcoind with `-rest` or add `rest=1` in `bitcoin.conf`?\nComment3 :Yes bitcoind is running with the -rest flag\nComment4 :If you run with `RUST_LOG=warn` before the `ord` command does it warn that it can't connect to REST?\nComment5 :No there are no warnings output at all. See below  <img width=\"959\" alt=\"Screenshot 2023-02-10 at 16 36 46\" src=\"https://user-images.githubusercontent.com/17238078/218145965-b0316db6-3b44-40a5-9e57-6821d80d70eb.png\">    Update: It does seem to be using the rest endpoint as when I stop bitcoind running I get the warning that it can't connect to REST.  \nComment6 :Ok, the first blocks are the slowest because every input has to be fetched. As it indexes more blocks, it will already have the previous inputs so less inputs need to be fetched from disk.  It is definitely slower than what I experienced though. 1 minute for a block is too long. What type of hard drive are you using? \nComment7 :It is a virtual HDD with google cloud. Seems to max out at around 80 MiB/s (~600mbps if I am correct), but ord and bitcoind are using a fraction of that. (5-15 MiB/s at most). cpu utilisation is about 1-3% for both processes together too. Ram is 16GB and only using around 600MB\nComment8 :got it working with compile 0.4.2 and using a bootrap file from community\nComment9 :@ChristianGrieger could you share further details please?\nComment10 :1. git clone https://github.com/casey/ord  2. cd folder  3. git checkout 0.4.2  4. cargo build -r  5. download bootstrap file, rename it to index.redb.gz and place/unzip it in /root/.local/share/ord    wget 'https://s3.amazonaws.com/octal.eth/index.redb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVY3HUS3MKQ7N5W5V%2F20230204%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230204T180540Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=db0cf7243e0cced65a5d228714db8fc13f483671bda2860d1264de2ecf84289d'    6. run ord wallet balance   7. done \u2705\ud83d\ude05\nComment11 :> This can be fixed by merging #1516 and #1636 and then reverting #1357.    any chance we can get an executable for this? i'm on 2 days of indexing and its a pain in the ass\nComment12 :> I cloned the repo with `git clone main repo link` After switched branche to 4.0.2 with `git checkout 4.0.2` build it after and added a bootstrap file from community for the db and started it. or what you want to know?    Where did you get the file from?\nComment13 :> This can be fixed by merging #1516 and #1636 and then reverting #1357.    Any help for us git-illiterates?\nComment14 :> Any help for us git-illiterates?    Added the speedup improvements in my branch https://github.com/andrewtoth/ord/tree/speedup-improvements if you'd like to help test/benchmark.    ```  git clone https://github.com/andrewtoth/ord  cd ord  git checkout speedup-improvements  cargo build --release  ```  Make sure you set `rest=1` in `bitcoin.conf` or run `bitcoind -txindex -rest`\nComment15 :> git clone git@github.com:andrewtoth/ord    % git clone git@github.com:andrewtoth/ord  Cloning into 'ord'...  git@github.com: Permission denied (publickey).  fatal: Could not read from remote repository.    Please make sure you have the correct access rights  and the repository exists.\nComment16 :Updated the post, use `git clone https://github.com/andrewtoth/ord` instead.\nComment17 :    Now    > Updated the post, use `git clone https://github.com/andrewtoth/ord` instead.    now fails on cargo line with: zsh: command not found: cargo\nComment18 :Oh I assumed you'd have rust installed. Install rust first, which includes cargo. After the cargo build line you can find `ord` at `./target/release/ord`.\nComment19 :Whoops had a bad merge in there. Fixed. Do a `git pull` and try again.\nComment20 :Success!! Will report back.\nComment21 :I didn't get too far! Running ord:    > error: Manual upgrade required. Expected file format version 109, but file is version 107\nComment22 :Ahh this has a newer db version. You'll have to nuke your previous index file. It should be in `~/.local/share/ord` if you're on linux. Just `rm ~/.local/share/ord/index.redb`.\nComment23 :But... that's 3 day's worth of work! \ud83e\udd74    Will this new one be fast enough to catch me up?\nComment24 :Ahh you can specify a new index file. Run `ord --index ./index.redb index` and it will create one in your current directory.\nComment25 :Well! It just ran through all the indexing in ~10 seconds and returned:    > error: Can't assign requested address (os error 49)\nComment26 :I think I'm wrong, it didn't quite finish all the indexing. It zipped right up to 766244/775968 and then crashed out. If I run it again it goes through a few more blocks and crashes out again.\nComment27 :Yeah it blows through everything until block 767430 in about 10 seconds, then it takes me a little over an hour to sync to tip.  Are you running bitcoind on default port? Do you have rest enabled? Not sure haven't hit that error. Any other configs for your bitcoind?\nComment28 :Yes, default port. Yes to rest.  txindex=1 in bitcoin.conf  server: true in settings.json    Other than that, vanilla, I think.\nComment29 :Hmm not sure what's happening. What OS are you running? It's connecting properly to the P2P interface to be able to sync all headers. It might be breaking on REST. Try running bitcoind with `rest=0` and see if it syncs. It will be much slower but if it doesn't break then there's a bug with my REST patch.\nComment30 :I'm on macOS 13.2. will try rest=0.\nComment31 :Seems to be working better this way. Progressing without crashing now.    767443/775969\nComment32 :Great! Thanks for testing and the bug report. I don't have a Mac unfortunately to be able to debug. I will have to see how that can be fixed.  Please report back with how long it takes to sync. I think it will be much less than 3 days ;).\nComment33 :It seems to be progressing at approximately the same speed as before (slowly!) but at least I got to skip over 100k blocks or so! I may miss the end of indexing tonight if it runs too late, but I'll try to let you know.\nComment34 :> Great! Thanks for testing and the bug report. I don't have a Mac unfortunately to be able to debug. I will have to see how that can be fixed.  >   > Please report back with how long it takes to sync. I think it will be much less than 3 days ;).    Happy to provide any logs or additional testing if it would help.\nComment35 :> Updated the post, use `git clone https://github.com/andrewtoth/ord` instead.    WOW this is significantly fast! ~3min to get to the current block. But somehow after indexing `ord info` returned:  ```  error: JSON-RPC error: RPC error response: RpcError { code: -5, message: \"No such mempool transaction. Blockchain transactions are still in the process of being indexed. Use gettransaction for wallet transactions.\", data: None }  ```\nComment36 :@xerod are you running bitcoind with `-txindex`? You can check its progress with `bitcoin-cli getindexinfo`. The index needs to finish getting to the latest block before this method will work.\nComment37 :> Please report back with how long it takes to sync. I think it will be much less than 3 days ;).    Finished! Took ~2 hours. Thanks!\nComment38 :Amazing! Happy inscribing!\nComment39 :Make sure you set `--fee-rate` right now if you want to get your inscription broadcast. Check mempool.space.\nComment40 :In case anyone runs into issues building because it can't detect the necessary version of rustc, you can run this command in the repo root to resolve that. (Must have rustc managed through rustup)    `rustup override set 1.67`  \nComment41 :>     i just run   wget https://s3.amazonaws.com/octal.eth/index.redb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVY3HUS3MKQ7N5W5V%2F20230204%2Fus-east-1%2Fs3%2Faws4_request&X- Amz-Date=20230204T180540Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=db0cf7243e0cced65a5d228    but get this erro    ![image](https://user-images.githubusercontent.com/105530519/218255541-73d965f9-d99a-4681-81dd-5328f7aac5b0.png)  \nComment42 :> wget 'https://s3.amazonaws.com/octal.eth/index.redb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVY3HUS3MKQ7N5W5V%2F20230204%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230204T180540Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=db0cf7243e0cced65a5d228714db8fc13f483671bda2860d1264de2ecf84289d'    After download rename it to index.redb.gz and unzip it ;)    \nComment43 :> > wget 'https://s3.amazonaws.com/octal.eth/index.redb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVY3HUS3MKQ7N5W5V%2F20230204%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230204T180540Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=db0cf7243e0cced65a5d228714db8fc13f483671bda2860d1264de2ecf84289d'  >   > After download rename it to index.redb.gz and unzip it ;)    403 forbidden  \nComment44 :> > > wget 'https://s3.amazonaws.com/octal.eth/index.redb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVY3HUS3MKQ7N5W5V%2F20230204%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230204T180540Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=db0cf7243e0cced65a5d228714db8fc13f483671bda2860d1264de2ecf84289d'  > >   > >   > > After download rename it to index.redb.gz and unzip it ;)  >   > 403 forbidden    Same, can anyone reupload?\nComment45 :> Hmm not sure what's happening. What OS are you running? It's connecting properly to the P2P interface to be able to sync all headers. It might be breaking on REST. Try running bitcoind with `rest=0` and see if it syncs. It will be much slower but if it doesn't break then there's a bug with my REST patch.    @andrewtoth , could this be why? \"There is a known issue in the REST interface that can cause a node to crash if too many http connections are being opened at the same time because the system runs out of available file descriptors. To prevent this from happening you might want to increase the number of maximum allowed file descriptors in your system and try to prevent opening too many connections to your rest interface at the same time if this is under your control.\"    https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md\nComment46 :So I'm reindexing (again!), this time with the `--index-sats` flag (to allow for rare sat hunting) and it's going... slow... again. Any way to make that process fast, too, or is it necessarily slower as it indexes every sat? It's been running over 4 hours and it's less than halfway done at this point. If it continues at this speed it'll be done in another 4-5 hours which isn't too bad, but if it gets slower and slower like before, it'll be painful!\nComment47 :Running an RPI. The `0.4.2` release had been syncing for about a week and slowed to a crawl around block 350k.    Built `andrewtoth/ord`, got to block ~767k *very* quickly. Then started syncing ~12block/min. Looks like it will be fully synced in ~12 hours. Big improvement if it holds.\nComment48 :@donnlee yeah seems like the library I was using was creating a new connection for every request. I will have to rewrite with keeping a same connection.\nComment49 :don't know how you guys were able to complete indexing in 1-2 hours, even with the fix and txindex fully in-sync I've been running it for 4 hours to complete the last part from where it stopped at ~766k. My rough estimation to time to completion is about ~2.5 hours more but I can confirm when its actually complete. That brings total time to sync at about 6.5 hours. Obviously much faster than without @andrewtoth code but is there something in ord that is bottle necking these speeds? Even btc's txindex, while being slow, is not nearly this slow.\nComment50 :after using @andrewtoth patch it speeds through to 767k but then errors out      thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: receiving on a closed channel    Stack backtrace:     0: ord::index::p2p::Connection::get_headers     1: std::sys_common::backtrace::__rust_begin_short_backtrace     2: core::ops::function::FnOnce::call_once{{vtable.shim}}     3: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/alloc/src/boxed.rs:2000:9        <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/alloc/src/boxed.rs:2000:9        std::sys::unix::thread::Thread::new::thread_start               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/sys/unix/thread.rs:108:17     4: <unknown>     5: <unknown>', src/index/updater.rs:205:44          seems to lead to this line in the code:    `      let headers = conn.get_headers(hash).unwrap();`    tried with both rest=1 and rest=0  \nComment51 :@so7ow I pushed a change to use only a single connection for rest requests. Can you do a `git pull` and then retry syncing without `--index-sats` and have `rest=1` set in bitcoind?  As for syncing with `--index-sats`, it's going to take a long time because you can't skip over most of the blockchain like without it.    @bg-bm that's strange. It's failing to get headers, but it got all the headers all the way to block 767k. Maybe it's breaking somewhere else but that's the error that manifests.\nComment52 :> @so7ow I pushed a change to use only a single connection for rest requests. Can you do a `git pull` and then retry syncing without `--index-sats` and have `rest=1` set in bitcoind? As for syncing with `--index-sats`, it's going to take a long time because you can't skip over most of the blockchain like without it.    With this update and `rest=1` in place I still see the very fast approach to 760000+ and now it appears to be proceeding through indexing the rest without any crash yet as of 767500 and counting.    Any chance the `rest=1` fix will make my `--index-sats` run faster? I'll try that next...\nComment53 :> > @so7ow I pushed a change to use only a single connection for rest requests. Can you do a `git pull` and then retry syncing without `--index-sats` and have `rest=1` set in bitcoind? As for syncing with `--index-sats`, it's going to take a long time because you can't skip over most of the blockchain like without it.  >   > With this update and `rest=1` in place I still see the very fast approach to 760000+ and now it appears to be proceeding through indexing the rest without any crash yet as of 767500 and counting.  >   > Any chance the `rest=1` fix will make my `--index-sats` run faster? I'll try that next...    Does the new changes make the normal index process faster? It seems to be getting exponentially slower to finish even this last part.\nComment54 :>Does the new changes make the normal index process faster? It seems to be getting exponentially slower to finish even this last part.    Yes. It zooms right past all the first part, all the way up to 760000+ and then only takes an hour or two to index the rest (in my experience). Or are you running the earlier version of this patch? That was fast for me too; if that's slow for you, then I don't know. The newest version looks about the same to me.\nComment55 :> Any chance the rest=1 fix will make my --index-sats run faster? I'll try that next...  No `--index-sats` does not use the rest endpoint.\nComment56 :> > Does the new changes make the normal index process faster? It seems to be getting exponentially slower to finish even this last part.  >   > Yes. It zooms right past all the first part, all the way up to 760000+ and then only takes an hour or two to index the rest (in my experience). Or are you running the earlier version of this patch? That was fast for me too; if that's slow for you, then I don't know. The newest version looks about the same to me.    I think its being bottle necked due to hardware limitations, I deployed it to an AWS server and it gets slower and slower.\nComment57 :@jpc4r yeah disk IO is the bottleneck. Running on a laptop with nvme can sync in a few hours.\nComment58 :@andrewtoth thanks for your hardwork!  I've run the last version but the last 8000 blocks will take an other 6 hours for me as this speed :( (mac m1 pro,  with a good internet, 32GB RAM )    - Currently 768138/776122 (8000 blocks left)  - it seems to index  around  2.6blocks/seconds     Anywhere to speed this up? Maybe somewhere can share their `index.redb` file?     Thank you  \nComment59 :after using @andrewtoth patch it shoots to 767 but then I get this error     thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: receiving on a closed channel', src/index/updater.rs:208:29  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace    from stacktrace seems its coming from this line in index/updater.rs:  `let headers = conn.get_headers(hash).unwrap();  `  I put a print in the code.  On the first time round it has loads of data, on second time round it contains  `Err(receiving on a closed channel`    \nComment60 :@nodablock the speed will increase the more blocks get indexed. It is not a linear extrapolation from 767440. It skips all the blocks before. Also, are you running bitcoind with `-rest`?\nComment61 :> @so7ow I pushed a change to use only a single connection for rest requests. Can you do a `git pull` and then retry syncing without `--index-sats` and have `rest=1` set in bitcoind? As for syncing with `--index-sats`, it's going to take a long time because you can't skip over most of the blockchain like without it.  >   > @bg-bm that's strange. It's failing to get headers, but it got all the headers all the way to block 767k. Maybe it's breaking somewhere else but that's the error that manifests.    sorry I missed your response.  I thought my first post didnt go through and posted again.  Let me try a pull.    Thanks\nComment62 :@bg-bm what platform are you running on? How is your bitcoind configured?\nComment63 :now running on ubuntu version 22.  (was running on 18 and thought that was the reason so upgraded to 22)    config is messy - I tried varioius combinations to see if error would go away:  tried setting these on and off in bitcoind config  rest=1  server=1    tried with and without these  rpcbind=127.0.0.1  rpcallowip=127.0.0.1    rest were standard    will try with only \"rest=1\"    \nComment64 :You need `txindex=1`. You also need to wait until it syncs. You can check progress with `bitcoon-cli getindexinfo`.\nComment65 :sorry yes got `txindex=1`    tried with new pull, but same error:    thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: receiving on a closed channel      at  ...     5: <unknown>', src/index/updater.rs:211:44  \nComment66 :..and getindexinfo shows    {    \"txindex\": {      \"synced\": true,      \"best_block_height\": 776125    }  }  \nComment67 :Can you paste your entire `bitcoin.conf` and the options you pass in command line? Is it running on the same machine?\nComment68 :> Also, are you running bitcoind with `-rest`?    I have to run without otherwise ord complains with   ```  ./ord --cookie-file=/pathto/bitcoin-core-data/.cookie --data-dir=/pathto/bitcoin-core-data/ wallet balance  error: Can't assign requested address (os error 49)  ```  my config :   ```  server=1  txindex=1  datadir=/Users/eric/workspace/bitcoin-core-data/  rpcconnect=127.0.0.1  rpcport=8332  maxmempool=900    # rest=1     ```\nComment69 :@nodablock does it still give you that error after the latest commit I pushed?\nComment70 :> > Any chance the rest=1 fix will make my --index-sats run faster? I'll try that next... >  > No `--index-sats` does not use the rest endpoint.  Ok, I get that it's gonna be slower. Does it necessarily have to be *as* increasingly slow as it is? I got to maybe 40% done in 4 hours, then only up to maybe 50% over the next ~5 hours. I can't do the math but as it slows it feels like it's gonna take days again. Is there no config to tweak that performance? (This is on a fairly beefy MacBook Pro: M1 Max, 32 GB, fast internal SSD for ord data, USB-C SSD for bitcoin data.)\nComment71 :oh snap!  just realised as I was pasting the lines in the conf that this was set!:    maxuploadtarget=70    I just removed it and its now ticking!  although it seems like its ticking very slowly at 767430... moved 2 blocks in one minute        my bitcoin.conf:    blocksdir=/home/bitcoin/blocks  daemon=1  datadir=/home/bitcoin  txindex=1  maxuploadtarget=70  rest=1  debuglogfile=/home/bitcoin/debug.log  rpccookiefile=/home/bitcoin/.cookie  walletdir=/home/ubuntu/.bitcoin/wallets            \nComment72 :top shows ord process is only using 0.3% cpu.  weird\nComment73 :> @nodablock does it still give you that error after the latest commit I pushed?    pulled the latest changed, and rebuilt, it works without error with `rest=1` !   But still feel slow ...\nComment74 :@bg-bm @nodablock great that it's working for both of you! You should both be synced in a few hours vs a few days. Can't expect miracles though hopefully my changes will get merged and we can look for further improvements.  @so7ow there are other improvements to make --index-sats faster, but the changes here are to get people synced reasonably fast with normal sync so they can make inscriptions. So out of scope for this patch set.\nComment75 :@andrewtoth thanks sooo much for your help and time.  Its much appreciated! \nComment76 :> top shows ord process is only using 0.3% cpu. weird  Yeah it's disk IO bound at first as it fills cache. The bigger the cache the faster it can go. Unfortunately it empties the cache every 5k blocks too. See https://github.com/casey/ord/issues/1630.\nComment77 :@andrewtoth what is weird is that my SSD is pretty fast, just test it and it writes at 3500Mb/sec. I also have plenty of memory left. \nComment78 :hmm.. should I expect about 1 block a minute at the start?   is that how slow it starts off or is that unexpectedly slow?    currently on 767481/776132, so 8.6k left\nComment79 :That seems somewhat slow, yeah. But probably best to just leave it overnight and it should finish.\nComment80 :@andrewtoth HUGE thanks for your latest commit, I'm on macos and had the same error 49. thanks so much!!\nComment81 :> Anywhere to speed this up? Maybe somewhere can share their `index.redb` file?    There's a torrent with index.redb mentioned in the Ordinal discord. However, it may not be compatible with latest ord release 0.5.0\nComment82 :@andrewtoth , you mentioned this patch might get merged (yay!). Can I please understand basically what does the patch do to hyperjump us to block 760K ?  Thank you!\nComment83 :> remove it    oh @nodablock could you please share again? on discord if you want.  thanks\nComment84 :I have made mine available : ~https://pub-c9fa6ab0d4774707a8afa74019db69ea.r2.dev/createordinals.com_index.redb~  It works with https://github.com/andrewtoth/ord branch speedup-improvements    Shameless plug: feel free to visit/share [createordinals.com](https://createordinals.com/) or https://twitter.com/createordinals if you like it    edit: remove the link since it costed me a lot and got 300+ downloads, but feel free to ask me in private on twitter   \nComment85 :thanks @nodablock got the file - you are a saviour!    just given you a follow (@BlockGenerative)     thanks so much!  \nComment86 :@donnlee to skip indexing blocks before the first block with an inscription, it reverts #1357. That is the most important one, and it hasn't really been explained to me why it was made (see https://github.com/casey/ord/issues/1364).    So because it skips indexing past blocks, it doesn't know the input values of new blocks once it hits the first inscription block. It has to fetch every input transaction and get its output value, which is very slow. As we index more and more blocks though this becomes more rare, because more new transactions will spend more recent inputs which we've now indexed. By not skipping any blocks, we never have to fetch previous inputs though because we have indexed them all. However, that requires indexing every block which is even slower.    I suspect that it was disabled because it was causing the RPC server to fall over from too many requests. This was because a background thread was using RPC to fetch block hashes and blocks, and the main thread was using RPC to fetch missing transactions. So my patch also uses the P2P interface to fetch headers and blocks, which is much more efficient than using the RPC interface for that. I optionally also try and use the REST interface to fetch the missing transactions, because it is more efficient than RPC for that as well (see https://github.com/casey/ord/issues/1558#issuecomment-1421864816). But, after seeing the Mac errors and having to rewrite it using only a single connection, it seems like it might not be that much of an improvement. See https://github.com/casey/ord/pull/1636#issuecomment-1427061691.  But without using the RPC interface on a background thread, it doesn't cause RPC server to fall over so I think this should be re-enabled with just the P2P interface for now.\nComment87 :Is this speedup patch included in 0.5.0 release?\nComment88 :@so7ow I just pushed an update to the REST library I am using. I was wondering if you could pull it down and try running it with `rest=1` on your Mac? Hopefully it works on Macs too. Also if it works let me know if it's noticeably faster.\nComment89 :> @so7ow I just pushed an update to the REST library I am using. I was wondering if you could pull it down and try running it with `rest=1` on your Mac? Hopefully it works on Macs too. Also if it works let me know if it's noticeably faster.  Won't be able to run it until tomorrow. Does the 0.5.0 release that dropped have any of this speedup tech in it? Casey said it was supposed to be faster. \nComment90 :@so7ow doesn't seem like it https://github.com/casey/ord/blob/master/CHANGELOG.md. I think these changes need a little more testing.\nComment91 :If anyone else following this issue has a Mac and can test my latest branch commit that would be awesome.\nComment92 :I'm on my phone, but if there isn't a bug or feature request here, and there isn't another issue covering indexing being slow, could we move this to a discussion? Lots of great work here though, you love to see it \ud83d\udcaa\nComment93 :> @so7ow I just pushed an update to the REST library I am using. I was wondering if you could pull it down and try running it with `rest=1` on your Mac? Hopefully it works on Macs too. Also if it works let me know if it's noticeably faster.    This appears to be working as expected on macOS. It quickly skipped past the early blocks and is now chugging through the last chunk of blocks.  @andrewtoth indexing completed successfully. Much faster than previous attempt. I actually missed the end of indexing but it was well under an hour. Maybe about 30-40 minutes. \nComment94 :> > @so7ow I just pushed an update to the REST library I am using. I was wondering if you could pull it down and try running it with `rest=1` on your Mac? Hopefully it works on Macs too. Also if it works let me know if it's noticeably faster.  >   > This appears to be working as expected on macOS. It quickly skipped past the early blocks and is now chugging through the last chunk of blocks.  >   > @andrewtoth indexing completed successfully. Much faster than previous attempt. I actually missed the end of indexing but it was well under an hour. Maybe about 30-40 minutes.    What is your conf file and how did you start your btc node? I got 2000 blocks in 24 hours.\nComment95 :> What is your conf file and how did you start your btc node? I got 2000 blocks in 24 hours.    My config is pretty minimal...    Node start:  `bitcoind -datadir=<path>`    bitcoin.conf:  >txindex=1  >rest=1  >server=1\nComment96 :@dude513 I made a substantial improvement within the last 24 hours to my branch. Please do a `git pull` and rebuild. Make sure you have `rest=1` in your `bitcoin.conf`.\nComment97 :indexing is ord full 0.5.0 spec, yes? thanks\nComment98 :> @dude513 I made a substantial improvement within the last 24 hours to my branch. Please do a `git pull` and rebuild. Make sure you have `rest=1` in your `bitcoin.conf`.    It is much better thank you, I might get all blocks in a day.\nComment99 :> @dude513 I made a substantial improvement within the last 24 hours to my branch. Please do a `git pull` and rebuild. Make sure you have `rest=1` in your `bitcoin.conf`.    I checked out your speedup-improvements branch and built it. I run it and it indexes in sub 20 seconds up until this transaction.     https://www.blockchain.com/explorer/transactions/btc/d3809ca38fe9e0ce3d47ac3fd47af5054b13e99e3662ba4ee1fd38e2b0908897    `error: failed to get transaction for d3809ca38fe9e0ce3d47ac3fd47af5054b13e99e3662ba4ee1fd38e2b0908897`    I tried running remaining index with casey/ord v0.5.0 after merging the main branch into yours (rather than just update SCHEMA_VERSION so the versions line up but it comes back with this error:    `error: reorg detected at or before 764999`    My `bitcoin.conf`     ```bash    # [core]  # Maintain a full transaction index, used by the getrawtransaction rpc call.  txindex=1    # [rpc]  # Accept command line and JSON-RPC commands.  server=1  # Accept public REST requests.  rest=1      # [Sections]  # Most options automatically apply to mainnet, testnet, and regtest networks.  # If you want to confine an option to just one network, you should add it in the relevant section.  # EXCEPTIONS: The options addnode, connect, port, bind, rpcport, rpcbind and wallet  # only apply to mainnet unless they appear in the appropriate section below.    # Options only for mainnet  [main]    # Options only for testnet  [test]    # Options only for regtest  [regtest]  ```  Both --bitcoin-data-dir and --data-dir set to folders on a mounted volume", "reactionGroups": {"THUMBS_UP": 11, "HEART": 7, "HOORAY": 3, "ROCKET": 3, "EYES": 3}}, {"number": 1639, "title": "Question...is the @ordinalswallet on twitter your account", "summary": "{\"summary\": \"Inquiry about the ownership of the Twitter account @ordinalswallet\", \"sentiment\": \"neutral\", \"labels\": [\"social media\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Inquiry about the ownership of the Twitter account @ordinalswallet", "sentiment": "neutral", "labels": ["social media"]}}, {"number": 1638, "title": "regtest: generating 102 blocks for coinbase maturity with bitcoin core will then make ord say \"error: reorg detected at or before 101\"", "summary": "{\"summary\": \"User is experiencing issues with generating more than 101 blocks for coinbase maturity with Bitcoin Core and getting 'error: reorg detected at or before 101' on ord wallet commands\", \"sentiment\": \"confused\", \"labels\": [\"Bitcoin Core\", \"ord wallet\", \"regtest\", \"error\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is experiencing issues with generating more than 101 blocks for coinbase maturity with Bitcoin Core and getting 'error: reorg detected at or before 101' on ord wallet commands", "sentiment": "confused", "labels": ["Bitcoin Core", "ord wallet", "regtest", "error"]}}, {"number": 1635, "title": "Create a guide that shows users how to run ord on a server", "summary": "{\"summary\": \"User suggests creating a guide to run 'ord' on a server\", \"sentiment\": \"positive\", \"labels\": [\"documentation\", \"server-setup\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "User suggests creating a guide to run 'ord' on a server", "sentiment": "positive", "labels": ["documentation", "server-setup"]}}, {"number": 1633, "title": "Debug null output inscriptions", "summary": "{\"summary\": \"Issue with null output inscriptions\", \"sentiment\": \"concerned\", \"labels\": [\"mining\", \"bug\", \"explorer\", \"analysis\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue with null output inscriptions", "sentiment": "concerned", "labels": ["mining", "bug", "explorer", "analysis"]}}, {"number": 1632, "title": "Make inscriptions wider", "summary": "{\"summary\": \"User requests wider inscriptions on the /inscriptions page\", \"sentiment\": \"neutral\", \"labels\": [\"user-interface\", \"feature-request\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User requests wider inscriptions on the /inscriptions page", "sentiment": "neutral", "labels": ["user-interface", "feature-request"]}}, {"number": 1630, "title": "Commit to redb based on memory instead of blocks processed", "summary": "{\"summary\": \"Proposal to modify the commit logic of redb to be based on memory instead of fixed blocks processed for effective cache usage while keeping the commit times consistent\", \"sentiment\": \"optimistic\", \"labels\": [\"performance\", \"cache\", \"configuration\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Proposal to modify the commit logic of redb to be based on memory instead of fixed blocks processed for effective cache usage while keeping the commit times consistent", "sentiment": "optimistic", "labels": ["performance", "cache", "configuration"]}}, {"number": 1628, "title": "install: error: Could not determine target from output of `uname -m`-`uname -s`", "summary": "{\"summary\": \"Error occurred while trying to install 'ord' package due to inability to determine target from output of `uname -m`-`uname -s`\", \"sentiment\": \"frustrated\", \"labels\": [\"installation\", \"package-manager\"]}", "reactionGroups": {"HOORAY": 1}, "summaryJson": {"summary": "Error occurred while trying to install 'ord' package due to inability to determine target from output of `uname -m`-`uname -s`", "sentiment": "frustrated", "labels": ["installation", "package-manager"]}}, {"number": 1626, "title": "Inscriptions not getting sent to mempool", "summary": "{\"summary\": \"Users are experiencing issues with inscriptions not getting sent to mempool despite adequate fee rates\", \"sentiment\": \"frustrated\", \"labels\": [\"wallet\", \"network-issues\", \"user-support\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Users are experiencing issues with inscriptions not getting sent to mempool despite adequate fee rates", "sentiment": "frustrated", "labels": ["wallet", "network-issues", "user-support"]}}, {"number": 1623, "title": "Documentation on manual index.redb upgrade", "summary": "{\"summary\": \"Users are experiencing issues with a manual upgrade of index.redb without clear documentation.\", \"sentiment\": \"frustrated\", \"labels\": [\"documentation\", \"user-support\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 3, "EYES": 1}, "summaryJson": {"summary": "Users are experiencing issues with a manual upgrade of index.redb without clear documentation.", "sentiment": "frustrated", "labels": ["documentation", "user-support", "bug"]}}, {"number": 1621, "title": "Provide a library for building web wallets", "summary": "{\"summary\": \"Request for a library to build web wallets with cdylib version for wasm distribution\", \"sentiment\": \"neutral\", \"labels\": [\"web-wallet\", \"library\", \"wasm\", \"cdylib\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request for a library to build web wallets with cdylib version for wasm distribution", "sentiment": "neutral", "labels": ["web-wallet", "library", "wasm", "cdylib"]}}, {"number": 1611, "title": "Issues with first-hash-mines method of pushing reveal costs to minters", "summary": "{\"summary\": \"Concerns over first-hash-mines method of pushing reveal costs to minters\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"transaction fees\", \"mining\", \"mempool congestion\", \"transaction spam\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Concerns over first-hash-mines method of pushing reveal costs to minters", "sentiment": "neutral", "labels": ["blockchain", "transaction fees", "mining", "mempool congestion", "transaction spam"]}}, {"number": 1609, "title": "Package ord for as many package managers as possible", "summary": "{\"summary\": \"Effort to get `ord` package into as many package managers as possible\", \"sentiment\": \"neutral\", \"labels\": [\"package-management\", \"community-support\"]}\"", "reactionGroups": {"THUMBS_UP": 3}}, {"number": 1606, "title": "Prevent inscriptions from requesting camera access", "summary": "{\"summary\": \"Users are finding the camera access request pop-up to be annoying and creepy while using inscriptions, suggesting to implement content security policy headers to prevent such requests\", \"sentiment\": \"requesting action\", \"labels\": [\"web development\", \"user-experience\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Users are finding the camera access request pop-up to be annoying and creepy while using inscriptions, suggesting to implement content security policy headers to prevent such requests", "sentiment": "requesting action", "labels": ["web development", "user-experience"]}}, {"number": 1604, "title": "Do something useful when an ord binary is double-clicked in Windows, MacOS, or Linux", "summary": "{\"summary\": \"Proposal to improve user experience when launching plain binaries in various operating systems\", \"sentiment\": \"positive\", \"labels\": [\"user-experience\", \"operating-systems\", \"development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to improve user experience when launching plain binaries in various operating systems", "sentiment": "positive", "labels": ["user-experience", "operating-systems", "development"]}}, {"number": 1595, "title": "Show mnemonic after creation with `wallet mnemonic`", "summary": "{\"summary\": \"Discussion about showing mnemonic after `wallet mnemonic` command\", \"sentiment\": \"concerned\", \"labels\": [\"security\", \"user-experience\", \"wallet\", \"command-line-interface\"]}\"", "reactionGroups": {}}, {"number": 1592, "title": "Performance metrics", "summary": "{\"summary\": \"User seeks advice on how to measure performance metrics for UX on ordinals.com without adding JS analytics\", \"sentiment\": \"neutral\", \"labels\": [\"web-performance\", \"cloudflare\", \"user-analytics\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User seeks advice on how to measure performance metrics for UX on ordinals.com without adding JS analytics", "sentiment": "neutral", "labels": ["web-performance", "cloudflare", "user-analytics"]}}, {"number": 1590, "title": "Allow previewing the effect of a transaction", "summary": "{\"summary\": \"User requests to add a feature for previewing manually constructed transactions.\", \"sentiment\": \"neutral\", \"labels\": [\"transaction-preview\", \"feature-request\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User requests to add a feature for previewing manually constructed transactions.", "sentiment": "neutral", "labels": ["transaction-preview", "feature-request"]}}, {"number": 1589, "title": "Trigger wallet rescan on wallet import/restore", "summary": "{\"summary\": \"Users are reporting issues with newly imported wallets not showing inscriptions\", \"sentiment\": \"concerned\", \"labels\": [\"wallet\", \"bitcoin-core\"]}\"", "reactionGroups": {"THUMBS_UP": 3}}, {"number": 1588, "title": "Burn addresses", "summary": "{\"summary\": \"Proposal for a burn address format using bech32m and OP_RETURN to indicate inscription has been burned\", \"sentiment\": \"neutral\", \"labels\": [\"protocol\", \"blockchain\", \"address-format\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal for a burn address format using bech32m and OP_RETURN to indicate inscription has been burned", "sentiment": "neutral", "labels": ["protocol", "blockchain", "address-format"]}}, {"number": 1586, "title": "Add prettier config/ignore", "summary": "{\"summary\": \"Proposal to add prettier config/ignore to improve developer experience with consistent formatting\", \"sentiment\": \"positive\", \"labels\": [\"developer-experience\", \"documentation\", \"code-formatting\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add prettier config/ignore to improve developer experience with consistent formatting", "sentiment": "positive", "labels": ["developer-experience", "documentation", "code-formatting"]}}, {"number": 1582, "title": "Repair Inscription Previews in Discord", "summary": "{\"summary\": \"Issue with Discord link previews not displaying content properly\", \"sentiment\": \"neutral\", \"labels\": [\"Discord\", \"link previews\", \"bug\"]}", "reactionGroups": {"HEART": 2, "THUMBS_UP": 2}, "summaryJson": {"summary": "Issue with Discord link previews not displaying content properly", "sentiment": "neutral", "labels": ["Discord", "link previews", "bug"]}}, {"number": 1581, "title": "Consider making `ord index` recover from errors like `ord server`", "summary": "{\"summary\": \"Proposal to address `ord index` crashes\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"technical-debt\"]\"}", "reactionGroups": {}}, {"number": 1576, "title": "Consider turning on mempoolfullrbf on the ordinals.com bitcoin core instances", "summary": "{\"summary\": \"Proposal to turn on mempoolfullrbf on ordinals.com nodes, with discussion on its potential benefits and drawbacks\", \"sentiment\": \"neutral\", \"labels\": [\"Bitcoin\", \"mempool\",\"network-enhancement\"]}", "reactionGroups": {"THUMBS_UP": 1, "HEART": 1}, "summaryJson": {"summary": "Proposal to turn on mempoolfullrbf on ordinals.com nodes, with discussion on its potential benefits and drawbacks", "sentiment": "neutral", "labels": ["Bitcoin", "mempool", "network-enhancement"]}}, {"number": 1575, "title": "Add terminology guide", "summary": "{\"summary\": \"User requests to add a terminology guide to clarify confusion over terms such as ordinals and inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"user-support\", \"community-management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User requests to add a terminology guide to clarify confusion over terms such as ordinals and inscriptions", "sentiment": "neutral", "labels": ["documentation", "user-support", "community-management"]}}, {"number": 1574, "title": "Show spinner during db commits", "summary": "Title: \"Show spinner during db commits\"\nBody: \"Every 5k blocks the db is flushed to disk. This can take a long time and users just think the indexing has stopped. Showing some type of progress in the status bar could help with this.\"\nComment0 :I'd love to show a progress bar. I'm not sure if the delay is on our side, or on the redb side. If it's the latter, this might require support from redb.\nComment1 :Can't we have progress updated on its own thread? It would just listen on a channel for height updates or to show commit progress and show `.`, `..`, `...`, repeating while its committing? So users don't think its frozen?\nComment2 :Redb is ACID, so commits are all or nothing, and partial commits will never be visible, so if the issue is long redb commits, we can't get height updates. Moving the progress bar into its own thread would work, but the progress bar displays progress based on block height. Adding a spinner to it would be good. Does indicatif support this? If so, adding a spinner might be a one-line change.\nComment3 :I made a [great spinner for imdl, a bittorrent utility](https://github.com/casey/intermodal/blob/2a748fc5338db865d634578f95354db792f19d96/src/consts.rs#L45) so we could reuse the characters from that, which count from 0 to 255 in binary using braille.\nComment4 :Right, I meant spinner. Sorry for the confusion. I understand we can't show progress of how far along, but we can show to the user that the application is not frozen by updating a spinner.  \nComment5 :> Right, I meant spinner. Sorry for the confusion. I understand we can't show progress of how far along, but we can show to the user that the application is not frozen by updating a spinner.    Ideally with an explanatory comment along the lines of \"Committing batch, this may take up to 5 minutes...\"    Otherwise to the user it may just look frozen _with style_.", "reactionGroups": {"EYES": 1, "THUMBS_UP": 1}}, {"number": 1570, "title": "Donate command", "summary": "{\"summary\": \"Proposal to create a 'donate' command in the wallet\", \"sentiment\": \"enthusiastic\", \"labels\": [\"wallet\", \"donation\", \"user-interface\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to create a 'donate' command in the wallet", "sentiment": "enthusiastic", "labels": ["wallet", "donation", "user-interface"]}}, {"number": 1569, "title": "Weird error with specific test configuration", "summary": "{\"summary\": \"Code change in src/index.rs gives assertion failures in specific tests\", \"sentiment\": \"frustrated\", \"labels\": [\"testing\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Code change in src/index.rs gives assertion failures in specific tests", "sentiment": "frustrated", "labels": ["testing", "bug"]}}, {"number": 1568, "title": "Track test coverage on CI", "summary": "{\"summary\": \"Proposal to track test coverage on CI\", \"sentiment\": \"positive\", \"labels\": [\"CI\", \"test coverage\", \"rust\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Proposal to track test coverage on CI", "sentiment": "positive", "labels": ["CI", "test coverage", "rust"]}}, {"number": 1566, "title": "Possible timeout to bitcoin core on `inscribe`", "summary": "{\"summary\": \"Users are encountering a `JSON-RPC` error on `inscribe` commands, and it may be due to an outdated version of `rust-jsonrpc`. Users are seeking solutions and a possible update.\", \"sentiment\": \"concerned\", \"labels\": [\"bug\", \"code-enhancement\", \"developer-tools\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Users are encountering a `JSON-RPC` error on `inscribe` commands, and it may be due to an outdated version of `rust-jsonrpc`. Users are seeking solutions and a possible update.", "sentiment": "concerned", "labels": ["bug", "code-enhancement", "developer-tools"]}}, {"number": 1560, "title": "Statically link prebuilt ord binaries", "summary": "{\"summary\": \"Issue with statically linking prebuilt ord binaries\", \"sentiment\": \"frustrated\", \"labels\": [\"dependencies\", \"installation\", \"compilation\"]}", "reactionGroups": {"THUMBS_UP": 3}, "summaryJson": {"summary": "Issue with statically linking prebuilt ord binaries", "sentiment": "frustrated", "labels": ["dependencies", "installation", "compilation"]}}, {"number": 1559, "title": "Signet hosed", "summary": "{\"summary\": \"Signet.ordinals.com is currently down due to a redeploy error\", \"sentiment\": \"frustrated\", \"labels\": [\"web-development\", \"bug\"]}", "reactionGroups": {"EYES": 1, "THUMBS_UP": 2}, "summaryJson": {"summary": "Signet.ordinals.com is currently down due to a redeploy error", "sentiment": "frustrated", "labels": ["web-development", "bug"]}}, {"number": 1558, "title": "Explore bitcoind REST interface", "summary": "{\"summary\": \"Exploring the use of bitcoind REST interface as a more suitable interface than RPC\", \"sentiment\": \"positive\", \"labels\": [\"REST\", \"RPC\", \"HTTP\", \"benchmarking\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Exploring the use of bitcoind REST interface as a more suitable interface than RPC", "sentiment": "positive", "labels": ["REST", "RPC", "HTTP", "benchmarking"]}}, {"number": 1555, "title": "Build and upload index.redb on CI", "summary": "{\"summary\": \"Proposal to create a job on CI that builds and uploads index.redb file to an artifact store periodically\", \"sentiment\": \"neutral\", \"labels\": [\"continuous-integration\", \"performance\", \"artifact-management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to create a job on CI that builds and uploads index.redb file to an artifact store periodically", "sentiment": "neutral", "labels": ["continuous-integration", "performance", "artifact-management"]}}, {"number": 1554, "title": "Is index.redb deterministic?", "summary": "{\"summary\": \"Determining if index.redb is deterministic and exploring ways to sign it for security purposes\", \"sentiment\": \"neutral\", \"labels\": [\"security\", \"development\", \"determinism\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Determining if index.redb is deterministic and exploring ways to sign it for security purposes", "sentiment": "neutral", "labels": ["security", "development", "determinism"]}}, {"number": 1553, "title": "Label good first issues", "summary": "{\n\"summary\": \"Request to label 'good-first-issue' on GitHub issues\",\n\"sentiment\": \"neutral\",\n\"labels\": [\"GitHub\", \"documentation\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "Request to label 'good-first-issue' on GitHub issues", "sentiment": "neutral", "labels": ["GitHub", "documentation"]}}, {"number": 1550, "title": "Make ord-dev instances accessible", "summary": "{\"summary\": \"User is unable to access the ord-dev service at http://ordinals.net:8080/ due to redirects\", \"sentiment\": \"frustrated\", \"labels\": [\"web-development\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is unable to access the ord-dev service at http://ordinals.net:8080/ due to redirects", "sentiment": "frustrated", "labels": ["web-development", "bug"]}}, {"number": 1548, "title": "Arbitrary Protocols for Envelopes", "summary": "{\"summary\": \"Proposal to implement initial support of arbitrary protocols for envelopes allowing developers to create additional protocols as extensions of the `ord` protocol\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"protocol\", \"bitcoin\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to implement initial support of arbitrary protocols for envelopes allowing developers to create additional protocols as extensions of the `ord` protocol", "sentiment": "neutral", "labels": ["feature-request", "protocol", "bitcoin"]}}, {"number": 1544, "title": "Allow passing options in config file", "summary": "{\"summary\": \"User is requesting the ability to pass options in a config file instead of repeatedly passing them on the command line\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"configuration\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "User is requesting the ability to pass options in a config file instead of repeatedly passing them on the command line", "sentiment": "neutral", "labels": ["enhancement", "configuration"]}}, {"number": 1542, "title": "Improve text preview when content is not UTF-8", "summary": "{\"summary\": \"Improvement needed for text preview when content is not in UTF-8 format\", \"sentiment\": \"neutral\", \"labels\": [\"user-interface\", \"enhancement\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Improvement needed for text preview when content is not in UTF-8 format", "sentiment": "neutral", "labels": ["user-interface", "enhancement"]}}, {"number": 1541, "title": "Include request details in error log", "summary": "{\"summary\": \"Request details not being included in error logs\", \"sentiment\": \"neutral\", \"labels\": [\"logging\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request details not being included in error logs", "sentiment": "neutral", "labels": ["logging", "bug"]}}, {"number": 1539, "title": "Add content hash", "summary": "{\"summary\": \"Feature request to display content hash on /inscription\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\"]}", "reactionGroups": {"EYES": 1}, "summaryJson": {"summary": "Feature request to display content hash on /inscription", "sentiment": "neutral", "labels": ["enhancement"]}}, {"number": 1538, "title": "Add command to \"top up\" postage on inscribed UTXO", "summary": "{\"summary\": \"Proposal to add a command to refill or top up the postage on an inscribed sat in a UTXO\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"transaction\", \"UTXO management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add a command to refill or top up the postage on an inscribed sat in a UTXO", "sentiment": "neutral", "labels": ["wallet", "transaction", "UTXO management"]}}, {"number": 1534, "title": "Add option to generate minimal bitcoind config", "summary": "{\"summary\": \"Proposal to add an option to generate minimal bitcoind config\", \"sentiment\": \"neutral\", \"labels\": [\"configuration\", \"enhancement\", \"good-first-issue\"]}", "reactionGroups": {"THUMBS_UP": 1, "HEART": 2}, "summaryJson": {"summary": "Proposal to add an option to generate minimal bitcoind config", "sentiment": "neutral", "labels": ["configuration", "enhancement", "good-first-issue"]}}, {"number": 1533, "title": "Meme ordinal punk airdrop to binance incident", "summary": "Based on the limited information provided, we cannot generate a summary, sentiment analysis, or labels for this issue. In order to provide a comprehensive response, we need further details about the incident and the discussion surrounding it. Please provide additional information.", "reactionGroups": {}}, {"number": 1532, "title": "Deploy latest version", "summary": "{\"summary\": \"Deployment of the latest version is needed\", \"sentiment\": \"neutral\", \"labels\": [\"deployment\", \"version-control\"]\"}", "reactionGroups": {}}, {"number": 1531, "title": "Reenable http to https redirect", "summary": "{\"summary\": \"Proposal to re-enable HTTP to HTTPS redirect with one line config change due to recent updates in cert-checking by cloudflare\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"infrastructure\", \"config-management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to re-enable HTTP to HTTPS redirect with one line config change due to recent updates in cert-checking by cloudflare", "sentiment": "neutral", "labels": ["web-development", "infrastructure", "config-management"]}}, {"number": 1530, "title": "Encourage smaller inscriptions", "summary": "{\"summary\": \"Proposal to encourage the use of smaller image formats and SVG for website inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"image-optimization\"]}", "reactionGroups": {"HEART": 1, "ROCKET": 2}, "summaryJson": {"summary": "Proposal to encourage the use of smaller image formats and SVG for website inscriptions", "sentiment": "neutral", "labels": ["web-development", "image-optimization"]}}, {"number": 1526, "title": "Improve cloudflare cache hit rate", "summary": "{\"summary\": \"Issue pertains to improving cloudflare cache hit rate\", \"sentiment\": \"\", \"labels\": [\"web-performance\", \"cloudflare\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue pertains to improving cloudflare cache hit rate", "sentiment": "", "labels": ["web-performance", "cloudflare"]}}, {"number": 1521, "title": "Allow making AVIF inscriptions", "summary": "{\"summary\": \"Proposal to allow making AVIF inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"browser-support\", \"image-format\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to allow making AVIF inscriptions", "sentiment": "neutral", "labels": ["browser-support", "image-format"]}}, {"number": 1519, "title": "Allow fee-bumping transactions", "summary": "{\"summary\": \"Proposal to add fee-bumping transactions feature to Ord wallet, discussion of various solutions to recover stuck inscriptions due to low fees\", \"sentiment\": \"hopeful\", \"labels\": [\"wallet\", \"transaction\", \"fee-bumping\", \"user-support\", \"bitcoin-cli\", \"raw-transaction\"]}", "reactionGroups": {"THUMBS_UP": 16, "EYES": 4, "THUMBS_DOWN": 1, "HOORAY": 1, "ROCKET": 2}, "summaryJson": {"summary": "Proposal to add fee-bumping transactions feature to Ord wallet, discussion of various solutions to recover stuck inscriptions due to low fees", "sentiment": "hopeful", "labels": ["wallet", "transaction", "fee-bumping", "user-support", "bitcoin-cli", "raw-transaction"]}}, {"number": 1518, "title": "I get `error: Database already open. Cannot acquire lock.` when I try to run various commands. Is this related? I see he had a similar error above.", "summary": "{\"summary\": \"User is experiencing 'error: Database already open. Cannot acquire lock.' error while running 'ord' and 'bitcoin-cli' commands\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"user-support\", \"commands\", \"wallet\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is experiencing 'error: Database already open. Cannot acquire lock.' error while running 'ord' and 'bitcoin-cli' commands", "sentiment": "neutral", "labels": ["bug", "user-support", "commands", "wallet"]}}, {"number": 1514, "title": "community Content Moderation of ordionals.com suggestion.", "summary": "{\"summary\": \"Suggestion for community content moderation on ordionals.com using bitcoin/lightning payments for flagging and reviewing image content\", \"sentiment\": \"mixed\", \"labels\": [\"content-moderation\", \"bitcoin\", \"community-engagement\", \"payment-system\", \"user-feedback\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Suggestion for community content moderation on ordionals.com using bitcoin/lightning payments for flagging and reviewing image content", "sentiment": "mixed", "labels": ["content-moderation", "bitcoin", "community-engagement", "payment-system", "user-feedback"]}}, {"number": 1507, "title": "Export descriptor", "summary": "{\"summary\": \"User requests ability to export xpub and xprv descriptor for watch-only wallet and backup purposes\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"feature-request\"]}\"", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 1505, "title": "Read audio file tags", "summary": "{\"summary\": \"User is requesting to read audio file tags for a better audio preview\", \"sentiment\": \"neutral\", \"labels\": [\"audio\", \"file-format\", \"user-experience\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is requesting to read audio file tags for a better audio preview", "sentiment": "neutral", "labels": ["audio", "file-format", "user-experience"]}}, {"number": 1504, "title": "See all inscriptions in the same block", "summary": "Based on the title only, it seems like the issue might be related to blockchain technology. However, without any additional context or body text, it's difficult to provide a more detailed summary or relevant labels. Additionally, there is no sentiment expressed in the title.", "reactionGroups": {"ROCKET": 1}}, {"number": 1502, "title": "Use p2p for fetching blocks from bitcoind instead of rpc", "summary": "{\"summary\": \"Proposal to use p2p instead of rpc for faster fetching of raw blocks\", \"sentiment\": \"neutral\", \"labels\": [\"performance\", \"blockchain\", \"networking\"]}", "reactionGroups": {"THUMBS_UP": 2, "EYES": 3}, "summaryJson": {"summary": "Proposal to use p2p instead of rpc for faster fetching of raw blocks", "sentiment": "neutral", "labels": ["performance", "blockchain", "networking"]}}, {"number": 1501, "title": "Vanilla inscriptions", "summary": "Title: \"Vanilla inscriptions\"\nBody: \"Hello! Impressive work done here.    I'm interested in the inscription functionality by itself, decoupled from ordinals.    1. Is it possible? If it is, its identifier would just be a txid?  2. Do you know about a project that already does this? If not, will this functionality be something this project will work on? Or should I fork this repo and try (would need to learn rust/taproot) to make it work?    I'm interested in this because I'm looking for a simple and efficient way to write arbitrary data in Bitcoin just like ordinal inscriptions do, but without all the overhead of these being tied to ordinals. I'm thinking that it should not need any additional databases or complicated stack, it would just need the functionality of checking if there are inscriptions in a transaction by txid.\"\nComment0 :> Hello! Impressive work done here.    Thank you!    > I'm interested in the inscription functionality by itself, decoupled from ordinals.    I think this is interesting too, and I'd like to support this. To be clear, is what you're interested in the ability to publish data, in a transaction, and then have it be viewable on web page, like ordinals.com, but without worrying about it being publicly transferrable?    If so, I think we can definitely support this easily with `ord`.    > 1. Is it possible? If it is, its identifier would just be a txid?    The identifier would still be the inscription ID, which is TXIDiN, where N is the index of the inscription in the transaction. This is because we might have multiple inscriptions per transaction. This is useful even if you don't intend to transfer the inscriptions, for example if you want to publish multiple files in one transaction.    > 2. Do you know about a project that already does this? If not, will this functionality be something this project will work on? Or should I fork this repo and try (would need to learn rust/taproot) to make it work?    As far as I know, there are no other tools to make inscriptions. This would be very easy to `ord` to support, and without needing to build an index, all you'd need is a Bitcoin Core node, but it could be pruned.    > I'm interested in this because I'm looking for a simple and efficient way to write arbitrary data in Bitcoin just like ordinal inscriptions do, but without all the overhead of these being tied to ordinals. I'm thinking that it should not need any additional databases or complicated stack, it would just need the functionality of checking if there are inscriptions in a transaction by txid.    I think a great first step would be an `ord wallet publish` command, which would create an inscription without caring about where it goes. We can get into the details of what \"without caring about where it goes\" actually means when we start working on it.\nComment1 :Great! And I like calling the feature `publish`, it makes sense.    > To be clear, is what you're interested in the ability to publish data, in a transaction, and then have it be viewable on web page, like ordinals.com, but without worrying about it being publicly transferrable?    I'm thinking these don't need functionality related to transferring them, they will just be \"publications\" of data. These would be the equivalent to Counterparty broadcasts, which are separate from their (transferrable) assets.    About these being viewable on a web page, what I imagine is these would be part of shared standards between ordinal vs vanilla inscriptions. But about having specifically ordinals.com show them I'm not sure, maybe it can make sense depending on how it is presented.\nComment2 :> I'm thinking these don't need functionality related to transferring them, they will just be \"publications\" of data. These would be the equivalent to Counterparty broadcasts, which are separate from their (transferrable) assets.    It's actually easier to make them transferrable, then they're just inscriptions. Making them not transferrable would be more work. We'd need to:    - Add a flag to an inscription to note that it was not assigned to any staoshi in the outputs  - Burn the output by sending it to an op-return\nComment3 :The main benefit I see for vanilla inscriptions / publications is their deployment simplicity, no need to setup the ordinal sat-tracking stack.    I can understand the work needed to decouple the inscriptions from ordinals in the current state of the project. But, I believe this flexible inscriptions approach will support the Bitcoin ecosystem more broadly, and make this project one to follow for general data storage standards in the timechain.\nComment4 :> > I'm thinking these don't need functionality related to transferring them, they will just be \"publications\" of data. These would be the equivalent to Counterparty broadcasts, which are separate from their (transferrable) assets.  >   > It's actually easier to make them transferrable, then they're just inscriptions. Making them not transferrable would be more work. We'd need to:  >   >     * Add a flag to an inscription to note that it was not assigned to any staoshi in the outputs  >   >     * Burn the output by sending it to an op-return    Wouldn't doing it with them being transferable already be supported, by simply using, for example, a JSON file containing whatever arbitrary data?    I've been imagining some potential protocols that could be built on top of your work (including some that could extend the functionality of `ord`), that would need the feature this issue is discussing. Transferability doesn't make sense for these use cases, so it'd need to be dealt with either in `ord` or in the higher-level protocol. I think it'd be better for `ord` to support this general use case, rather than each higher-level protocol needing to detect and ignore transfers, but of course I'd understand if it's just too complicated to implement in `ord`.    If adding support to `ord` seems logical to you, I'd love to help out with the code changes. I'm an experienced programmer in several languages, but only recently started learning Rust. However, I think I could be of help with some guidance.\nComment5 :As I continue to think about it, isn't this feature really just about exposing a method to create arbitrary `envelopes` with a different string for the first `OP_PUSH`? Perhaps with another feature added to `ord server` so that it can take in a config file with the \"magic strings\" (really each a protocol specifier, like \"ord\" from the link below) that it should be parsing? That'd seem to make `ord` general-purpose enough to enable some of the feature extensions I'm imagining, which would be developed as additional software that uses `ord` internally.    I would think this should allow implementing the feature without making changes to how `ord` functions regarding its normal use case.    [https://docs.ordinals.com/inscriptions.html?highlight=envelopes](https://docs.ordinals.com/inscriptions.html?highlight=envelopes)\nComment6 :To start it can be simple like:    `ord wallet publish FILE`    Which could just write the file without a 'protocol specifier' by being empty, 0, null, or whatever is best.\nComment7 :> To start it can be simple like:  >   > `ord wallet publish FILE`  >   > Which could just write the file without a 'protocol specifier' by being empty, 0, null, or whatever is best.    I think I better understand what you're looking for now. You seem to want a minimal program that has only two methods, `publish` and let's call the other `inspect` for now, which would take a TXID as input and return any inscriptions, if there are any. That seems like it might be a difficult change since `ord` is currently a single binary, but I think it'd require my proposal for arbitrary `envelopes` as a basis.    @casey, I look forward to hearing your thoughts on the recent messages. I'd love to help implement arbitrary `envelopes`, and perhaps the code modularization work that @jotapea is describing, assuming of course you think they're worthwhile directions to go in.\nComment8 :From the [inscriptions](https://docs.ordinals.com/inscriptions.html) doc:    > The inscription content model is that of the web. An inscription consists of a content type, also known as a MIME type, and the content itself, which is a byte string.    This fully describes the content model for inscriptions, with clear human readability as \"version 0\". This is simple, thus powerful. And relevant, currently being [discussed](https://github.com/casey/ord/issues/1523).    Then, I'm thinking that for a \"vanilla inscription\" / envelope function, something like replacing `ord` for `0` as this \"potocol specifier\" can make sense. Envelopes formatted like \"version 0\" ordinal inscriptions.    `  ord wallet envelope FILE  `    No real need for a new concept like `publish`, as the feature commands are quite self explanatory. But publish does sound cooler ;) and better encapsulates the idea of \"writing in Bitcoin\".\nComment9 :@jotapea, can you confirm if what you want is something like \"a minimal program that has only two methods, publish and let's call the other inspect for now, which would take a TXID as input and return any inscriptions, if there are any\" and doesn't have any of the other code from `ord`?\nComment10 :This is my proposal:    1. Add a command to ord that doesn't require the index to be synced and which can make an inscription on a UTXO in the wallet. Since the index isn't synced, this will require careful UX to avoid sending an important UTXO. The inscription will be the same as a normal inscription.  2. Add a command to ord that doesn't require the index to be synced to get the content of an inscription, by inscription ID.  3. Other features, like #1333 can later be leveraged to make the inscription immobile, if it is the authors intent to signal that transferring the inscription is not meaningful, and it is not intended to be sent.    If there's more functionality to be added, please articulate what, exactly, that functionality is, and why we can't use the features above as a base to add it.    All the desiderata here (and apologies if I missed anything \ud83d\ude05) seems to be implementable with these minimal features above, which does not require an additional envelope protocol, or any large changes to ord. Additionally, this allows users who want to view this content so simply link to the inscription on ordinals.com.\nComment11 :> @jotapea, can you confirm if what you want is something like \"a minimal program that has only two methods, publish and let's call the other inspect for now, which would take a TXID as input and return any inscriptions, if there are any\" and doesn't have any of the other code from ord?    @tyjvazum, yes I agree with this minimal implementation (and I'm currently learning rust to be able to help!).    @casey, the changes proposed should work, but I still find them too coupled to ordinals. This burning you describe can still be done as ordinal's specific use cases though.    Maybe the best move forward for a feature like this is to build it separate, at least until `ord` can integrate it as described while avoiding confusion with the burn alternative.\nComment12 :> @casey, the changes proposed should work, but I still find them too coupled to ordinals. This burning you describe can still be done as ordinal's specific use cases though.    Can you be specific about what the problem is? \"too coupled to ordinals\" is very general.    You can definitely build it in a separate repo, and different protocols using ordinals and envelopes are encouraged! But I do think publishing things is useful functionality, and would like ord to support it. If we can land something simple and easy that can be improved later, this could all be done with inscriptions.\nComment13 :I believe that the need to burn (and the disclaimer) already shows tight coupling. Maybe a separate non-ordinals-aware wallet is more appropriate for publishing...\nComment14 :> I believe that the need to burn (and the disclaimer) already shows tight coupling. Maybe a separate non-ordinals-aware wallet is more appropriate for publishing...    Maybe so! Let me know if you put something up. I'd like to keep this issue open for `ore`. Let's use it to explore easier publishing functionality. The existing conversation provides a lot of great context on my thinking around this.\nComment15 :@casey @tyjvazum https://github.com/jotapea/pub/commits/pub-v2    Consider this a MVP that has not been tested with real transactions yet. Most of the work was commenting out db functionality, with very minimal adjustments to make it \"work\" (only tested with dry-run).    With the potential to make this alternative repo even smaller by removing more sat-tracking specific features, I believe it can make sense to continue it as a separate (but related) project... what do you think? And what should I work on before trying a real transaction with it?\nComment16 :I honestly just haven't been convinced there is a real need not to just improve inscriptions here. So this should be turned into issues with specific asks (burn on inscribe, mark as non transferrable on inscribe, etc). Other dev work can continue elsewhere \ud83d\ude4f\nComment17 :Leaving open, since a lot of those specific asks were covered in this issue's comments, and don't want to lose them.\nComment18 :> @casey @tyjvazum https://github.com/jotapea/pub/commits/pub-v2  >   > Consider this a MVP that has not been tested with real transactions yet. Most of the work was commenting out db functionality, with very minimal adjustments to make it \"work\" (only tested with dry-run).  >   > With the potential to make this alternative repo even smaller by removing more sat-tracking specific features, I believe it can make sense to continue it as a separate (but related) project... what do you think? And what should I work on before trying a real transaction with it?    @jotapea, can you enable issues and/or discussions? I'd like to provide some feedback. This isn't the place to do it though.\nComment19 :@tyjvazum issues have been enabled.    @casey it does not have to be a separate project, I can see this basic publishing included as a feature of `ord`. But I am interested in making a no-index version work. So my next question is if I just \"ignore\" the index but proceed making inscriptions (like what I am trying to achieve in the repo fork), will these still be \"compliant\" ordinal inscriptions? If that is the case, then there is no real need to change the protocol_id.    How do you foresee people making adjustments to the software, like when should the protocol_id be kept vs being a different one?\nComment20 :Great discussion! I came here looking to see if any of this was already being talked about. Recently tweeted this:  https://twitter.com/sull/status/1626824019176456193    As an independent thought experiment before finding this thread, I might as well chime in.    Related to the specifics of this thread, I think there is merit in having a no-index ref client (vanilla publisher wallet).   I also agree with @casey that Ord should have a minimal publish mode to handle content that lets just say isnt intended to be a part of a market and so those related features should be able to be...skipped and/or extend the protocol to make clear there is support for general publish (vanilla inscriptions) use case.    Another line oif thought that was even touched on in this thread is the potocol specifier (prefix). Software depends on this, AFAIK, for targeted data parsing. I suppose additional verification is done too by analyzing the envelope content. But the idea of Ord forking is going to happen so this discussion is important now.     What are your thoughts on implementing namespaces to distinguish among many Ord runner instances where a subset of conventions, rules, instructions etc can be applied with a namespace metadata file inscribed to a parent ordinal/sat owned by the namespace creator? This requires thinking broadly and into the future, as well as accepting the likely occurrences with or without forward thinking proposals.    So a namespace can be added to the protocol specifier like **protocol:namespace**    E.g . **ord:stet**    This actually introduces a loose SLD name system, if we continue to take pretend things and make them real through a concerted community and dev effort.... consensus.     I'm sure at this point you are thinking... is ORD now a TLD in this Ordinal world? Sure why not?     E.g. **stet.ord** is the pointer to the Ordinal tree associated with it. It could be a complete website directory of onchain inscriptions (that would be cached by apps).    In Ordinal world, we rely on software to turn pretend things into reality. It is arbitrary from the top and therefor all the way down, if we choose to. Suddenly. this simple idea could result in organized onchain data repos with its own description and metadata, used in different ways and interfaces and easily acced with a ad hoc DNS system where .ORD is the TLD.    Bitcoin/Ordinal Wallets will become \"web browser\" hybrids where all content is onchain and cached for speed.    This may discouage some rogue forking (not that there's anything nec wrong with that) and encourage creating namespaces and keeping Ordinal as the umbrella project. One anticipated reason to fork with new protocol specifier would be to duplicate rare sat serials in an attempt to recreate demand for speculative scarcity. By supporting namespaces, I think it would make such _shitords_ motivation more obvious.    I'll end with an example of a namespace.     **nytimes.ord**     In the namespace metadata file, it states it is a text-only archive of articles.   There is an index page (versioning?) that just lists and links to all articles or just an intro/summary statement with link to centralized dynamic page that lists all onchain articles (inscription IDs).   This namespace could also instruct apps to use certain flags to disable tracking, not bind to sats or generally opting out to being a tradable \"NFT\". Just inscriptions.     You get the idea ;)     I'm looking forward to your feedback.", "reactionGroups": {"THUMBS_UP": 9, "HEART": 2, "ROCKET": 1}}, {"number": 1497, "title": "Improve audio previews", "summary": "{\"summary\": \"Proposal to improve audio previews with visual elements such as waveform and visualizer\", \"sentiment\": \"neutral\", \"labels\": [\"audio\", \"UI/UX\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to improve audio previews with visual elements such as waveform and visualizer", "sentiment": "neutral", "labels": ["audio", "UI/UX"]}}, {"number": 1496, "title": "Error sending ordinals at same output index", "summary": "{\"summary\": \"User is experiencing an error when sending ordinals at the same output index\", \"sentiment\": \"confused\", \"labels\": [\"wallet\", \"bug-report\", \"user-support\"]}\"", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 1495, "title": "RpcError: Wallet file verification failed. Database already exists.", "summary": "{\"summary\": \"User is facing an issue creating an ord wallet due to a JSON-RPC error related to existing database\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"bitcoin-core\", \"docker\"] }", "reactionGroups": {}, "summaryJson": {"summary": "User is facing an issue creating an ord wallet due to a JSON-RPC error related to existing database", "sentiment": "neutral", "labels": ["wallet", "bitcoin-core", "docker"]}}, {"number": 1493, "title": "Make supported but un-previewable content types nicer", "summary": "{\"summary\": \"Issue is related to low support for non-native browser format STL for 3D models, resulting in a blank preview\", \"sentiment\": \"frustrated\", \"labels\": [\"media-renderer\", \"user-experience\", \"feature-request\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Issue is related to low support for non-native browser format STL for 3D models, resulting in a blank preview", "sentiment": "frustrated", "labels": ["media-renderer", "user-experience", "feature-request"]}}, {"number": 1489, "title": "Provide ability to save commit and reveal transactions", "summary": "{\"summary\": \"Proposal to add ability to save commit and reveal transactions\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Proposal to add ability to save commit and reveal transactions", "sentiment": "neutral", "labels": ["feature-request"]}}, {"number": 1485, "title": "redb error when indexing (on master: 938b5cc)", "summary": "{\"summary\": \"Error encountered while indexing with redb\", \"sentiment\": \"frustrated\", \"labels\": [\"indexing\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Error encountered while indexing with redb", "sentiment": "frustrated", "labels": ["indexing", "bug"]}}, {"number": 1484, "title": "Preview command breaking ord", "summary": "{\"summary\": \"User is experiencing issues with `ord` command not working after running `ord preview` command\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"developer-tools\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is experiencing issues with `ord` command not working after running `ord preview` command", "sentiment": "neutral", "labels": ["bug", "developer-tools"]}}, {"number": 1481, "title": "Support python", "summary": "{\"summary\": \"Request to add syntax highlighting for Python code in inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"syntax-highlighting\", \"python\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to add syntax highlighting for Python code in inscriptions", "sentiment": "neutral", "labels": ["enhancement", "syntax-highlighting", "python"]}}, {"number": 1480, "title": "Link to awesome-ordinals", "summary": "{\"summary\":\"Discussion on linking to an awesome-ordinals resource compilation site and creating a list of great links in a new docs page.\",\"sentiment\":\"positive\",\"labels\":[\"documentation\",\"community\"]}", "reactionGroups": {"ROCKET": 2, "THUMBS_UP": 2}, "summaryJson": {"summary": "Discussion on linking to an awesome-ordinals resource compilation site and creating a list of great links in a new docs page.", "sentiment": "positive", "labels": ["documentation", "community"]}}, {"number": 1472, "title": "Document how to safely receive without the ord index", "summary": "{\"summary\": \"Documentation needed for safely receiving inscriptions without the ord index\", \"sentiment\": \"positive\", \"labels\": [\"documentation\", \"feature-request\", \"wallet\", \"API\", \"open-source\"]}\n\nExplanation: The issue is regarding the need to document how to safely receive inscriptions without the ord index. The sentiment of the discussion appears to be positive, as multiple comments offer solutions and resources for receiving inscriptions. The labels include documentation, feature request, wallet, API, and open-source, as these categories are relevant to the issue's components, such as the need for documentation, feature requests for ordinals inscriptions and API services, and the availability of open-source options for safe inscription receiving.", "reactionGroups": {"HEART": 2, "THUMBS_UP": 1}}, {"number": 1470, "title": "[Feature Request] Inscribe and send in the same transaction", "summary": "{\"summary\": \"User is requesting a feature to add an option to 'ord wallet inscribe' command which allows the ordinal to go directly to a third party degen upon reveal\", \"sentiment\": \"positive\", \"labels\": [\"feature-request\", \"developer-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is requesting a feature to add an option to 'ord wallet inscribe' command which allows the ordinal to go directly to a third party degen upon reveal", "sentiment": "positive", "labels": ["feature-request", "developer-support"]}}, {"number": 1468, "title": "Support epub inscriptions", "summary": "{\"summary\": \"The user is requesting support for epub inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"epub\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The user is requesting support for epub inscriptions", "sentiment": "neutral", "labels": ["feature-request", "epub", "user-support"]}}, {"number": 1465, "title": "Front page and /inscriptions moderation", "summary": "{\"summary\": \"Proposal for moderation of graphic content on front page and /inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"content-moderation\"]}", "reactionGroups": {"THUMBS_UP": 3, "HEART": 1}, "summaryJson": {"summary": "Proposal for moderation of graphic content on front page and /inscriptions", "sentiment": "neutral", "labels": ["website", "content-moderation"]}}, {"number": 1464, "title": "Bundle db changes to make future upgrades less annoying", "summary": "{\"summary\": \"Proposal to make multiple changes to the database to improve future upgrades\", \"sentiment\": \"neutral\", \"labels\": [\"database\", \"maintenance\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to make multiple changes to the database to improve future upgrades", "sentiment": "neutral", "labels": ["database", "maintenance"]}}, {"number": 1462, "title": "Ownership proofs \u2013 message signing and verification", "summary": "{\n    \"summary\": \"Proposal to add message signing and verification for inscriptions\",\n    \"sentiment\": \"neutral\",\n    \"labels\": [\"crypto\", \"wallet\"]\n}", "reactionGroups": {"HEART": 4, "EYES": 2, "THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to add message signing and verification for inscriptions", "sentiment": "neutral", "labels": ["crypto", "wallet"]}}, {"number": 1455, "title": "Show stable inscription sequence number when listing inscriptions (both wallet and website)", "summary": "{\"summary\": \"The issue is about showing stable inscription sequence number when listing inscriptions (both wallet and website)\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"protocol\", \"client version upgrade\", \"bug fix\"]}\n\nThe sentiment is neutral as there appears to be a discussion among the team about how to approach the issue. The labels include \"wallet\" as the issue involves displaying inscriptions from the wallet, \"protocol\" as the update of the protocol may affect the stability of sequence numbering, \"client version upgrade\" as new clients may have a different view of inscription numbers, and \"bug fix\" as the team needs to fix the original bug.", "reactionGroups": {}}, {"number": 1454, "title": "Figure out why /inscriptions is slow", "summary": "{\"summary\": \"Some inscriptions are causing slow page rendering and lag on explorer\", \"sentiment\": \"frustrated\", \"labels\": [\"performance\", \"front-end\", \"Bitcoin Core\", \"web development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Some inscriptions are causing slow page rendering and lag on explorer", "sentiment": "frustrated", "labels": ["performance", "front-end", "Bitcoin Core", "web development"]}}, {"number": 1453, "title": "wallet sats returns empty list", "summary": "{\"summary\": \"User is experiencing issue with empty list returned by 'ord wallet sats' after complete indexing with --index-sats\", \"sentiment\": \"mixed\", \"labels\": [\"wallet\", \"indexing\", \"sats\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1452, "title": "Track metrics for total block space consumption and fee contribution from inscriptions", "summary": "{\"summary\": \"Feature request to track total block space consumption and fee contribution from inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Feature request to track total block space consumption and fee contribution from inscriptions", "sentiment": "neutral", "labels": ["blockchain", "feature-request"]}}, {"number": 1451, "title": "Track the number of hops an inscription has travelled", "summary": "{\"summary\": \"Proposal to track the number of hops of an inscribed ordinal from genesis inscription\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"blockchain\", \"coding\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Proposal to track the number of hops of an inscribed ordinal from genesis inscription", "sentiment": "neutral", "labels": ["feature-request", "blockchain", "coding"]}}, {"number": 1448, "title": "Document config file", "summary": "{\"summary\": \"The issue discusses the need for blocklist and allowlist functionalities for inscriptions and the suggestion to start designing them\", \n\"sentiment\": \"positive\", \n\"labels\": [\"protocol\", \"censorship\", \"documentation\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "The issue discusses the need for blocklist and allowlist functionalities for inscriptions and the suggestion to start designing them", "sentiment": "positive", "labels": ["protocol", "censorship", "documentation"]}}, {"number": 1447, "title": "Allow inscription to contain standard \"spoiler\" metadata for potentially NSFW or sensitive content", "summary": "{\"summary\": \"Proposal to add a standard metadata label for inscribers to mark potentially sensitive content as 'spoiler'\", \"sentiment\": \"positive\", \"labels\": [\"content-moderation\", \"UI/UX\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add a standard metadata label for inscribers to mark potentially sensitive content as 'spoiler'", "sentiment": "positive", "labels": ["content-moderation", "UI/UX"]}}, {"number": 1446, "title": "Optionally broadcast commit and inscribe transactions separately", "summary": "{\"summary\": \"Separation of commit and inscribe transactions to avoid sniping of inscriptions and provide a delay flag to wait for confirmation of the commit transaction before broadcasting the reveal transaction\", \"sentiment\": \"positive\", \"labels\": [\"transaction\", \"wallet\", \"user-support\", \"fix\"]}", "reactionGroups": {"THUMBS_UP": 3, "EYES": 1}, "summaryJson": {"summary": "Separation of commit and inscribe transactions to avoid sniping of inscriptions and provide a delay flag to wait for confirmation of the commit transaction before broadcasting the reveal transaction", "sentiment": "positive", "labels": ["transaction", "wallet", "user-support", "fix"]}}, {"number": 1444, "title": "indexing is very slow", "summary": "{\"summary\": \"User is having trouble with slow indexing while attempting to index Bitcoin using ord index.\", \"sentiment\": \"frustrated\", \"labels\": [\"Bitcoin\", \"indexing\", \"performance-issues\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is having trouble with slow indexing while attempting to index Bitcoin using ord index.", "sentiment": "frustrated", "labels": ["Bitcoin", "indexing", "performance-issues"]}}, {"number": 1443, "title": "Link to ord bot somewhere", "summary": "{\"summary\": \"User requests a link to ord bot\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"user-support\"]}\"", "reactionGroups": {}}, {"number": 1442, "title": "Vulnerability disclosure hotline", "summary": "{\"summary\": \"Setting up a vulnerability disclosure hotline and deciding on email service providers\", \"sentiment\": \"neutral\", \"labels\": [\"security\", \"email-servers\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Setting up a vulnerability disclosure hotline and deciding on email service providers", "sentiment": "neutral", "labels": ["security", "email-servers"]}}, {"number": 1439, "title": "Figure out how to encourage contributors", "summary": "{\"summary\": \"Encouraging contributors through good first issues, prioritization, and opportunities to contribute expertise ideas without coding\", \"sentiment\": \"positive\", \"labels\": [\"open-source\", \"community-building\", \"project-management\"]}", "reactionGroups": {"THUMBS_UP": 3, "HEART": 1}, "summaryJson": {"summary": "Encouraging contributors through good first issues, prioritization, and opportunities to contribute expertise ideas without coding", "sentiment": "positive", "labels": ["open-source", "community-building", "project-management"]}}, {"number": 1438, "title": "Support MIDI", "summary": "{\"summary\": \"Need support for MIDI inscription and audio/mod files\", \"sentiment\": \"excited\", \"labels\": [\"feature-request\", \"web-development\", \"audio-processing\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Need support for MIDI inscription and audio/mod files", "sentiment": "excited", "labels": ["feature-request", "web-development", "audio-processing"]}}, {"number": 1437, "title": "Help users make SVG and HTML content which scales appropriately", "summary": "{\n  \"summary\": \"Users need help creating size-independent SVG and HTML content\",\n  \"sentiment\": \"neutral\",\n  \"labels\": [\"HTML\", \"SVG\", \"user-support\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "Users need help creating size-independent SVG and HTML content", "sentiment": "neutral", "labels": ["HTML", "SVG", "user-support"]}}, {"number": 1436, "title": "Splitting Ordinals", "summary": "{\"summary\": \"User accidentally consolidated inscriptions in two transactions and wants to split them when sending to someone else\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"transaction-management\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User accidentally consolidated inscriptions in two transactions and wants to split them when sending to someone else", "sentiment": "neutral", "labels": ["wallet", "transaction-management"]}}, {"number": 1432, "title": "`--fee-rate` not respected", "summary": "{\"summary\": \"User reported an issue with --fee-rate option not being respected in the ord wallet inscribe command\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"bug-report\"]}", "reactionGroups": {"EYES": 1}, "summaryJson": {"summary": "User reported an issue with --fee-rate option not being respected in the ord wallet inscribe command", "sentiment": "neutral", "labels": ["wallet", "bug-report"]}}, {"number": 1430, "title": "GLIBC_2.32 not found", "summary": "{\"summary\": \"Users are experiencing issues with `ord` requiring GLIBC version 2.32 or higher on Ubuntu 20.04.1 LTS/Debian 11/EC2 instances, and solutions include upgrading to Ubuntu 22.04, building from source, or upgrading GLIBC version by running specific commands. Users also discuss starting their full node from a blank EC2 instance or purchasing a pre-existing one from the marketplace.\", \"sentiment\": \"frustrated\", \"labels\": [\"GLIBC\", \"Ubuntu\", \"Debian\", \"full node\", \"server\", \"compiling\", \"source code\", \"EC2\", \"AWS\"]}", "reactionGroups": {"THUMBS_UP": 12, "EYES": 2, "HEART": 1}, "summaryJson": {"summary": "Users are experiencing issues with `ord` requiring GLIBC version 2.32 or higher on Ubuntu 20.04.1 LTS/Debian 11/EC2 instances, and solutions include upgrading to Ubuntu 22.04, building from source, or upgrading GLIBC version by running specific commands. Users also discuss starting their full node from a blank EC2 instance or purchasing a pre-existing one from the marketplace.", "sentiment": "frustrated", "labels": ["GLIBC", "Ubuntu", "Debian", "full node", "server", "compiling", "source code", "EC2", "AWS"]}}, {"number": 1429, "title": "Wallet re-inscribing sats", "summary": "{\"summary\": \"Possible desync between wallet and index causing inscriptions to be re-inscribed, with a suggested fix and ongoing discussion\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"indexing\", \"bug\", \"user-support\"]}", "reactionGroups": {"THUMBS_UP": 4, "HEART": 1}, "summaryJson": {"summary": "Possible desync between wallet and index causing inscriptions to be re-inscribed, with a suggested fix and ongoing discussion", "sentiment": "neutral", "labels": ["wallet", "indexing", "bug", "user-support"]}}, {"number": 1424, "title": "Make discord link more prominent", "summary": "{\"summary\": \"Discord link needs to be more noticeable\", \"sentiment\": null, \"labels\": [\"UI\", \"enhancement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Discord link needs to be more noticeable", "sentiment": null, "labels": ["UI", "enhancement"]}}, {"number": 1421, "title": "Make rounded borders consistent", "summary": "{\"summary\": \"Inconsistent rounded borders in the UI\", \"sentiment\": \"neutral\", \"labels\": [\"UI\", \"design\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Inconsistent rounded borders in the UI", "sentiment": "neutral", "labels": ["UI", "design"]}}, {"number": 1418, "title": "Add link to telegram", "summary": "{\"summary\": \"Proposal to add a link to a Telegram group\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"user-interface\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add a link to a Telegram group", "sentiment": "neutral", "labels": ["website", "user-interface"]}}, {"number": 1417, "title": "Wallet GUI", "summary": "{\"summary\": \"User requests a basic GUI for all wallet commands, ideally with a web interface for remote hosting\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"GUI\", \"remote-hosting\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User requests a basic GUI for all wallet commands, ideally with a web interface for remote hosting", "sentiment": "neutral", "labels": ["wallet", "GUI", "remote-hosting"]}}, {"number": 1415, "title": "Add support for viewing historical on-chain content", "summary": "{\"summary\": \"Request to add support for viewing historical on-chain content.\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"on-chain-data\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Request to add support for viewing historical on-chain content.", "sentiment": "neutral", "labels": ["feature-request", "on-chain-data"]}}, {"number": 1410, "title": "Filter Inscriptions by Type", "summary": "{\"summary\": \"Need to add a feature to filter inscriptions by media type\", \"sentiment\": \"positive\", \"labels\": [\"enhancement\", \"database-management\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Need to add a feature to filter inscriptions by media type", "sentiment": "positive", "labels": ["enhancement", "database-management"]}}, {"number": 1409, "title": "Make it easier to play snake on the timechain", "summary": "{\"summary\": \"Difficulty playing Snake game due to arrow keys scrolling the page. Requesting for changes to keyboard events and visual indication when iframe is focused.\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"gameplay-improvement\", \"user-experience\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Difficulty playing Snake game due to arrow keys scrolling the page. Requesting for changes to keyboard events and visual indication when iframe is focused.", "sentiment": "neutral", "labels": ["website", "gameplay-improvement", "user-experience"]}}, {"number": 1407, "title": "Too many open files error on server", "summary": "{\"summary\": \"Server is experiencing 'Too many open files' error and potentially needs TCP keepalive turned on\", \"sentiment\": \"frustrated\", \"labels\": [\"server\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Server is experiencing 'Too many open files' error and potentially needs TCP keepalive turned on", "sentiment": "frustrated", "labels": ["server", "bug"]}}, {"number": 1403, "title": "Use minimal data-pushes", "summary": "{\"summary\": \"Issue regarding using smaller, standard script in parser for inscriptions\", \"sentiment\": \"positive\", \"labels\": [\"developer-tools\", \"python\", \"bitcoin-core\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Issue regarding using smaller, standard script in parser for inscriptions", "sentiment": "positive", "labels": ["developer-tools", "python", "bitcoin-core"]}}, {"number": 1401, "title": "Add more info to RSS feed", "summary": "{\"summary\": \"Request to add more information to RSS feed\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Request to add more information to RSS feed", "sentiment": "neutral", "labels": ["enhancement"]}}, {"number": 1399, "title": "Support `rpc_user` and `rpc_pass`", "summary": "{\"summary\": \"Request to support `rpc_user` and `rpc_pass` for easier remote connections to Bitcoin Core\", \"sentiment\": \"neutral\", \"labels\": [\"Bitcoin Core\", \"RPC authentication\", \"user experience\"]}", "reactionGroups": {"HEART": 5}, "summaryJson": {"summary": "Request to support `rpc_user` and `rpc_pass` for easier remote connections to Bitcoin Core", "sentiment": "neutral", "labels": ["Bitcoin Core", "RPC authentication", "user experience"]}}, {"number": 1398, "title": "Make narrow-nav bar look less awkward", "summary": "{\"summary\": \"User suggests fixing wasted space in narrow-nav bar with grid or flex layout\", \"sentiment\": \"neutral\", \"labels\": [\"UI\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User suggests fixing wasted space in narrow-nav bar with grid or flex layout", "sentiment": "neutral", "labels": ["UI"]}}, {"number": 1397, "title": "Figure out a way to add more nav links", "summary": "{\"summary\": \"User wants to add more links to the nav bar and suggests implementing a drop-down menu. Another user suggests adding a dedicated Inscriptions link.\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"usability\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User wants to add more links to the nav bar and suggests implementing a drop-down menu. Another user suggests adding a dedicated Inscriptions link.", "sentiment": "neutral", "labels": ["web-development", "usability"]}}, {"number": 1396, "title": "Make sat amounts easier to read", "summary": "{\"summary\": \"Proposal to display sat amounts in a more readable format\", \"sentiment\": \"neutral\", \"labels\": [\"user-interface\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to display sat amounts in a more readable format", "sentiment": "neutral", "labels": ["user-interface"]}}, {"number": 1393, "title": "Meme generator/templates", "summary": "{\"summary\": \"Proposal to create more efficient meme generators using existing images and text\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to create more efficient meme generators using existing images and text", "sentiment": "neutral", "labels": ["feature-request"]}}, {"number": 1389, "title": "Improve response caching", "summary": "{\"summary\": \"Improvement suggestion for response caching\", \"sentiment\": \"neutral\", \"labels\": [\"web development\", \"optimization\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Improvement suggestion for response caching", "sentiment": "neutral", "labels": ["web development", "optimization"]}}, {"number": 1388, "title": "Improve origin server location", "summary": "{\"summary\": \"Proposal to improve website performance by placing the origin server closer to users based on IP locations from Cloudflare\", \"sentiment\": \"neutral\", \"labels\": [\"website-performance\", \"infrastructure\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to improve website performance by placing the origin server closer to users based on IP locations from Cloudflare", "sentiment": "neutral", "labels": ["website-performance", "infrastructure"]}}, {"number": 1387, "title": "Include e-tags and serve 304s when content hasn't changed", "summary": "Based on the given issue title, it seems that the user is requesting the implementation of e-tags and serving the status code 304 (Not Modified) when the content of a page hasn't changed. However, there is no body or comments in this issue to further analyze the user's motive or situation. Therefore, it is difficult to determine the sentiment of the user or provide any relevant labels at this time.", "reactionGroups": {}}, {"number": 1385, "title": "Allow SVG and HTML inscriptions to access chain statistics", "summary": "{\n    \"summary\": \"Proposal to allow HTML and SVG inscriptions to access chain statistics, specifically current chain height and block hash at particular heights.\",\n    \"sentiment\": \"positive\",\n    \"labels\": [\"feature-request\", \"HTML\", \"SVG\", \"blockchain\"]\n}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to allow HTML and SVG inscriptions to access chain statistics, specifically current chain height and block hash at particular heights.", "sentiment": "positive", "labels": ["feature-request", "HTML", "SVG", "blockchain"]}}, {"number": 1382, "title": "Fix issue with chrome not caching /content response", "summary": "{\"summary\": \"User is experiencing issues with Chrome not caching /content response\", \"sentiment\": \"frustrated\", \"labels\": [\"browser\", \"cache\", \"bug-report\"]}\"", "reactionGroups": {}}, {"number": 1380, "title": "Display witnesses", "summary": "{\"summary\": \"User suggests displaying witness sizes on transactions in the block explorer\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"user-interface\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User suggests displaying witness sizes on transactions in the block explorer", "sentiment": "neutral", "labels": ["blockchain", "user-interface"]}}, {"number": 1379, "title": "Provide prebuilt binaries for raspberry pi", "summary": "{\"summary\": \"User requests prebuilt binaries for Raspberry Pi, with some discussion of building on Raspberry Pi or Umbrel\", \"sentiment\": \"neutral\", \"labels\": [\"Raspberry Pi\", \"build\", \"user-support\"] }", "reactionGroups": {"HEART": 3, "EYES": 2, "THUMBS_UP": 1}, "summaryJson": {"summary": "User requests prebuilt binaries for Raspberry Pi, with some discussion of building on Raspberry Pi or Umbrel", "sentiment": "neutral", "labels": ["Raspberry Pi", "build", "user-support"]}}, {"number": 1378, "title": "Document how ord works on raspberry pi", "summary": "{\"summary\": \"Request to document ord performance on raspberry pi including sync time, required RAM and disk space\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"performance\", \"raspberry-pi\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Request to document ord performance on raspberry pi including sync time, required RAM and disk space", "sentiment": "neutral", "labels": ["documentation", "performance", "raspberry-pi"]}}, {"number": 1377, "title": "RPC error: transport error: HTTP response too short: length 0, needed 12", "summary": "{\"summary\": \"Users are reporting RPC error while indexing blocks in ord with an HTTP response too short error message\", \"sentiment\": \"frustrated\", \"labels\": [\"indexing\", \"RPC\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 14, "CONFUSED": 1, "EYES": 1}, "summaryJson": {"summary": "Users are reporting RPC error while indexing blocks in ord with an HTTP response too short error message", "sentiment": "frustrated", "labels": ["indexing", "RPC", "bug"]}}, {"number": 1375, "title": "Debug mis-sized text inscriptions on mobile", "summary": "{\"summary\": \"Mis-sized text inscriptions on mobile, possibly due to script loading order; black text on iOS Safari due to failed CSS loading\", \"sentiment\": \"frustrated\", \"labels\": [\"bug\", \"mobile\", \"CSS\", \"JavaScript\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Mis-sized text inscriptions on mobile, possibly due to script loading order; black text on iOS Safari due to failed CSS loading", "sentiment": "frustrated", "labels": ["bug", "mobile", "CSS", "JavaScript"]}}, {"number": 1374, "title": "Make lost sats on null output discoverable", "summary": "{\"summary\": \"Issue related to lost sats on null output\", \"sentiment\": \"neutral\", \"labels\": [\"bug\", \"bitcoin-core\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue related to lost sats on null output", "sentiment": "neutral", "labels": ["bug", "bitcoin-core"]}}, {"number": 1373, "title": "Improve pixelated image rendering", "summary": "{\"summary\": \"Improve image rendering for non-pixel art images\", \"sentiment\": \"neutral\", \"labels\": [\"graphics\", \"image-rendering\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Improve image rendering for non-pixel art images", "sentiment": "neutral", "labels": ["graphics", "image-rendering"]}}, {"number": 1372, "title": "Make subcommands return Result<Box<dyn Serialize>>", "summary": "{\"summary\": \"Proposal to update subcommands to return Result<Box<dyn Serialize>>\", \"sentiment\": \"neutral\", \"labels\": [\"code-quality\", \"enhancement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to update subcommands to return Result<Box<dyn Serialize>>", "sentiment": "neutral", "labels": ["code-quality", "enhancement"]}}, {"number": 1371, "title": "Collect statistics", "summary": "{\"summary\": \"Request to collect and display statistics on inscriptions and fees on /status page\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"backend\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Request to collect and display statistics on inscriptions and fees on /status page", "sentiment": "neutral", "labels": ["enhancement", "backend"]}}, {"number": 1370, "title": "Return brotli if gzip and br are both accepted", "summary": "{\"summary\": \"Proposal to return brotli if gzip and br are both accepted\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"http\", \"tower-rs\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to return brotli if gzip and br are both accepted", "sentiment": "neutral", "labels": ["enhancement", "http", "tower-rs"]}}, {"number": 1369, "title": "Consider wrapping all JSON outputs in a map", "summary": "{\"summary\": \"Proposal to wrap JSON outputs in a map\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to wrap JSON outputs in a map", "sentiment": "neutral", "labels": ["feature-request"]}}, {"number": 1368, "title": "make Object JSON from `ord parse` include enum type", "summary": "{\"summary\": \"Request to include enum type in JSON object generated from `ord parse`\", \"sentiment\": \"neutral\", \"labels\": [\"JSON\", \"enum\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to include enum type in JSON object generated from `ord parse`", "sentiment": "neutral", "labels": ["JSON", "enum"]}}, {"number": 1362, "title": "Use sats consistently in documentation/guides", "summary": "{\"summary\": \"Documentation/guides should use sats consistently as a unit of measurement\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"unit-conversion\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Documentation/guides should use sats consistently as a unit of measurement", "sentiment": "neutral", "labels": ["documentation", "unit-conversion"]}}, {"number": 1361, "title": "Improve error messages", "summary": "{\"summary\": \"Improve error messages to provide clear explanations and guidance on how to fix various misconfigurations with ord or bitcoind.\", \"sentiment\": \"neutral\", \"labels\": [\"dev-tools\", \"user-support\", \"error-handling\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Improve error messages to provide clear explanations and guidance on how to fix various misconfigurations with ord or bitcoind.", "sentiment": "neutral", "labels": ["dev-tools", "user-support", "error-handling"]}}, {"number": 1351, "title": "Markdown", "summary": "{\"summary\": \"Proposal to support Markdown in the project\", \"sentiment\": \"enthusiastic\", \"labels\": [\"feature-request\", \"markdown\", \"front-end\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Proposal to support Markdown in the project", "sentiment": "enthusiastic", "labels": ["feature-request", "markdown", "front-end"]}}, {"number": 1345, "title": "Assign overwritten output sat ranges to the null outpoint", "summary": "{\"summary\": \"Issue relates to assigning overwritten output sat ranges to null outpoints\", \"sentiment\": \"neutral\", \"labels\": [\"bitcoin-core\", \"programming\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Issue relates to assigning overwritten output sat ranges to null outpoints", "sentiment": "neutral", "labels": ["bitcoin-core", "programming"]}}, {"number": 1340, "title": "Cannot skip to middle of MP3", "summary": "{\"summary\": \"User requests support for range requests to skip to the middle of an MP3 file\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"server\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User requests support for range requests to skip to the middle of an MP3 file", "sentiment": "neutral", "labels": ["feature-request", "server"]}}, {"number": 1339, "title": "MP3s don't load from /content link", "summary": "{\"summary\": \"Users are unable to load MP3s from the /content link\", \"sentiment\": null, \"labels\": [\"bug\", \"file-loading\", \"mp3\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Users are unable to load MP3s from the /content link", "sentiment": null, "labels": ["bug", "file-loading", "mp3"]}}, {"number": 1338, "title": "Make commit & reveal tx links after \"ord wallet inscribe foo\"", "summary": "{\"summary\": \"Issue with lack of links for commit and reveal transactions after wallet inscribing\", \"sentiment\": \"neutral\", \"labels\": [\"user-interface\", \"blockchain-explorer\", \"documentation\"]}\"", "reactionGroups": {}}, {"number": 1335, "title": "Add links to mempool.space", "summary": "{\n  \"summary\": \"Proposal to add links to mempool.space for easier navigation and access of relevant information\",\n  \"sentiment\": \"positive\",\n  \"labels\": [\"user-experience\", \"interface\"]\n}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Proposal to add links to mempool.space for easier navigation and access of relevant information", "sentiment": "positive", "labels": ["user-experience", "interface"]}}, {"number": 1334, "title": "Allow adding data when burning inscriptions", "summary": "{\"summary\": \"Proposal to allow adding data to OP_RETURN field when burning inscriptions and display it on inscription page\", \"sentiment\": \"positive\", \"labels\": [\"feature-request\", \"blockchain\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to allow adding data to OP_RETURN field when burning inscriptions and display it on inscription page", "sentiment": "positive", "labels": ["feature-request", "blockchain"]}}, {"number": 1333, "title": "Allow burning inscriptions", "summary": "{\"summary\": \"Proposal to allow burning inscriptions to render them untradeable\", \"sentiment\": \"neutral\", \"labels\": [\"CLI\", \"feature request\", \"sat management\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to allow burning inscriptions to render them untradeable", "sentiment": "neutral", "labels": ["CLI", "feature request", "sat management"]}}, {"number": 1328, "title": "Show sat rarity color on inscription page", "summary": "{\"summary\": \"Should the rarity color of a sat be displayed on the inscription's page?\", \"sentiment\": \"neutral\", \"labels\": [\"UI\", \"user-suggestion\"]}", "reactionGroups": {"THUMBS_UP": 1, "ROCKET": 2, "LAUGH": 2}, "summaryJson": {"summary": "Should the rarity color of a sat be displayed on the inscription's page?", "sentiment": "neutral", "labels": ["UI", "user-suggestion"]}}, {"number": 1327, "title": "Consider reversing inscription nav arrows", "summary": "{\"summary\": \"Proposal to invert inscription navigation arrows\", \"sentiment\": \"neutral\", \"labels\": [\"UI\", \"user-experience\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to invert inscription navigation arrows", "sentiment": "neutral", "labels": ["UI", "user-experience"]}}, {"number": 1322, "title": "Keep index synced in background", "summary": "{\"summary\": \"Proposal to run the index as a daemon in the background to improve performance\", \"sentiment\": \"neutral\", \"labels\": [\"performance\", \"feature-request\", \"user-support\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to run the index as a daemon in the background to improve performance", "sentiment": "neutral", "labels": ["performance", "feature-request", "user-support"]}}, {"number": 1306, "title": "Slow restart after deploy", "summary": "{\"summary\": \"Restarting ord after deploying is very slow\", \"sentiment\": \"frustrated\", \"labels\": [\"deployment\", \"performance\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Restarting ord after deploying is very slow", "sentiment": "frustrated", "labels": ["deployment", "performance"]}}, {"number": 1305, "title": "Return different results for numbers in search depending on size", "summary": "{\"summary\": \"The user wants the search function to return results for numbers based on the size of the number.\", \"sentiment\": null, \"labels\": [\"enhancement\", \"search\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The user wants the search function to return results for numbers based on the size of the number.", "sentiment": null, "labels": ["enhancement", "search"]}}, {"number": 1304, "title": "Parse commas in ordinal numbers in search box", "summary": "{\"summary\": \"Issue with parsing commas in ordinal numbers in search box\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"community-help\", \"bug\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Issue with parsing commas in ordinal numbers in search box", "sentiment": "neutral", "labels": ["web-development", "community-help", "bug"]}}, {"number": 1298, "title": "Multiple inscription transactions in multiple transactions", "summary": "{\"summary\": \"Proposal to support efficient multiple inscriptions in multiple transactions\", \"sentiment\": \"neutral\", \"labels\": [\"optimization\", \"blockchain\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Proposal to support efficient multiple inscriptions in multiple transactions", "sentiment": "neutral", "labels": ["optimization", "blockchain"]}}, {"number": 1297, "title": "Streamline deployment", "summary": "{\"summary\": \"User is requesting a streamlining of the deployment process for new versions of ord and database rebuilding\", \"sentiment\": \"neutral\", \"labels\": [\"deployment\", \"database-management\", \"automation\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is requesting a streamlining of the deployment process for new versions of ord and database rebuilding", "sentiment": "neutral", "labels": ["deployment", "database-management", "automation"]}}, {"number": 1295, "title": "Get off of rust-bitcoincore-rpc fork", "summary": "{\"summary\": \"Dependency on a forked version of rust-bitcoincore-rpc needs to be resolved by opening a PR\", \"sentiment\": \"neutral\", \"labels\": [\"dependencies\", \"code-quality\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Dependency on a forked version of rust-bitcoincore-rpc needs to be resolved by opening a PR", "sentiment": "neutral", "labels": ["dependencies", "code-quality"]}}, {"number": 1293, "title": "Twitter/Discord bot that posts new inscriptions", "summary": "{\"summary\": \"Proposal for a Twitter/Discord bot to post new inscriptions, discussion includes potential implementation options and previous hacky solutions.\", \"sentiment\": \"neutral\", \"labels\": [\"bot\", \"discord\", \"twitter\", \"implementation\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal for a Twitter/Discord bot to post new inscriptions, discussion includes potential implementation options and previous hacky solutions.", "sentiment": "neutral", "labels": ["bot", "discord", "twitter", "implementation"]}}, {"number": 1290, "title": "look into alternatives to CommandBuilder", "summary": "{\"summary\": \"User is suggesting alternatives to CommandBuilder due to inflexibility, including cradle and xshell\", \"sentiment\": \"neutral\", \"labels\": [\"testing\", \"dependency-management\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User is suggesting alternatives to CommandBuilder due to inflexibility, including cradle and xshell", "sentiment": "neutral", "labels": ["testing", "dependency-management"]}}, {"number": 1288, "title": "Add RSS feed icon", "summary": "{\"summary\": \"Request to add an RSS feed icon for the website\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"design\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Request to add an RSS feed icon for the website", "sentiment": "neutral", "labels": ["website", "design"]}}, {"number": 1285, "title": "Check fuzz testing on CI", "summary": "{\"summary\": \"Proposal to add a check for the successful build of fuzz target on CI\", \"sentiment\": \"neutral\", \"labels\": [\"CI\", \"testing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add a check for the successful build of fuzz target on CI", "sentiment": "neutral", "labels": ["CI", "testing"]}}, {"number": 1284, "title": "Explore adding fuzz target to workspace", "summary": "{\"summary\": \"Proposal to add a fuzz target to the project's workspace.\", \"sentiment\": \"neutral\", \"labels\": [\"proposal\", \"development\"}", "reactionGroups": {}}, {"number": 1282, "title": "Enforce TransactionBuilder invariants", "summary": "{\"summary\": \"Enforce invariants in transaction builder regarding taproot addresses and duplicate addresses\", \"sentiment\": \"neutral\", \"labels\": [\"code-quality\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Enforce invariants in transaction builder regarding taproot addresses and duplicate addresses", "sentiment": "neutral", "labels": ["code-quality", "bug"]}}, {"number": 1280, "title": "Generative content for every sat", "summary": "{\"summary\": \"User is looking to generate generative content for each sat using an algorithm\", \"sentiment\": \"excited\", \"labels\": [\"cryptocurrency\", \"content-generation\", \"algorithm-development\", \"user-engagement\"]}\"", "reactionGroups": {"THUMBS_UP": 2}}, {"number": 1277, "title": "Support easy to construct manual URLs", "summary": "{\"summary\": \"Proposal to support easy construction of manual URLs by accepting unambiguous object paths and redirecting to their canonical location\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"URL-routing\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to support easy construction of manual URLs by accepting unambiguous object paths and redirecting to their canonical location", "sentiment": "neutral", "labels": ["web-development", "URL-routing"]}}, {"number": 1269, "title": "Always lock UTXOs in wallet commands", "summary": "{\"summary\": \"Proposal to have wallet commands always lock unspent transaction outputs (UTXOs)\", \"sentiment\": \"positive\", \"labels\": [\"wallet\", \"feature-request\"]}\"", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 1267, "title": "Fuzz test transaction builder", "summary": "{\"summary\": \"Request to fuzz test transaction builder with different UTXOs and inputs\", \"sentiment\": \"neutral\", \"labels\": [\"testing\", \"transaction-builder\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to fuzz test transaction builder with different UTXOs and inputs", "sentiment": "neutral", "labels": ["testing", "transaction-builder"]}}, {"number": 1262, "title": "Allow inscribing even if we can't pay target postage", "summary": "{\"summary\": \"Proposal to allow inscribing even if the wallet does not contain the target postage value\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"transaction\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to allow inscribing even if the wallet does not contain the target postage value", "sentiment": "neutral", "labels": ["wallet", "transaction", "feature-request"]}}, {"number": 1250, "title": "Easier previews", "summary": "{\"summary\": \"Proposal to make inscription previewing easier by adding a way to encode inscription in url\", \"sentiment\": \"neutral\", \"labels\": [\"feature-request\", \"web-development\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "Proposal to make inscription previewing easier by adding a way to encode inscription in url", "sentiment": "neutral", "labels": ["feature-request", "web-development"]}}, {"number": 1249, "title": "API / Rust library crate", "summary": "{\"summary\": \"Discussion about creating an API/Rust library crate for RPC\", \"sentiment\": \"neutral\", \"labels\": [\"API\", \"Rust\", \"library\", \"RPC\"]}", "reactionGroups": {"THUMBS_UP": 4}, "summaryJson": {"summary": "Discussion about creating an API/Rust library crate for RPC", "sentiment": "neutral", "labels": ["API", "Rust", "library", "RPC"]}}, {"number": 1248, "title": "Roadmap", "summary": "{\"summary\": \"Asking for an update on the roadmap and release date for feature #783\", \"sentiment\": \"neutral\", \"labels\": [\"project-management\", \"release-planning\"]}", "reactionGroups": {"THUMBS_UP": 6, "LAUGH": 6, "HOORAY": 1, "CONFUSED": 2, "HEART": 9, "ROCKET": 1, "EYES": 8}, "summaryJson": {"summary": "Asking for an update on the roadmap and release date for feature #783", "sentiment": "neutral", "labels": ["project-management", "release-planning"]}}, {"number": 1247, "title": "App", "summary": "{\"summary\": \"Desktop app development using Tauri framework\", \"sentiment\": \"neutral\", \"labels\": [\"desktop-app\", \"tauri\", \"development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Desktop app development using Tauri framework", "sentiment": "neutral", "labels": ["desktop-app", "tauri", "development"]}}, {"number": 1246, "title": "Make unknown inscription preview better", "summary": "{\"summary\": \"User suggests improving unknown inscription preview with a cool preview, including distinguishing between different types of inscriptions with no content or invalid/unrecognized content types\", \"sentiment\": \"positive\", \"labels\": [\"UI\", \"enhancement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "User suggests improving unknown inscription preview with a cool preview, including distinguishing between different types of inscriptions with no content or invalid/unrecognized content types", "sentiment": "positive", "labels": ["UI", "enhancement"]}}, {"number": 1244, "title": "Show inputs on /transaction", "summary": "{\"summary\": \"Proposal to display inputs on /transaction page for debugging purposes\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"frontend\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to display inputs on /transaction page for debugging purposes", "sentiment": "neutral", "labels": ["enhancement", "frontend"]}}, {"number": 1231, "title": "Improve image thumbnails", "summary": "{\"summary\": \"The image thumbnails have some issues, including transparency and non-square images, and the user suggests potential solutions such as adding a border or scaling up images.\", \"sentiment\": \"neutral\", \"labels\": [\"ui\", \"design\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The image thumbnails have some issues, including transparency and non-square images, and the user suggests potential solutions such as adding a border or scaling up images.", "sentiment": "neutral", "labels": ["ui", "design"]}}, {"number": 1220, "title": "Set `Content-Security-Policy: frame-ancestors`", "summary": "{\"summary\": \"Proposal to set `Content-Security-Policy: frame-ancestors` to disallow embedding of pages outside of /content and /preview in iframes\", \"sentiment\": \"neutral\", \"labels\": [\"security\", \"web-development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to set `Content-Security-Policy: frame-ancestors` to disallow embedding of pages outside of /content and /preview in iframes", "sentiment": "neutral", "labels": ["security", "web-development"]}}, {"number": 1192, "title": "Number transactions", "summary": "{\"summary\": \"Proposal to number transactions and use those numbers as identifiers in headings and elsewhere\", \"sentiment\": \"neutral\", \"labels\": [\"proposal\", \"blockchain\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Proposal to number transactions and use those numbers as identifiers in headings and elsewhere", "sentiment": "neutral", "labels": ["proposal", "blockchain"]}}, {"number": 1189, "title": "Ability to display held inscriptions publicly", "summary": "{\"summary\": \"Users want the ability to publicly display their collections of owned NFTs through a public wallet/collection feature\", \"sentiment\": \"enthusiastic\", \"labels\": [\"NFTs\", \"wallet\", \"user-experience\", \"spam-protection\"]\"}", "reactionGroups": {}}, {"number": 1161, "title": "Test content responses directly instead of content_response function", "summary": "{\"summary\": \"The issue is about testing content responses directly\", \"sentiment\": null, \"labels\": [\"testing\", \"code-quality\"]}\"", "reactionGroups": {}}, {"number": 1159, "title": "Collectors guide", "summary": "{\"summary\": \"Request to include information on potential issues with collectors' guide inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"informational-guide\"]}", "reactionGroups": {"HEART": 1}, "summaryJson": {"summary": "Request to include information on potential issues with collectors' guide inscriptions", "sentiment": "neutral", "labels": ["website", "informational-guide"]}}, {"number": 1156, "title": "Easy ownership stamping", "summary": "{\"summary\": \"Proposal for easy ownership stamping on multiple inscriptions per sat\", \"sentiment\": \"positive\", \"labels\": [\"blockchain\", \"ownership-stamping\", \"encryption\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal for easy ownership stamping on multiple inscriptions per sat", "sentiment": "positive", "labels": ["blockchain", "ownership-stamping", "encryption"]}}, {"number": 1147, "title": "Persist locked UTXOs", "summary": "{\"summary\": \"Request to persist locked UTXOs\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"feature-request\", \"rust-bitcoincore-rpc\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to persist locked UTXOs", "sentiment": "neutral", "labels": ["blockchain", "feature-request", "rust-bitcoincore-rpc"]}}, {"number": 1133, "title": "Seed database with lost sat count", "summary": "{\"summary\": \"Proposal to seed database with lost sat count in order to track lost sats\", \"sentiment\": \"neutral\", \"labels\": [\"database\", \"proposal\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to seed database with lost sat count in order to track lost sats", "sentiment": "neutral", "labels": ["database", "proposal"]}}, {"number": 1082, "title": "Recursion", "summary": "{\"summary\": \"Discussion about allowing SVG and HTML inscriptions to access and reference other inscriptions in a sandboxed environment\", \"sentiment\": \"neutral\", \"labels\": [\"web-development\", \"security\", \"smart-contracts\"]}", "reactionGroups": {"HEART": 6, "ROCKET": 5}, "summaryJson": {"summary": "Discussion about allowing SVG and HTML inscriptions to access and reference other inscriptions in a sandboxed environment", "sentiment": "neutral", "labels": ["web-development", "security", "smart-contracts"]}}, {"number": 1080, "title": "Background color", "summary": "{\"summary\": \"Proposal to add the functionality for inscriptions to specify background and foreground colors\", \"sentiment\": \"neutral\", \"labels\": [\"website\", \"design\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add the functionality for inscriptions to specify background and foreground colors", "sentiment": "neutral", "labels": ["website", "design"]}}, {"number": 1071, "title": "`ord wallet sweep <ADDRESSES>`", "summary": "{\"summary\": \"`ord wallet sweep <ADDRESSES>` allows sweeping the wallet while preserving the number of outputs, but there are concerns about how to handle inscriptions and cardinal utxos. There is confusion whether the purpose is to combine all cardinals into one utxo while leaving inscriptions untouched or to separate inscriptions that have been merged into the same utxo.`\", \"sentiment\": \"confused\", \"labels\": [\"wallet\", \"bitcoin-cli\", \"user-support\", \"integration\"]}", "reactionGroups": {"THUMBS_UP": 1, "ROCKET": 2, "HEART": 1, "LAUGH": 1}, "summaryJson": {"summary": "`ord wallet sweep <ADDRESSES>` allows sweeping the wallet while preserving the number of outputs, but there are concerns about how to handle inscriptions and cardinal utxos. There is confusion whether the purpose is to combine all cardinals into one utxo while leaving inscriptions untouched or to separate inscriptions that have been merged into the same utxo.`", "sentiment": "confused", "labels": ["wallet", "bitcoin-cli", "user-support", "integration"]}}, {"number": 1065, "title": "Show Github activity in Discord eg. via a webhook", "summary": "{\"summary\": \"Proposal to show GitHub activity in Discord via a webhook\", \"sentiment\": \"enthusiastic\", \"labels\": [\"communication\", \"integration\", \"development\"]}\"", "reactionGroups": {"THUMBS_UP": 2}}, {"number": 1062, "title": "Guide to installing bitcoin core", "summary": "{\"summary\": \"Difficulty installing and running Bitcoin core is a problem for new users. Proposal to create a guide that simplifies installation on different operating systems.\", \"sentiment\": \"positive\", \"labels\": [\"user-support\", \"project-improvement\", \"documentation\"]}", "reactionGroups": {"ROCKET": 1}, "summaryJson": {"summary": "Difficulty installing and running Bitcoin core is a problem for new users. Proposal to create a guide that simplifies installation on different operating systems.", "sentiment": "positive", "labels": ["user-support", "project-improvement", "documentation"]}}, {"number": 1060, "title": "Announcements", "summary": "{\"summary\": \"User is seeking a way to announce events, features, milestones, etc. and is considering options such as mailing list, Twitter, RSS feed, blog, and Discord channel. Commenters suggest using Substack and Twitter for release notes and longer form content, as well as receiving feedback.\", \"sentiment\": \"positive\", \"labels\": [\"communications\", \"community-engagement\", \"marketing\", \"social-media\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "User is seeking a way to announce events, features, milestones, etc. and is considering options such as mailing list, Twitter, RSS feed, blog, and Discord channel. Commenters suggest using Substack and Twitter for release notes and longer form content, as well as receiving feedback.", "sentiment": "positive", "labels": ["communications", "community-engagement", "marketing", "social-media"]}}, {"number": 1057, "title": "Improve social media previews", "summary": "{\"summary\": \"Improvement request for social media previews on different platforms (Twitter, Facebook, Discord, Signal)\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"social-media\", \"web-development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Improvement request for social media previews on different platforms (Twitter, Facebook, Discord, Signal)", "sentiment": "neutral", "labels": ["enhancement", "social-media", "web-development"]}}, {"number": 1055, "title": "Have an IRL or Discord inscription party", "summary": "{\"summary\": \"Proposal to host an inscription party to help people with full node setup and inscription process\", \"sentiment\": \"neutral\", \"labels\": [\"community-event\", \"full-node-setup\", \"inscriptions\"]}", "reactionGroups": {"HOORAY": 3}, "summaryJson": {"summary": "Proposal to host an inscription party to help people with full node setup and inscription process", "sentiment": "neutral", "labels": ["community-event", "full-node-setup", "inscriptions"]}}, {"number": 1053, "title": "Document supported inscription content types", "summary": "{\"summary\": \"Request to document supported inscription content types\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"inscriptions\", \"web development\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Request to document supported inscription content types", "sentiment": "neutral", "labels": ["documentation", "inscriptions", "web development"]}}, {"number": 1032, "title": "Make satpoint page", "summary": "{\"summary\": \"Proposal to rename 'satpoints' to 'slots' for better usability\", \"sentiment\": \"neutral\", \"labels\": [\"user-experience\", \"naming-convention\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Proposal to rename 'satpoints' to 'slots' for better usability", "sentiment": "neutral", "labels": ["user-experience", "naming-convention"]}}, {"number": 1014, "title": "How to do organization membership w/ordinals?", "summary": "{\"summary\": \"Proposal to use ordinals for organization membership with revocable prime ordinals\", \"sentiment\": \"neutral\", \"labels\": [\"proposal\", \"membership\", \"organization\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to use ordinals for organization membership with revocable prime ordinals", "sentiment": "neutral", "labels": ["proposal", "membership", "organization"]}}, {"number": 1005, "title": "Inscription titles", "summary": "{\"summary\": \"Proposal to add a title field in the envelope header for inscriptions, which would be displayed below the inscription on the /inscription page. The title field would be limited to 520 bytes. Additionally, the proposal suggests using the title field for machine-readable metadata, and potentially using a separate 'name' field for human-readable filenames.\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"NFT standards\", \"metadata\", \"file management\"] }", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Proposal to add a title field in the envelope header for inscriptions, which would be displayed below the inscription on the /inscription page. The title field would be limited to 520 bytes. Additionally, the proposal suggests using the title field for machine-readable metadata, and potentially using a separate 'name' field for human-readable filenames.", "sentiment": "neutral", "labels": ["blockchain", "NFT standards", "metadata", "file management"]}}, {"number": 987, "title": "Present in front of Blockchain Club", "summary": "As the body of the issue is empty, it's hard to infer much about the issue itself. Could you please provide some more context or details about the issue?", "reactionGroups": {}}, {"number": 971, "title": "Inscription set regression test", "summary": "{\"summary\": \"Regression testing needed to ensure inscription set consistency between mainnet releases\", \"sentiment\": \"neutral\", \"labels\": [\"testing\", \"mainnet\", \"consistency\"]}\"", "reactionGroups": {}}, {"number": 966, "title": "Make privacy FAQ", "summary": "{\"summary\": \"The issue is to create a privacy FAQ\", \"sentiment\": null, \"labels\": [\"documentation\", \"privacy\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The issue is to create a privacy FAQ", "sentiment": null, "labels": ["documentation", "privacy"]}}, {"number": 965, "title": "Reach out to artists", "summary": "{\"summary\": \"Proposal to reach out to artists to promote the usage of ordinals among potential collectors\", \"sentiment\": \"neutral\", \"labels\": [\"community-engagement\", \"user-acquisition\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to reach out to artists to promote the usage of ordinals among potential collectors", "sentiment": "neutral", "labels": ["community-engagement", "user-acquisition"]}}, {"number": 949, "title": "Link to inscriptions in docs", "summary": "{\"summary\": \"Request to include a link to example inscriptions in the documentation\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to include a link to example inscriptions in the documentation", "sentiment": "neutral", "labels": ["documentation", "feature-request"]}}, {"number": 946, "title": "Make a tutorial video", "summary": "{\"summary\": \"Request to create a tutorial video explaining how to sync a full node, install ord, and make an inscription\", \"sentiment\": \"neutral\", \"labels\": [\"documentation\", \"education\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to create a tutorial video explaining how to sync a full node, install ord, and make an inscription", "sentiment": "neutral", "labels": ["documentation", "education"]}}, {"number": 943, "title": "Traits and rarity", "summary": "{\"summary\": \"Proposal to add traits of different rarity to generative collections\", \"sentiment\": \"positive\", \"labels\": [\"blockchain\", \"NFTs\", \"metadata\", \"community engagement\"]}\n\nExplanation: The issue is discussing the possibility of adding traits of different rarity to generative collections, which would be interesting to collectors. There seems to be a positive sentiment towards the proposed solutions, with Comment0 suggesting a solution and even providing a pull request. Comment1 suggests leveraging BIP-322 for metadata, which could have broader applications, but acknowledges that the current proposal is simple enough to implement without over-engineering. Comment2 supports the proposed solutions and emphasizes the need for on-chain traits. The labels reflect the relevant categories, including blockchain, NFTs, metadata, and community engagement.", "reactionGroups": {"THUMBS_UP": 6}}, {"number": 936, "title": "Go on podcasts", "summary": "{\"summary\": \"Suggestion to promote the project through podcast appearances\", \"sentiment\": \"positive\", \"labels\": [\"marketing\", \"promotion\", \"community-engagement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Suggestion to promote the project through podcast appearances", "sentiment": "positive", "labels": ["marketing", "promotion", "community-engagement"]}}, {"number": 923, "title": "Generators", "summary": "{\"summary\": \"Discussion on tracking and visually representing rare sats, potentially changing their name to atoms and creating HTML inscriptions using generator algorithms\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"database\", \"algorithm\", \"naming\", \"visual-representation\", \"html\", \"miner-reward\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Discussion on tracking and visually representing rare sats, potentially changing their name to atoms and creating HTML inscriptions using generator algorithms", "sentiment": "neutral", "labels": ["blockchain", "database", "algorithm", "naming", "visual-representation", "html", "miner-reward"]}}, {"number": 913, "title": "Command for showing pending utxos", "summary": "{\"summary\": \"Proposal to update a command in the wallet to display pending outputs with new states\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"user-interface\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to update a command in the wallet to display pending outputs with new states", "sentiment": "neutral", "labels": ["wallet", "user-interface"]}}, {"number": 904, "title": "Recover from partial inscription using recovery key", "summary": "{\"summary\": \"Proposal to recover inputs using recovery key if reveal transaction cannot be mined\", \"sentiment\": \"positive\", \"labels\": [\"recovery\", \"transaction\", \"bounty-program\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to recover inputs using recovery key if reveal transaction cannot be mined", "sentiment": "positive", "labels": ["recovery", "transaction", "bounty-program"]}}, {"number": 891, "title": "Add compression via content-encoding", "summary": "{\"summary\": \"Proposal to add compression via content-encoding to reduce resource size\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"web development\", \"performance\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to add compression via content-encoding to reduce resource size", "sentiment": "neutral", "labels": ["enhancement", "web development", "performance"]}}, {"number": 884, "title": "Inscription graffiti", "summary": "{\"summary\": \"The issue concerns the concern of artists and users over inscriptions being added without consent, and possible solutions.\", \"sentiment\": \"concerned\", \"labels\": [\"art\", \"user-privacy\"]}", "reactionGroups": {}, "summaryJson": {"summary": "The issue concerns the concern of artists and users over inscriptions being added without consent, and possible solutions.", "sentiment": "concerned", "labels": ["art", "user-privacy"]}}, {"number": 876, "title": "Bundles", "summary": "{\"summary\": \"Proposal to allow multiple inscriptions in a single transaction, with options for assigning inscriptions to sats in the output based on FIFO or explicit offset\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"protocol-enhancement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to allow multiple inscriptions in a single transaction, with options for assigning inscriptions to sats in the output based on FIFO or explicit offset", "sentiment": "neutral", "labels": ["wallet", "protocol-enhancement"]}}, {"number": 813, "title": "Ord index terminating every few thousand blocks", "summary": "Title: \"Ord index terminating every few thousand blocks\"\nBody: \"Reported by @VirtuallyThere:  > ord index is terminating every few thousands - ten thousands blocks for no apparent reason and without error message - so I need to run it in a loop from the shell.... So far had to restart 71 times for indexing from genesis block to block 665500 \"\nComment0 :This data is from running 325201f0840ba4e7113ce5ea8ef840c6e5f89a49    In total, required 98 runs of the index command. Total time to run was from 2022-11-15T21:51:35Z to 2022-11-18T15:32:06Z so roughly 64 hours. Time and block height of stoppages attached.  [issue-813.txt](https://github.com/casey/ord/files/10044658/issue-813.txt)  \nComment1 :Running with latest master from today - interestingly the first block heights where it terminates are identical, but not the third one:  ```  index-1668801599.log  [2022-11-18T20:37:53Z INFO  ord::index::updater] Committing at block height 365034, 300237 outputs traversed, 253718 in map, 168704319 cached  index-1668803877.log  [2022-11-18T20:41:44Z INFO  ord::index::updater] Committing at block height 370068, 47832 outputs traversed, 32856 in map, 9528618 cached  index-1668804106.log  [2022-11-18T20:44:22Z INFO  ord::index::updater] Committing at block height 375069, 13904422 outputs traversed, 2794084 in map, 11110342 cached  ```\nComment2 :Second run with latest master from Friday (fa7999524f986f421b5c86a3f454e8ef933ba8d5) finished. Command I am using:  ```  export RUST_LOG=info ; while true ; do target/release/ord --cookie-file /opt/node/bitcoin/data/.cookie --data-dir data index 2>&1 | tee data/index-$(date +%s).log ; done  ```    In total, 86 runs of the index command. Total time to run was from 2022-11-18T20:37:53Z to 2022-11-20T01:38:11Z so roughly 31 hours.     Time and block height of stoppages attached.    [stoppages-813.log](https://github.com/casey/ord/files/10049687/stoppages-813.log)\nComment3 :It's a JSON-RPC error, somehow our retry does not work:  ```  [2022-11-20T16:12:43Z ERROR ord::index::updater] Failed to fetch block 255034: JSON-RPC error: transport error: Couldn't connect to host: Connection reset by peer (os error 54)  ```\nComment4 :Turns out this is just https://github.com/casey/ord/issues/747 and we should probably resurrect https://github.com/casey/ord/pull/748\nComment5 :This is no longer a problem, retrying in #820 means that we continue even if we get an error. However, this is still happening, and the pattern is so regular that I think we must be doing something weird:    ```  [2022-11-23T01:32:49Z ERROR ord::index::updater] failed to fetch block 505034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T01:44:27Z ERROR ord::index::updater] failed to fetch block 510034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T01:53:09Z ERROR ord::index::updater] failed to fetch block 515034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T01:58:12Z ERROR ord::index::updater] failed to fetch block 520034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:03:21Z ERROR ord::index::updater] failed to fetch block 525034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:09:05Z ERROR ord::index::updater] failed to fetch block 530034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:15:03Z ERROR ord::index::updater] failed to fetch block 535034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:19:44Z ERROR ord::index::updater] failed to fetch block 540034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:24:18Z ERROR ord::index::updater] failed to fetch block 545034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:38:54Z ERROR ord::index::updater] failed to fetch block 555034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:47:13Z ERROR ord::index::updater] failed to fetch block 560034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T02:54:43Z ERROR ord::index::updater] failed to fetch block 565034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T03:01:49Z ERROR ord::index::updater] failed to fetch block 570034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T03:10:07Z ERROR ord::index::updater] failed to fetch block 575034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T03:17:05Z ERROR ord::index::updater] failed to fetch block 580034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T03:26:25Z ERROR ord::index::updater] failed to fetch block 585034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [2022-11-23T03:36:03Z ERROR ord::index::updater] failed to fetch block 590034, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  ```    It starts around block 365034, and from there we get an error every time `block_number == x * 5000 + 34`. The updater writes to the database every 5000 blocks, but the 34 is a mystery.\nComment6 :This is low priority, since it's not actually causing any problems, so pushing it back to the production inscriptions milestone.\nComment7 :> The updater writes to the database every 5000 blocks, but the 34 is a mystery.    Maybe, not so much of a mystery. The MPSC channel that the background block fetcher uses to send blocks to the main thread can queue up 32 blocks.    - Updater flushes to database  - Meanwhile, 32 blocks are fetched and sent into the channel, and the block fetcher blocks when it tries to insert the 33rd  - Updater finishes flushing  - Something bad happens  - Request for block fails    My guess is that this is related to the 15 second timeout in `jsonrpc::SimpleHttpTransport`. Once flushing to the database starts taking long enough, it starts hitting the timeout.\nComment8 :FYI I'm seeing this on my linux system on latest master.\nComment9 :I suspect latest master is particularly bad here, because of #1166, so flushes are taking a lot longer, so we're more likely to hit the timeout.\nComment10 :I face this issue with `0.4.2` on macOS.    Below is sample logs:  ```  $ ord --first-inscription-height 767429 server    Listening on http://0.0.0.0:80  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 565000/774595[2023-02-01T16:00:28Z ERROR ord::index::updater] failed to fetch block 565033, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 570000/774595[2023-02-01T16:08:03Z ERROR ord::index::updater] failed to fetch block 570033, retrying in 2s: JSON-RPC error: transport error: HTTP response too short: length 0, needed 12.  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 575000/774595[2023-02-01T16:18:47Z ERROR ord::index::updater] failed to fetch block 575033, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: Broken pipe (os error 32)  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 578298/774595[2023-02-01T16:25:07Z ERROR ord::index::updater] failed to fetch block 578331, retrying in 2s: JSON-RPC error: transport error: HTTP response too short: length 0, needed 12.  [indexing blocks] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 580000/774595    ```    Then I broke and run the server, yet again.\nComment11 :My mac with Xeon processor and ECC RAM crashed while indexing blocks and being stuck at 580000 for about 18 minutes. Below is the panic log:     ```  macpanic(cpu 10 caller 0xffffff800dcd7941): userspace watchdog timeout: no successful checkins from logd in 120 seconds  service returned not alive with context : unresponsive dispatch queue(s): com.apple.firehose.io-wl   logd has not exited since first loaded  service: logd, total successful checkins in 131117 seconds: 13097, last successful checkin: 120 seconds ago  service: WindowServer, total successful checkins in 131081 seconds: 13094, last successful checkin: 120 seconds ago  service: remoted, total successful checkins in 131117 seconds: 13110, last successful checkin: 0 seconds ago  service: opendirectoryd, total successful checkins in 131117 seconds: 13111, last successful checkin: 0 seconds ago  service: configd, total successful checkins in 131117 seconds: 13111, last successful checkin: 0 seconds ago    Panicked task 0xffffff907e6849d8: 4 threads: pid 114: watchdogd  Backtrace (CPU 10), panicked thread: 0xffffff8bb2514b30, Frame : Return Address  0xfffffff586627590 : 0xffffff800a9eb31d   0xfffffff5866275e0 : 0xffffff800ab59236   0xfffffff586627620 : 0xffffff800ab48480   0xfffffff586627670 : 0xffffff800a985951   0xfffffff586627690 : 0xffffff800a9eb5fd   0xfffffff586627780 : 0xffffff800a9eaca9   0xfffffff5866277e0 : 0xffffff800b1e0993   0xfffffff5866278d0 : 0xffffff800dcd7941   0xfffffff5866278e0 : 0xffffff800dcd75e0   0xfffffff586627900 : 0xffffff800dcd66c9   0xfffffff586627a30 : 0xffffff800b153f0a   0xfffffff586627b90 : 0xffffff800aaffe89   0xfffffff586627ca0 : 0xffffff800a9c2c69   0xfffffff586627d50 : 0xffffff800a9dbb62   0xfffffff586627dc0 : 0xffffff800a9dc26a   0xfffffff586627ef0 : 0xffffff800ab2aa7a   0xfffffff586627fa0 : 0xffffff800a985db6         Kernel Extensions in backtrace:           com.apple.driver.watchdog(1.0)[92D3D6F6-4641-3F89-B20E-AE9C7FA0BA06]@0xffffff800dcd5000->0xffffff800dcd7fff    Process name corresponding to current thread (0xffffff8bb2514b30): watchdogd    Mac OS version:  22C65    Kernel version:  Darwin Kernel Version 22.2.0: Fri Nov 11 02:08:47 PST 2022; root:xnu-8792.61.2~4/RELEASE_X86_64  Kernel UUID: 6B3374E9-7FD7-354D-886F-E995FAAC2CA3  roots installed: 0  KernelCache slide: 0x000000000a600000  KernelCache base:  0xffffff800a800000  Kernel slide:      0x000000000a6dc000  Kernel text base:  0xffffff800a8dc000  __HIB  text base: 0xffffff800a700000  System model name: iMacPro1,1 (Mac-7BA5B2D9E42DDD94)  System shutdown begun: NO  Hibernation exit count: 0    System uptime in nanoseconds: 131117753756239  Last Sleep:           absolute           base_tsc          base_nano    Uptime  : 0x000077403b22ed28    Sleep   : 0x0000000000000000 0x0000000000000000 0x0000000000000000    Wake    : 0x0000000000000000 0x0005fbea02a1d000 0x0000000000000000  Compressor Info: 2% of compressed pages limit (OK) and 4% of segments limit (OK) with 2 swapfiles and OK swap space  Zone info:    Zone map: 0xffffff807d024000 - 0xffffffa07d024000    . PGZ   : 0xffffff807d024000 - 0xffffff8081025000    . VM    : 0xffffff8081025000 - 0xffffff854d358000    . RO    : 0xffffff854d358000 - 0xffffff86e69be000    . GEN0  : 0xffffff86e69be000 - 0xffffff8bb2cf1000    . GEN1  : 0xffffff8bb2cf1000 - 0xffffff907f024000    . GEN2  : 0xffffff907f024000 - 0xffffff954b357000    . GEN3  : 0xffffff954b357000 - 0xffffff9a1768a000    . DATA  : 0xffffff9a1768a000 - 0xffffffa07d024000    Metadata: 0xffffff8031014000 - 0xffffff8051014000    Bitmaps : 0xffffff8051014000 - 0xffffff805d014000    last started kext at 125095566278442: >usb.cdc.acm\t5.0.0 (addr 0xffffff7fa0545000, size 12288)  last stopped kext at 125747247159303: >usb.serial\t6.0.0 (addr 0xffffff7fa05c4000, size 20480)  loaded kexts:  @macos.driver.!UEthernetHost\t8.1.1  >AudioAUUC\t1.70  >usb.!UHostBillboardDevice\t1.0  @filesystems.cd9660\t1.4.4  @filesystems.smbfs\t5.0  >!ATopCaseHIDEventDriver\t6000.22  >AGPM\t131  >X86PlatformShim\t1.0.0  >!APlatformEnabler\t2.7.0d0  @filesystems.autofs\t3.0  >!AHIDALSService\t1  >!AUpstreamUserClient\t3.6.9  @kext.AMDFramebuffer\t4.0.9  @kext.AMDRadeonX5000\t4.0.9  @kext.AMDRadeonServiceManager\t4.0.9  >!AGFXHDA\t200.2  >!ABridgeAudio!C\t300.10  >!AGraphicsDevicePolicy\t7.1.18  @AGDCPluginDisplayMetrics\t7.1.18  >pmtelemetry\t1  @filesystems.nfs\t1  |IOUserEthernet\t1.0.1  >usb.!UUserHCI\t1  >!AHV\t1  >!ADiskImages2\t198.40.3  >!A!IMCEReporter\t115  @kext.AMD10000!C\t4.0.9  >BridgeAudioCommunication\t300.10  >!AMCCSControl\t1.16  >!AAVEBridge\t6.1  >!A!IPCHPMC\t2.0.1  >!AThunderboltIP\t4.0.3  >!A!ISlowAdaptiveClocking\t4.0.0  |SCSITaskUserClient\t476  >!UCardReader\t547  @!AEthernetAquantiaAqtionFirmware\t1.0.36  >!AFileSystemDriver\t3.0.1  @filesystems.tmpfs\t1  >BCMWLANFirmware4387.Hashstore\t1  >BCMWLANFirmware4378.Hashstore\t1  >BCMWLANFirmware4377.Hashstore\t1  >BCMWLANFirmware4364.Hashstore\t1  >BCMWLANFirmware4355.Hashstore\t1  @filesystems.lifs\t1  @filesystems.hfs.kext\t627.40.1  @BootCache\t40  @!AFSCompression.!AFSCompressionTypeZlib\t1.0.0  @!AFSCompression.!AFSCompressionTypeDataless\t1.0.0d1  @filesystems.apfs\t2142.61.2  >!ABCMWLANBusInterfacePCIeMac\t1  @private.KextAudit\t1.0  >!AACPIButtons\t6.1  >!ASMBIOS\t2.1  >!AACPIEC\t6.1  >!AAPIC\t1.7  $!AUserConsent\t1  @!ASystemPolicy\t2.0.0  @nke.applicationfirewall\t403  |IOKitRegistryCompatibility\t1  |EndpointSecurity\t1  @Dont_Steal_Mac_OS_X\t7.0.0  @kec.Compression\t1  @kec.!AEncryptedArchive\t1  >!AHIDKeyboard\t231  >!AActuatorDriver\t6400.44  >!AMultitouchDriver\t6400.44  >!AInputDeviceSupport\t6400.40  >!AHS!BDriver\t6000.22  >IO!BHIDDriver\t9.0.0  >!AAudioClockLibs\t200.5  @kext.AMDRadeonX5100HWLibs\t1.0  |IOAccelerator!F2\t475  @kext.AMDRadeonX5000HWServices\t4.0.9  >usb.IOUSBHostHIDDevice\t1.2  |IOAudio!F\t400.3  @vecLib.kext\t1.2.0  @kext.triggers\t1.0  >IOHIDPowerSource\t1  |IO!BSerialManager\t9.0.0  |IO!BPacketLogger\t9.0.0  |IO!BHost!CUSBTransport\t9.0.0  |IO!BHost!CUARTTransport\t9.0.0  |IO!BHost!CTransport\t9.0.0  >IO!BHost!CPCIeTransport\t9.0.0  |IOAVB!F\t1120.2  |CSR!BHost!CUSBTransport\t9.0.0  |Broadcom!BHost!CUSBTransport\t9.0.0  |Broadcom!B20703USBTransport\t9.0.0  >!ARSMChannel\t1  |IORSM!F\t1  >!AIPAppender\t1.0  >!A!ILpssUARTv1\t3.0.60  >!A!ILpssUARTCommon\t3.0.60  >!AOnboardSerial\t1.0  >!AGraphicsControl\t7.1.18  |IONDRVSupport\t597  >!UMergeNub\t900.4.2  @kext.AMDSupport\t4.0.9  >!ASMBus!C\t1.0.18d1  @!AGPUWrangler\t7.1.18  @!AGraphicsDeviceControl\t7.1.18  |IOGraphics!F\t597  @plugin.IOgPTPPlugin\t1110.13  >driverkit.serial\t6.0.0  >!AThunderboltDPOutAdapter\t8.5.1  >X86PlatformPlugin\t1.0.0  >IOPlatformPlugin!F\t6.0.0d8  |IOSlowAdaptiveClocking!F\t1.0.0  >usb.cdc.ecm\t5.0.0  >usb.cdc.ncm\t5.0.0  >usb.cdc\t5.0.0  >usb.networking\t5.0.0  >usb.!UHostCompositeDevice\t1.2  >!AThunderboltDPInAdapter\t8.5.1  >!AThunderboltDPAdapter!F\t8.5.1  >!AThunderboltPCIDownAdapter\t4.1.1  >!AHPM\t3.4.4  >!A!ILpssI2C!C\t3.0.60  >!A!ILpssI2C\t3.0.60  >!A!ILpssDmac\t3.0.60  >!ABSDKextStarter\t3  |IOSurface\t334.0.1  @filesystems.hfs.encodings.kext\t1  >!ASyntheticGame!C\t10.3.5  >!AThunderboltNHI\t7.2.81  |IOThunderbolt!F\t9.3.3  >!AXsanScheme\t3  >!AEthernetAquantiaAqtion\t1.0.64  >!ABCMWLANCoreMac\t1.0.0  |IO80211!F\t1200.13.0  >IOImageLoader\t1.0.0  >!AOLYHALMac\t1  |IOSerial!F\t11  >corecapture\t1.0.4  >usb.!UVHCIBCE\t1.2  >usb.!UVHCICommonBCE\t1.0  >usb.!UVHCI\t1.2  >usb.!UVHCICommon\t1.0  >!AEffaceableNOR\t1.0  |IOBufferCopy!C\t1.1.0  |IOBufferCopyEngine!F\t1  |IONVMe!F\t2.1.0  >usb.!UHostPacketFilter\t1.0  |IOUSB!F\t900.4.2  >usb.!UXHCIPCI\t1.2  >usb.!UXHCI\t1.2  >!AEFINVRAM\t2.1  >!ASMCRTC\t1.0  >!AEFIRuntime\t2.1  |IOSMBus!F\t1.1  |IOHID!F\t2.0.0  |IOTimeSync!F\t1110.13  |IOSkywalk!F\t1.0  >mDNSOffloadUserClient\t1.0.1b8  |IONetworking!F\t3.4  >DiskImages\t493.0.0  |IO!B!F\t9.0.0  |IOReport!F\t47  $quarantine\t4  $sandbox\t300.0  @kext.!AMatch\t1.0.0d1  >!ASSE\t1.0  >!AKeyStore\t2  >!UTDM\t547  |IOUSBMass!SDriver\t232  |IOSCSIBlockCommandsDevice\t476  |IO!S!F\t2.1  |IOSCSIArchitectureModel!F\t476  >!AMobileFileIntegrity\t1.0.5  $!AImage4\t5.0.0  @kext.CoreTrust\t1  >!AFDEKeyStore\t28.30  >!AEffaceable!S\t1.0  >!ACredentialManager\t1.0  |CoreAnalytics!F\t1  >KernelRelayHost\t1  |IOUSBHost!F\t1.2  >!UHostMergeProperties\t1.2  >usb.!UCommon\t1.0  >!ABusPower!C\t1.0  >!ASEPManager\t1.0.1  >IOSlaveProcessor\t1  >!AACPIPlatform\t6.1  >!ASMC\t3.1.9  |IOPCI!F\t2.9  |IOACPI!F\t1.4  >watchdog\t1  @kec.pthread\t1  @kec.Libm\t1  @kec.corecrypto\t12.0  ```    Until that point, the following blocks hanged for less than 30 seconds each:  577934/774682  578195/774682  578402/774682  578620/774682  579121/774682  579975/774682    After the crash, the indexing started from ~577K again.    I've ord 0.4.2 running on macOS Ventura.\nComment12 :i am getting similar issues on Mac OSX 12.6.3, Mac Pro 7,1 tower (2019 cheese grater), plenty of horsepower & 250GB SSD internal space left.    When using `ord index` it gets to 659956 and it just stops doing anything, left for hours, nothing...   many rpc errors on the way:  `[2023-02-02T05:28:09Z ERROR ord::index::updater] failed to fetch block 659819, retrying in 2s: JSON-RPC error: transport error: HTTP response too short: length 0, needed 12.`    I have been trying for a week, incredibley frustrating. \"ord index\" restarts from 6555000 and continues to hang at 659956. repeats the same thing, have repeated 20+ times...    Have tried disconnect bitcoind and restarting, also bitcoin reindex (took forever but work successfully), running out of options...    I have no idea what to do here... incredibly frustrating, appreciate any advice... \nComment13 :Crashed with a panic again. 0.4.2 won't fool me again. Moving on to build from the master branch.\nComment14 :10f8469a09f601d2ae4939a2d74b0f607782a26b is the first bad commit\nComment15 :> [10f8469](https://github.com/casey/ord/commit/10f8469a09f601d2ae4939a2d74b0f607782a26b) is the first bad commit    This definitely seems like a bad bisect. That commit is super harmless.\nComment16 :Yes, that's a bad bisect. I meant to write that to https://github.com/casey/ord/issues/1467. Please ignore.\nComment17 :seeing similar behavior on AWS hosted windows machine. was smooth sailing until block 335,000. after that getting the below error consistently every 5000 blocks    `[2023-02-07T06:04:59Z ERROR ord::index::updater] failed to fetch block 400033, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: An established connection was aborted by the software in your host machine. (os error 10053)`    ![image](https://user-images.githubusercontent.com/42014195/217163292-633df5b6-69fa-468a-b5e4-86c4d256c552.png)\nComment18 :> seeing similar behavior on AWS hosted windows machine. was smooth sailing until block 335,000. after that getting the below error consistently every 5000 blocks  >   > `[2023-02-07T06:04:59Z ERROR ord::index::updater] failed to fetch block 400033, retrying in 2s: JSON-RPC error: transport error: Couldn't connect to host: An established connection was aborted by the software in your host machine. (os error 10053)`  >   > ![image](https://user-images.githubusercontent.com/42014195/217163292-633df5b6-69fa-468a-b5e4-86c4d256c552.png)    Index still running 13 hours later with the same behavior (error every 5000 blocks) on the \u261d\ud83c\udffe system.    I started this process on a locally hosted machine and got the error much earlier (block 29400, block 122629, block 129636). No discernible pattern on when the error is occurring on this system. Hope it helps! \nComment19 :Should be fixed by https://github.com/casey/ord/pull/1516.", "reactionGroups": {}}, {"number": 802, "title": "Offers", "summary": "Title: \"Offers\"\nBody: \"This doesn't need to be done for mainnet, but we need to make sure that it can be done eventually.    ## Ask: Offer to sell sats    ### Inputs  - A: Zero-value dummy output, provided by taker  - B: Value M output containing ordinals to be sold, provided by maker  - C: Value N output containing cardinal sats to be used for payment, provided by taker    ### Outputs  - X: Value M output with taker's address  - Y: Value N output with maker's address    ### Steps    - Maker creates PSBT providing a signature for B, which commits to Y, using `SIGHASH_SINGLE | SIGHASH_ANYONECANPAY`. Due to A, B and Y have same index  - Maker broadcasts PSBT  - Taker adds inputs A and C and output Y and finalizes transaction  - Taker broadcasts transaction  - When transaction is mined, maker receives cardinal sats in Y for payment, taker receives ordinal sats in X    ## Bid: Offer to buy sats    ### Inputs  - A: Zero-value dummy output, provided by taker  - B: Value N output containing ordinal sats to be bought, provided by taker  - C: Value M output containing cardinal sats for payment, provided by maker    ### Outputs  - X: Value N output with maker's address  - Y: Value M output with taker's address    ### Steps    - Maker creates PSBT providing a signature for C, which commits to A, B, C, and X, using `SIGHASH_SINGLE`  - Maker broadcasts PSBT  - Taker adds output Y  - Taker signs and broadcasts transaction  - When transaction is mined, maker receives ordinal sats in Y for payment, taker receives cardinal sats in X    Notes:  - Offer to buy is wrong but can be fixed.\"\nComment0 :In offers to buy, can people include change so they an use input uxos of any size?\nComment1 :This but also for inscriptions\nComment2 :@cryptoquick This actually covers inscriptions! Since inscriptions are on sats, which transfer using the ordinals protocol, offers to buy and sell individual sats work for inscriptions. (UX obviously needs to be there too!)\nComment3 :One of the things I think is critical for the design of this feature is that 3rd-parties can be optionally designated as recipients in the transaction. Most notably:    - a fee for the exchange (e.g. OpenSea) and  - a fee for the artist (royalties)    Ordinals will have the same issues as Ethereum in enforcing these, but both of those fees are massive forces for good and we should design offers to support them from the get-go    Because if tool-builders and artists know they can participate in the ongoing economy, you'll see an incredible amount of work poured into the ecosystem\nComment4 :@cryppadotta As far as I can tell, there is no way to implement royalties in an enforcable, technically reasonable way. See https://github.com/casey/ord/discussions/773 for some discussion we've been having on the topic.\nComment5 :Offers could certainly include a \"tip\" output to a third-partty, and venues (marketplaces, artist home pages, discords), etc could require that an offer file contain a tip in order to show it one the homepage, etc. I think this would be great. Offers are simple and flexible enough that we can add this in a v2 version. So I think no need to worry about it in the MVP. Offers are off-chain, and easy to upgrade!\nComment6 :What are the options for writing more protocols around Ordinals - bitcoin script only? Or is it possible to use sapio, stacks/clarity? (or anything else like that). Thanks!\nComment7 :I know you've taken a look at Chia and ChiaLisp @casey but not sure if you've dived into how Offers are implemented there that may offer some ideas: https://chialisp.com/offers/    The defined NFT1 standard also enforces royalties on-chain via the transfer function part of the standard NFT1 program @cryppadotta    There are differences between [Chia's coin set model vs Bitcoin's UTXO](https://docs.chia.net/coin-set-vs-utxo) namely Chia's use of BLS enables signature aggregation in a better way than Schnorr but I'm not sure if there are other shortcomings in Bitcoin Script that makes a similar implementation not possible...\nComment8 :> What are the options for writing more protocols around Ordinals - bitcoin script only? Or is it possible to use sapio, stacks/clarity? (or anything else like that). Thanks!    Stacks is has a separate token, and is only thematically related to Bitcoin, so it and clarity will never be supported.    Sapio is an excellent project, and although I believe that @JeremyRubin is no longer working on it, it is open source and someone dedicated could pick up the torch. Sapio would be a great fit for filling in the gaps in Bitcoin Script for markets and services related to ordinals.\nComment9 :> I know you've taken a look at Chia and ChiaLisp @casey but not sure if you've dived into how Offers are implemented there that may offer some ideas: https://chialisp.com/offers/    Thanks for the link! I have looked at offers, and they definitely seem similar to what we want to do here.    > The defined NFT1 standard also enforces royalties on-chain via the transfer function part of the standard NFT1 program @cryppadotta    Royalties cannot be enforced on-chain, because the buyer and the seller can simply use another channel to perform the actual transfer of funds, and lie on chain about the actual sale price. Until I see a good implementation proposed that does not have this and other problems, I do not plan to add any royalty related functionality to `ord`.    > There are differences between [Chia's coin set model vs Bitcoin's UTXO](https://docs.chia.net/coin-set-vs-utxo) namely Chia's use of BLS enables signature aggregation in a better way than Schnorr but I'm not sure if there are other shortcomings in Bitcoin Script that makes a similar implementation not possible...    Offers as sketched out don't really use script, only input and output selection, but I would be curious if something is missing. The coin set model and the UTXO model are pretty much the same, so I often actually use the \"coin set\" terminology when describing bitcoin, because \"output\" is a pretty unfamiliar term to most people \ud83d\ude05\nComment10 :> Royalties cannot be enforced on-chain, because the buyer and the seller can simply use another channel to perform the actual transfer of funds, and lie on chain about the actual sale price. Until I see a good implementation proposed that does not have this and other problems, I do not plan to add any royalty related functionality to `ord`.    Well of course one can always get around royalties if you are okay with some level of trust. At the extreme I can sell you my private key to my wallet containing the NFT in exchange for cash and no information will take place on chain. The point with on-chain royalties (on Chia) is to create a standard where royalties are enforced when trustless Offer Files are used to exchange assets that follow that standard.    > Offers as sketched out don't really use script, only input and output selection, but I would be curious if something is missing. The coin set model and the UTXO model are pretty much the same, so I often actually use the \"coin set\" terminology when describing bitcoin, because \"output\" is a pretty unfamiliar term to most people \ud83d\ude05    Fair point. BLS aggregation also opens the door to things like aggregation of Offers so multiple can be taken simultaneously.    A bit off topic but I heard your interview on Bankless and was intrigued by how you think tokens (like ERC-20 or CAT1 on Chia) can be implemented in a similar way. I think that's what would make Offers very exciting if its utility can go beyond just BTC for ordinal trades (or ordinals for ordinals).  \nComment11 :> Well of course one can always get around royalties if you are okay with some level of trust. At the extreme I can sell you my private key to my wallet containing the NFT in exchange for cash and no information will take place on chain. The point with on-chain royalties (on Chia) is to create a standard where royalties are enforced when trustless Offer Files are used to exchange assets that follow that standard.    Someone can probably figure out trustless atomic swaps to remove trust and still use offer files. I want to avoid a scenario where we advertise that we have royalties to artists, but then as the amount of the value in the system increases, it becomes a confusing and chaotic race to the bottom like we're seeing in Ethereum.    > A bit off topic but I heard your interview on Bankless and was intrigued by how you think tokens (like ERC-20 or CAT1 on Chia) can be implemented in a similar way. I think that's what would make Offers very exciting if its utility can go beyond just BTC for ordinal trades (or ordinals for ordinals).    I think there's an issue open for fungible ordinals. I'm not sure how to support that, but we could add a metadata field to an inscription that said \"the next N sats after this inscription\" are fungible tokens. Support in `ord` would be hard, because special tracking for all those sat ranges would be difficult, but it's such a simple protocol-level extension that I would be open to adding it, if only so that others could experiment with it in other repos.\nComment12 :@SlowestTimelord Check out #787, I just copied my last comment there.\nComment13 :Sapio would only need minor changes to support basic ord functionality, but the biggest issue would be convention around fees probably.\nComment14 :question about incentives:  if i'm selling a rare sat, i set a price in my `Ask` offer  isn't there now an interesting dynamic where two buyers may compete with each other to fulfill it, and the one who pays a higher mining fee will win?\nComment15 :> question about incentives: if i'm selling a rare sat, i set a price in my `Ask` offer isn't there now an interesting dynamic where two buyers may compete with each other to fulfill it, and the one who pays a higher mining fee will win?    Yup, that is correct. Seller should set the price such that it's close to what sellers are willing to pay. If it's below what sellers are willing to pay, then they will increase their \"bid\" by adding fees, which will go to miners. There are probably a bunch of different auction mechanism, where the value is split in different ways between miners and sellers.    On the one hand, you have the #1611 method, where miners get all bids. On the other hand, you have a descending price auction where the seller continually releases PBSTs with lower and lower prices until someone takes it and pays EV - FEE to the seller, where EV is expected value, and FEE is what's required to get it mined, which goes to the miner.\nComment16 :Something like this:?    const bitcoin = require(\"bitcoinjs-lib\");  const bip32 = require(\"bip32\");  const bip39 = require(\"bip39\");    const mnemonic = \"a random mnemonic phrase used as seed for BIP32\";  const seed = bip39.mnemonicToSeed(mnemonic);  const node = bip32.fromSeed(seed);  const keyPairB = node.derivePath(\"m/44'/0'/0'/0/1\").keyPair;  const keyPairC = node.derivePath(\"m/44'/0'/0'/0/2\").keyPair;    const network = bitcoin.networks.testnet;  const p2pkhB = bitcoin.payments.p2pkh({ pubkey: keyPairB.publicKey, network });  const p2pkhC = bitcoin.payments.p2pkh({ pubkey: keyPairC.publicKey, network });  const p2pkhMaker = \"the address for the maker\";  const p2pkhTaker = \"the address for the taker\";    let psbt = new bitcoin.Psbt({ network });    psbt.addInput({    hash: \"the hash of transaction A\",    index: 0,    nonWitnessUtxo: Buffer.from(\"00\", \"hex\"),  });    psbt.addInput({    hash: \"the hash of transaction B\",    index: 0,    witnessUtxo: {      script: p2pkhB.output,      value: N,    },  });    psbt.addInput({    hash: \"the hash of transaction C\",    index: 0,    witnessUtxo: {      script: p2pkhC.output,      value: M,    },  });    psbt.addOutput({    address: p2pkhMaker,    value: N,  });    psbt.signInput(2, keyPairC, null, bitcoin.Transaction.SIGHASH_SINGLE | bitcoin.Transaction.SIGHASH_ANYONECANPAY);    const partiallySignedPsbt = psbt.toBase64();  console.log(\"Partially signed PSBT:\", partiallySignedPsbt);    // Maker broadcasts PSBT    psbt = bitcoin.Psbt.fromBase64(partiallySignedPsbt);    psbt.addOutput({    address: p2pkhTaker,    value: M,  });    psbt.signAllInputs(keyPairB);    const signedTransaction = psbt.finalizeAllInputs().extractTransaction().toHex();  console.log(\"Signed transaction:\", signedTransaction);    // Taker broadcasts transaction    // When transaction is mined, maker receives ordinal sats in Y for payment, taker receives cardinal sats in X\nComment17 :I think the script should use \"p2tr\" because ordinals are inscribed in the p2tr scripts.\nComment18 :> In offers to buy, can people include change so they an use input uxos of any size?    @casey, one way to support this is for the maker to include output Y, paying to the same address as the desired ordinal UTXO, output Z paying themselves change, and sign with SIGHASH_ALL. If the taker doesn't want to reuse the address, they can respond with an updated PSBT paying their preferred destination, also signed with SIGHASH_ALL. The added interactivity in that case isn't ideal, but I haven't thought of a better way to do it without SIGHASH_GROUP.\nComment19 :how would we do the zero-value dummy input? The rest of this seems pretty straightforward: construct the psbt with the psbt module in `rust-bitcoin`, sign with the `processpsbtwithwallet` rpc\nComment20 :> This actually covers inscriptions!    @casey does that mean an inscription can be created in the same \"sell offer\" PSBT so that it's zero-cost for a maker to create and sell inscriptions?\nComment21 : In the \"Ask: Offer to sell sats\", I fail to see how it is possible to guarantee these two:   - that the buyer pays a minimum value (otherwise transaction wont fulfill)   - and at the same time, that the buyer can be anyone (not specified in the transaction itself, so that anyone can buy)      It does make sense if you assume that:   - Buyer signs first   - Maker take a look at the payment partially signed by the taker/buyer and if they like it, they sign as well to send the ordinal sat    This way you can enforce both a minimum payment value AND that you know the buyer public key beforehand\nComment22 :Just created a topic on Discord #tech-support https://discord.com/channels/987504378242007100/1076920008065679500 in case we wanna discuss in a real time chat environment\nComment23 :@kevinfaveri the seller's signature commits to (only) the input spending the ordinal and the output paying himself the desired price, via SIGHASH_SINGLE|ANYONECANPAY. Anyone in possession of that PSBT can add an input spending at least the already-committed output's value and an output sending the ordinal to themselves, sign their input, and broadcast.    Having trouble verifying on Discord but will get in the chat when possible.\nComment24 :It occurs to me there's a MEV-like dynamic that arises with miners and fees in a hot inscription market. Since a miner can always break the transaction apart and try to snipe the purchase from the buyer, the incentive is to pay a fee premium equal to the expected appreciation of the NFT over whatever timescale a miner is likely willing to stay illiquid for.    Not a severe issue by any means but will be interesting to observe if/how this happens in practice.\nComment25 :> @kevinfaveri the seller's signature commits to (only) the input spending the ordinal and the output paying himself the desired price, via SIGHASH_SINGLE|ANYONECANPAY. Anyone in possession of that PSBT can add an input spending at least the already-committed output's value and an output sending the ordinal to themselves, sign their input, and broadcast.  >   > Having trouble verifying on Discord but will get in the chat when possible.    Thank you so much sir! So, in the \"Ask: Offer to sell sats\" theoretical algo, anyone can buy. Makes sense, but how to enforce that the buyer will pay the specific price of cardinal sats? e.g. will not try to pay less? Because maker only signs for the ordinal sat in the theoretical algo from @casey. Just the match between inputs and outputs should guarantee the minimum expected price, right?    If so, how to use the dummy output to match input and output \"sizes\"?    I think it is possible to workaround this (enforce a listing price) using OP_CODES that will validate the second input (from the taker, the payment) against a specific min price, right?    ---    I have found other challenges here already, but this is the core to validate the first scenario here.    Also, what do you guys use to sandbox these PSBTs easily? I suppose there isnt an easy way other than doing manually....\nComment26 :@orenyomtov just released an open source NFT marketplace base layer protocol.  Let's hack and validate it.    https://twitter.com/orenyomtov/status/1628106067119833107    https://github.com/orenyomtov/openordex    Congrats on the release and thanks on the choice of going OSS @orenyomtov, wish you good luck on your endeavor\nComment27 :Thanks! Would also love to cleanly abstract and export the capability as a library down the road    I'm also looking forward to creating a V2 that accomplishes this without the need for dummy UTXOs\nComment28 :> I'm also looking forward to creating a V2 that accomplishes this without the need for dummy UTXOs    Have you looked into the psbtv2 protocol update yet? Curious is this solves the problem (i suspect it'll require more rounds of communication tho)  \nComment29 :> > I'm also looking forward to creating a V2 that accomplishes this without the need for dummy UTXOs >  >  >  > Have you looked into the psbtv2 protocol update yet? Curious is this solves the problem (i suspect it'll require more rounds of communication tho) >  >   Do you know which wallets support psbtv2?\nComment30 :The latest version of libwally has it, if iiuc.  https://github.com/ElementsProject/libwally-core/releases/tag/release_0.8.8\nComment31 :Oh that's not consumer grade wallets tho. Yeah no, it'll probably be a good bit before they update.\nComment32 :If you wanted to play around with it though, that'd be a decent way to try it out.\nComment33 :There's a really bad bug in the Bid flow fyi, cc @casey.     This line is problematic.      > Maker creates PSBT providing a signature for C, which commits to A, B, C, and X, using SIGHASH_SINGLE    Given     ```  Inputs  A: Zero-value dummy output, provided by taker  B: Value N output containing ordinal sats to be bought, provided by taker  C: Value M output containing cardinal sats for payment, provided by maker  Outputs  X: Value N output with maker's address  Y: Value M output with taker's address  ```    SIGHASH_SINGLE on C is equivalent to SIGHASH_NONE. Yikes...    The transaction should instead be constructed as follows:    ```  Inputs  C: Value M output containing cardinal sats for payment, provided by maker  B: Value N output containing ordinal sats to be bought, provided by taker  A: Zero-value dummy output, provided by taker    Outputs  X: Value N output with maker's address  Y: Value M output with taker's address  ```    This makes the original instruction correct.    Edit: Just realized this doesn't work at all, you'd have to use SIGHASH_SINGLE|SIGHASH_ANYONECANPAY on the signature for C. Otherwise A can't be updated later.    Oh just noticed the \"Offer to buy is wrong but can be fixed.\"... except I don't think it can with existing sighash flags and zero-rounds of communication; multiround PSBTv2 or an input version of SIGHASH_GROUP (or OP_TXHASH) i think will fix.    Gonna use this as an opportunity to shill @base58btc classes, we cover how SIGHASH works in our in-person classes ;) https://base58.info      > there's a MEV-like dynamic that arises with miners and fees in a hot inscription market. Since a miner can always break the transaction apart and try to snipe the purchase from the buyer,     PSBTv2 and +1 round trip fixes this iiuc; you separate the compose phase from the sign phase, which lets you use SIGHASH_ALL to sign. This prevents anyone from outbidding you once broadcast. \nComment34 :> * Taker adds inputs A and C and output Y and finalizes transaction    In the Asks sections for this shouldn't it say that : Taker adds inputs A and C and output X and finalizes transaction?    Being that:  X: Value M output with taker's address  Y: Value N output with maker's address    Also, could  someone please explain why the Dummy UTXO is needed and why it needs to be empty or have less than 1000 Sats?    Any help great appreciated!    \nComment35 :> Also, could someone please explain why the Dummy UTXO is needed and why it needs to be empty or have less than 1000 Sats?    Dummy UTXO is required for SIGHASH_SINGLE, so the inputs/output indexes of the maker get lined up/covered for their signature (B + Y have same index position in their respective lists)\nComment36 :>   Thank you but I still don't understand this, need to study this more; some diagrams would help!  \nComment37 :Did an inscription swap without dummy UTXO:     1. Created PSBT 1 using `createpsbt` in which input is inscription UTXO and output is sell amount       ```     cHNidP8BAF4CAAAAAf6QBbK23/kX2b6+TwOMD+5K/3f/jev+O2ISBwUFJkjpAAAAAAD9////AUANAwAAAAAAIlEgggRYhIl33bjKgdv+G5AXrcTRKGyWQXBY/93IME8F4EYAAAAAAAAA     ```       2. Created PSBT 2 using `createpsbt` in which input is some UTXO from wallet (cardinal) and output is change left after deducting fees and output amount used in 1       ```     cHNidP8BAIkCAAAAAXm7jKQnPdFALnyfAMZ/4LktlmM2ae/x1zClF3eZFHh3AQAAAAD9////AvgqAAAAAAAAIlEgmeAiGFUfme2tsJ+HAT89PjkFYrYsn37nwN/Uckj23wpgrgoAAAAAACJRIObgyCXaE9gvj1wPqzq/SO1DVitTmnl2XYV3Y4dK8N0bAAAAAAAAAAA=      ```   3. Joined both PSBTs using `joinpsbts` RPC         ```      cHNidP8BAN0CAAAAAv6QBbK23/kX2b6+TwOMD+5K/3f/jev+O2ISBwUFJkjpAAAAAAD9////ebuMpCc90UAufJ8Axn/guS2WYzZp7/HXMKUXd5kUeHcBAAAAAP3///8D+CoAAAAAAAAiUSCZ4CIYVR+Z7a2wn4cBPz0+OQVitiyffufA39RySPbfCkANAwAAAAAAIlEgggRYhIl33bjKgdv+G5AXrcTRKGyWQXBY/93IME8F4EZgrgoAAAAAACJRIObgyCXaE9gvj1wPqzq/SO1DVitTmnl2XYV3Y4dK8N0bAAAAAAAAAAAAAA==        ```     4. Signed PSBT using `walletprocesspsbt` and finalized using `finalizepsbt`     5. Broadcasted the transaction using `sendrawtransaction`: https://mempool.space/signet/tx/1e34d8c00eae244a725ca0beecb9ff63f42d70072c49908ca17b9f98df08463d          Note: Order of inputs and outputs is important however `joinpsbts` RPC randomizes the order to improve privacy. So I had to keep trying until I get the right order. This can be fixed by either compiling core and remove the changes made in [#16512](https://github.com/bitcoin/bitcoin/pull/16512) or open a pull request in bitcoin core to add another argument in `joinspsbts` RPC that is true by default and could be change to false for not shuffling inputs and outputs.\nComment38 :@niftynei     Does this not work (for the \"buy sats\" case discussed above)?    0v = zero value dummy utxo    ```  Inputs:  A: N, ordinal, taker  B: M, cardinal, maker    Outputs:  X: 0v  Y: N, ordinal, maker  Z: M, cardinal, taker.  ```    Then maker can SINGLE|ACP sign over input B with safety right?      > PSBTv2 and +1 round trip fixes this iiuc; you separate the compose phase from the sign phase, which lets you use SIGHASH_ALL to sign. This prevents anyone from outbidding you once broadcast.    Yeah I haven't thought it through at all but I could well imagine all this \"jigsaw piece\" stuff with single|acp is academic if you start thinking about markets.  \nComment39 :Yeah I think that works nicely. You'd want to use just SIGHASH_SINGLE as originally suggested though, otherwise anyone could swap out the other ordinal input, and change what you're buying.    (I hadn't realized it til I saw this [tweet](https://twitter.com/rot13maxi/status/1630540065804828672?s=20), but the ordinal input/output needs to go at the top to make it work out)    You can make SIGHASH_ALL work for it and remove the 0v dummy output if the maker's pay-to address is known at the time you're constructing the offer to buy.\nComment40 :> You'd want to use just SIGHASH_SINGLE as originally suggested though, otherwise anyone could swap out the other ordinal input, and change what you're buying.    Oh yes, good catch! Huh, interesting that it's different this way round, because the \"special\" ordinal input isn't owned by the signer at the start.    It's interesting how many dimensions these setups have.    > You can make SIGHASH_ALL work for it and remove the 0v dummy output if the maker's pay-to address is known at the time you're constructing the offer to buy.    Still struggling with this one :smile: Did you mean taker, not maker there (i.e. the guy who *has* the ordinals and is accepting the offer to buy them?). I guess in case where all inputs and outputs are known in advance then none of this shenanigans is necessary right? You just ALL all of it in the usual way like a traditional coinjoin (except, where the ordering is fixed and no privacy is achieved).\nComment41 :> in case where all inputs and outputs are known in advance then none of this shenanigans is necessary right?     Yeah exactly :D \nComment42 :I am trying to write a spec for PSBT to be used in any inscription swap:    - [openordex](https://github.com/orenyomtov/openordex/blob/main/js/app.js) works best  - my [alternative](https://github.com/casey/ord/issues/802#issuecomment-1447608668) makes UX bad although no dummy UTXO  - [coinswap](https://github.com/bitcoin-teleport/teleport-transactions) sucks    Let me know if you have any feedback or opinions     Cc: @casey @rot13maxi @niftynei @AdamISZ @JeremyRubin \nComment43 :https://gist.github.com/1440000bytes/a7deeb3f1740bc533a61fbcc1fe58d77\nComment44 :> > Also, could someone please explain why the Dummy UTXO is needed and why it needs to be empty or have less than 1000 Sats?  >   > Dummy UTXO is required for SIGHASH_SINGLE, so the inputs/output indexes of the maker get lined up/covered for their signature (B + Y have same index position in their respective lists)    I don't understand why this is required.     ```  Ask: Offer to sell sats  Inputs        A: Zero-value dummy output, provided by taker      B: Value M output containing ordinals to be sold, provided by maker      C: Value N output containing cardinal sats to be used for payment, provided by taker    Outputs        X: Value M output with taker's address      Y: Value N output with maker's address  ```    Why not just reorganize to be     ```  Inputs      B: Value M output containing ordinals to be sold, provided by maker      C: Value N output containing cardinal sats to be used for payment, provided by taker  Outputs      Y: Value N output with maker's address      X: Value M output with taker's address  ```    Now `B` and `Y` are sharing the same index (`0`) which should be valid for `SINGLE|ANYONECANPAY`. This  allows the taker to add his input `C` at index `1` to fund the payment for the ordinal? This removes `A` from the transaction which simplifies things. Am i missing something?    EDIT:     Explained by @niftynei and @rot13maxi . Thank you! For other readers i highly suggest [reading the ordinal BIP](https://github.com/casey/ord/blob/master/bip.mediawiki)\nComment45 :> Am i missing something?    iiuc you're missing how ordinals flow/are reassigned to the outputs from the inputs. The person buying the ordinals needs their address to be at output 0, so they get the sat that the inscription is associated with.  \nComment46 :@niftynei has it. Sats get assigned to outputs in the same order that they are provided as inputs. So if the first sat of the first input is an inscription or otherwise desirable sat (rare/exotic?), then it will go to the first sat of the first output. If the seller provides the first input and the first output with SINGLE|ANYONECANPAY, they will just be sending that sat to themselves. \nComment47 :@rot13maxi thanks for the helpful answer...  did you get the answer to your earlier question re. zero-value dummy output? Could we actually put a zero-value input in A? Currently I'm using a non-zero dummy output (1000 sats) to get around the same index position requirement.\nComment48 :Yes, 0 value OP_RETURN outputs are valid and standard.\nComment49 :Hey folks. What's the safest way to parse out sats without messing up dummy utxo for ordinals ? So that you can inscribe a specific art to a specific sat and sell it eventually. What's the best known method for creating dummy UTXO's today?\nComment50 :@ep150de you should create a Discussion or a new Issue for that. Sounds related but separable", "reactionGroups": {"THUMBS_UP": 25, "EYES": 8, "HEART": 5, "LAUGH": 1}}, {"number": 801, "title": "Off-chain content", "summary": "{\"summary\": \"The issue is whether to support off-chain content for inscriptions. There are different opinions regarding the advantages and disadvantages of supporting off-chain content. The use of IPFS as off-chain storage was suggested, but some argue that it's complex and poorly-designed. There are concerns regarding the hash function, health status, and download of off-chain content. Other suggestions include supporting a generic 'url' media type.\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"decentralized\", \"content storage\", \"hash function\"]}", "reactionGroups": {"THUMBS_UP": 5, "HEART": 2}, "summaryJson": {"summary": "The issue is whether to support off-chain content for inscriptions. There are different opinions regarding the advantages and disadvantages of supporting off-chain content. The use of IPFS as off-chain storage was suggested, but some argue that it's complex and poorly-designed. There are concerns regarding the hash function, health status, and download of off-chain content. Other suggestions include supporting a generic 'url' media type.", "sentiment": "neutral", "labels": ["blockchain", "decentralized", "content storage", "hash function"]}}, {"number": 795, "title": "Write inscription BIP", "summary": "{\"summary\": \"Request to write an inscription BIP\", \"sentiment\": \"neutral\", \"labels\": [\"BIP\", \"protocol\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to write an inscription BIP", "sentiment": "neutral", "labels": ["BIP", "protocol"]}}, {"number": 794, "title": "Symbols", "summary": "{\"summary\": \"Proposal to assign symbols with unique names to inscriptions\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"naming\", \"proposals\"]}\n\nThe issue proposes a system to assign symbols represented by u64 integers to inscriptions with unique, short names that are chosen according to a specific algorithm. The comments express concerns about the potential limitations in the use of this system, such as the length of the allowed names and the restricted availability of certain name ranges. The sentiment is neutral, as the discussion focuses on technical aspects rather than expressing strong emotions. Relevant labels could include \"blockchain\" and \"naming\" as well as \"proposals\" since the issue proposes a new system.", "reactionGroups": {"THUMBS_UP": 1}}, {"number": 787, "title": "Fungible inscriptions", "summary": "{\"summary\": \"Proposal to support fungible inscriptions in transactions with prime ordinals\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"protocol\", \"feature-request\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to support fungible inscriptions in transactions with prime ordinals", "sentiment": "neutral", "labels": ["blockchain", "protocol", "feature-request"]}}, {"number": 786, "title": "Should multiple inscriptions on the same sat be possible?", "summary": "{\"summary\": \"Discussion regarding whether multiple inscriptions should be allowed on the same sat\", \"sentiment\": \"neutral\", \"labels\": [\"blockchain\", \"consensus\", \"inscriptions\"]}", "reactionGroups": {"THUMBS_UP": 1}, "summaryJson": {"summary": "Discussion regarding whether multiple inscriptions should be allowed on the same sat", "sentiment": "neutral", "labels": ["blockchain", "consensus", "inscriptions"]}}, {"number": 785, "title": "Licensing", "summary": "{\"summary\": \"Discussion about how to handle licensing for inscription content on a decentralized ledger\", \"sentiment\": \"uncertain\", \"labels\": [\"blockchain\", \"legal\", \"licensing\"]}\"", "reactionGroups": {}}, {"number": 783, "title": "Collections and Provenance", "summary": "Title: \"Collections and Provenance\"\nBody: \"SEE COMMENT [BELOW](https://github.com/casey/ord/issues/783#issuecomment-1454314946) FOR UPDATED DESIGN and #1869 for PR. Work in progress, release planned for week starting March 6th.    Provenance is important for art, and a large part of how it derives its value. We should have some notion of the provenance of an inscription:    - For an inscription, see who made it  - For a creator, see which inscriptions they've made  - Allow referencing an inscription within an artist's body of work by number or name (maybe just name, so they aren't confused with symbols) `/ARTIST_SYMBOL/NUMBER`    This will likely be accomplished as follows:    - If the inscription reveal transaction contains more than one input, the first ordinal of the first input is the \"prime\" ordinal  - If inscription has a prime ordinal, the first output of the inscription is ignored for the purposes of figuring out which ordinals are inscribed  - If an inscription has a prime ordinal, the inscription page should link to the prime ordinal's page  - If an ordinal has been used as a prime ordinal, the ordinal page should list all inscriptions it's made    It should be possible to make a series of related inscriptions:    - If an inscription is part of a collection, it should link to the collection page  - The collection page should link to all inscriptions in the collection  - The collection page should have some description about the collection  - It should be possible to nest collections. E.g. create a collection that contains multiple collections.  - Collections should have provenance. You should be able to see the scribe who created a collection, and see the collections issued by a scribe.  - It should be possible to make a collection closed-ended, e.g. guarantee that it isn't possible to issue more items.  - It should be possible link to an item in a collection by number or possibly name, e.g. - `/COLLECTION_SYMBOL/NUMBER` or `/COLLECTION_SYMBOL/NAME`.    Design sketch:    - Reuse prime ordinals from #783. A collection is just a prime ordinal, and all the inscriptions that it's made.   - If you want to add a description to the collection, make an inscription on the prime ordinal used to issue the collection.  - If you want to close the collection, send the prime ordinal to an OP_RETURN. (I don't actually like this. It seems bad to force burning the prime ordinal of a collection. But, it's very simple.)\"\nComment0 :this sounds awesome\nComment1 :i'm a bit confused by this line  > If inscription has a prime ordinal, the first output of the inscription is ignored for the purposes of figuring out which ordinals are inscribed    let me see if i get this right:  Say I want to make a collection Astral Babes with good provenance.   So I create an inscription w/ info about the collection like normal onto the first satoshi of Outpoint-A, which a value of 10,000 sats    Now say I want to mint the first Astral Babe, the transaction will look like this  Inputs:  - Outpoint-A (10,000 sats)  - Some other utxo w/ reveal script encoding the first Astral Babe JPG data    Outputs:  - Outpoint-B (10,000 sats)  - Outpoint-C (any amount)    Now Astral Babe 1 lives at the first satoshi of Outpoint-C  And we can infer that she is part of the Astral Babes Collection, which lives at the first satoshi of Outpoint-B    As I understand, this is a breaking change, because with existing rules, the above transaction would inscribe Astral Babe 1 onto the first sat of Outpoint-B    I'm not sure I like this because it's a breaking change    I will think of something to propose instead\nComment2 :This is non-breaking. We'll add a field, `destination`, which is an integer. `destination` is an even field, so clients that don't understand it will ignore inscriptions with that field. When an inscription has a `destination`, it is made on that sat in the output. This can be used to add features which change the existing rules for individual inscriptions.    The `destination` field can also be used for other features, for example, multiple inscriptions per transaction.\nComment3 :> This is non-breaking. We'll add a field, `destination`, which is an integer. `destination` is an even field, so clients that don't understand it will ignore inscriptions with that field. When an inscription has a `destination`, it is made on that sat in the output. This can be used to add features which change the existing rules for individual inscriptions.  >   > The `destination` field can also be used for other features, for example, multiple inscriptions per transaction.    awesome\nComment4 :i wonder if there's a way we can retroactively add items to a collection  somehow construct a transaction whos inputs include the ordinal of the collection and the ordinal of the item, as well as an inscription on the collection ordinal that brings the item into the collection    just thinking of ways i can launch my items asap and retroactively add them to a collection\nComment5 :Retroactive collections seem doable.   This could be a clever solution to #1189: if I buy an inscription, I can add it to my own collection as in set of collected items, by linking it to my collector's (as opposed to creator's) prime ordinal.\nComment6 :Until the above can be released, I'm thinking of using Nostr identities for provenance, something like this:    Create a Nostr key that represents the owner of the collection.  Create and mint an inscription to announce a collection:  ```  {  \"name\": \"Astral Babes\",  \"maxSupply\": 10000,  \"owner\": npub12344(nostr-pub of owner)  }  ```    Each time a mint occurs, a separate inscription is also minted that links that item to the collection and adds some metadata:  ```  {   \"inscription_id\": \"inscription-id-of-the-jpg-inscription\",   \"collection_id\": \"inscription-id-of-the-collection-announcement-inscription\",    \"name\": \"Astral Babe 12\",    \"traits\": [\"hot\", \"sexy\"],   \"signature\": \"signed-by-the-nostr-key-of-collection-owner\"  }  ```    The valid 10,000 items in the collection are the first inscriptions to be mined and also have a valid attestation inscription mined after it.    Furthermore, additional Attestation Inscriptions can be minted afterwards to update the metadata  ```  {   \"inscription_id\": \"asdfasdfasdfasdfasdf\",    \"name\": \"Astral Babe 2\",    \"traits\": [\"sexy\", \"hot\"],    \"signature\": \"signed by collection owner\"  }  ```  Also can mint a \"Freeze Metadata\" Attestation which can freeze all future updates to an item or an entire collection  ```  {   \"inscription_id\": \"asdfasdfasdfasdfasdf\",    \"freeze\": true,    \"signature\": \"signed-by-collection-owner\"  }  ```    I think the key here is to decouple the inscriptions from identity. Inscriptions are messages, whereas identities are nostr keys      \nComment7 :A distinction between creator's prime ordinal and collector's prime ordinal would be chronological: the first prime ordinal inscription would be the creator's; the latest, the latest collector's.\nComment8 :@dannydeezy     > Until the above can be released, I'm thinking of using Nostr identities for provenance, something like this:    It looks like all the actually metadata in this scheme is in inscriptions, and the only nostr-y bit is the pubkey of the creator, is that right?\nComment9 :> @dannydeezy  >   > > Until the above can be released, I'm thinking of using Nostr identities for provenance, something like this:  >   > It looks like all the actually metadata in this scheme is in inscriptions, and the only nostr-y bit is the pubkey of the creator, is that right?    yeah correct\nComment10 :could also link items to a collection in batches like this, to reduce dust  these can get minted to an OP_RETURN output as there's not need to send them anywhere after being inscribed.  (they could even be just published as OP_RETURN data in the first place...)  ```  {   \"collection_id\": \"inscription-id-of-the-collection-announcement-inscription\",    \"items\":[{           \"inscription_id\": \"asdfasfasdf\"           \"name\": \"Astral Babe 1\",           \"traits\": [\"hot\"]        }, {            \"inscription_id\": \"ccasdfasfasdf\"           \"name\": \"Astral Babe 2\",           \"traits\": [\"sexy\"]                 }, {           \"inscription_id\": \"ffffaaaasdddsd\"           \"name\": \"Astral Babe 3\",           \"traits\": [\"inquisitive\"]        }    ],   \"signature\": \"signed-by-the-nostr-key-of-collection-owner\"  }  ```\nComment11 :actually yeah, there's no reason collection or metadata announcements need to be inscriptions, because they aren't \"owned\" or \"transferrable\", so the initial announcement:  ```  {  \"name\": \"Astral Babes\",  \"maxSupply\": 10000,  \"owner\": npub12344(nostr-pub of owner)  }  ```  and messages that link items to the collection:  ```  {   \"inscription_id\": \"inscription-id-of-the-jpg-inscription\",   \"collection_id\": \"inscription-id-of-the-collection-announcement-inscription\",    \"name\": \"Astral Babe 12\",    \"traits\": [\"hot\", \"sexy\"],   \"signature\": \"signed-by-the-nostr-key-of-collection-owner\"  }  ```    could just be encoded as OP_RETURNs... \nComment12 :ah but the issue is OP_RETURNs have a byte limit, I see.  In that case, perhaps they should be inscriptions\nComment13 :Could you open a discussion or something for this? It's totally reasonable to discuss, but I don't want people to think it's recommended/supported/under consideration as the official way of doing this. Just hid the comments, just want to keep this issue focused on the planned implementation for ord.\nComment14 :> Could you open a discussion or something for this? It's totally reasonable to discuss, but I don't want people to think it's recommended/supported/under consideration as the official way of doing this. Just hid the comments, just want to keep this issue focused on the planned implementation for ord.    if `ord` is definitely going to go this route, then I would request that we consider some way in which a bunch of items launched today before this feature is released could have a path to becoming compliant with the standard that does get decided on\nComment15 :started discussion here: https://github.com/casey/ord/discussions/1460\nComment16 :If you figure out another way to do provenance, e.g. a master inscription with the txids, or nostr, etc, then you can publish that on the project page such that that users can verify it. I can't promise specific support for anything in `ord` though.\nComment17 :> Reuse prime ordinals from https://github.com/casey/ord/issues/783. A collection is just a prime ordinal, and all the inscriptions that it's made.    Is this linking the correct issue? it's just linking back to this one\nComment18 :@dannydeezy Yup, that links to this issue.\nComment19 :If i'm understanding correctly, i think there is a challenge with this approach:    Since the \"collection prime ordinal\" must be explicitly included in every single item inscription transaction, it means that we're gonna start running into `too-long-mempool-chain` issues. Mempools do not accept a chain of more than ~30 unconfirmed transactions, so that means only 30 items can be minted per block. This hinders the ultimate degen experience of a full 10,000 item collection getting minted out in minutes\nComment20 :Curious for thoughts on this - a way to almost do what's mentioned here but without requiring the collection ordinal to be present on every mint transaction: https://github.com/casey/ord/discussions/1469\nComment21 :> Mempools do not accept a chain of more than ~30 unconfirmed transactions, so that means only 30 items can be minted per block. This hinders the ultimate degen experience of a full 10,000 item collection getting minted out in minutes    Multiple inscriptions per transaction, tracked in #876, fixes this. Can RBF one mint transaction to include more and more inscriptions, until eventually you mine a single four megger that includes all inscriptions and only needs to move the parent ordinal once.\nComment22 :Alternative scheme if BIP-322 can be used for message signing to prove collection, by explicitly signing using the aggregate signatures from all other inscriptions' genesis addresses. This is useful if they don't come from the same prime ordinal, but you want them as a collection post-inscribing because you have the keys to each genesis addresses.    Message to sign by all addresses within the collection:  | Data row              | Type             | Description                                                                                                                                                                                        |  |-----------------------|------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  | Nonce (uint64)        | Required         | Default value of 0 if unused. Nonce can be used by marketplaces or individuals to attest ownership of collection.                                     |  | Inscriptions ID  | Required         |              inscription_id of all the inscriptions in the collection, on every subsequent newline. All the genesis addresses listed here must sign this message                                                                                                                               |\nComment23 :blaeeeeeeeeeghtghghghg:    ```rust  parent: inscription.parent.and_then(|parent| if inscriptions.contains(parent.txid) { Some(parent) } else { None }),  ```\nComment24 :Provenance is important for art, and is a large part of how it derives value. More broadly, establishing a standard for on-chain provenance using Bitcoin\u2019s proven foundation enables provenance for any sort of digital artifacts.    We should have some notion of provenance for inscriptions that satisfies these requirements:    1. For an inscription, see who made it  2. For a creator, see which inscriptions they've made  3. Allow referencing an inscription within an artist's body of work by number or name `/PARENT_INSCRIPTION/NUMBER`    This will be accomplished as follows:  - We are introducing the concept of parent-child relationships between inscriptions  - When an inscription is created, it can be made the child of an existing inscription, which becomes its parent  - The UTXO that currently holds the parent inscription is an additional input to the reveal transaction for the child inscription and spent to a separate output in the reveal transaction  - The parent relationship needs to be established when an inscription is created and *cannot* be added or changed later  - An inscription can only have one (or no) parent  - If an inscription has a parent, the child's inscription page will link to the parent's inscription page in the ordinals explorer  - If an inscription has been used as a parent inscription, the parent's inscription will contain links to all of its child inscriptions in the ordinals explorer    This concept can be used for provenance (with the parent inscription representing an artist), and it can also be used to establish collections:    - If an inscription is part of a collection, all inscriptions that are part of the collection should have a single parent inscription representing the collection as their parent.  - The collection inscription could in turn have the inscription representing the artist as its parent.   - Additional levels can also easily be established, for example to establish groups of collections, or sets in a collection.  - Collections can be made closed-ended by burning the collection inscription.  \nComment25 :so what prevents someone from creating a collection from a parent inscription they bought/acquired?  seems like a great way for scammers to create \"official\" collections from someone else's inscription\nComment26 :@loon3 I believe this specification is what would prevent your scenario, since the parent-child relationship can be established only at the moment of the inscribing, and cannot be changed afterwards.    > The parent relationship needs to be established when an inscription is created and cannot be added or changed later    \nComment27 :yes for the child, but the parent is simply an inscription you already hold (if i read that right)\nComment28 :Let's determine the problem first,  We need to know which inscription belongs to which collection or an artist.  There are multiple methods suggested in this thread to make this happen, but there are some problems that occur over and over.  Provenance needs to be structured very carefully to avoid problems in the future, that's a big deal.  **Parent inscription** - from what I understand, you can't forecast the inscription id of the child, so the parent must be created after we create the child. That can work but limits functionalities like dynamic allocation of pieces in the collection, and if you want to allow your community to inscribe the NFTs (to avoid paying all the fees), they need to trust you to wrap it all with a \"parent inscription\" that will state that they are within the collection.     **Signatures** - The convo here about \"where\" to place the signature is pretty much irrelevant, as there are multiple ways to add metadata (natively into the files -exif and such, multipart content type, another inscription which indicates).  The real focus is on how and what we should sign. a general message from the author's wallet is vulnerable because an attacker can take this signature and attach it to another inscription which will make it \"official\".    ### There are two solutions that can work:  1. **Pre-inscribing:**  Adding metadata of \"token_id\",\"collection_name\", \"author wallet\", and \"unique_signature\" into the inscription. and the unique signature will be based on https://en.bitcoin.it/wiki/Message_signing which can be validated later on, and will contain the \"token_id\" + \"collection_name\" + \"author wallet\". That way the signed message is not general as it is represented by each \"token_id\" which is unique for every inscription in the collection. This can be generated upfront and added to the file natively before the inscribing even begins. [Big advantage here is that we can leverage the web3.js infra which is widely adopted already to create signatures from other protocols]    2. **Post-Inscribing:** Creating a new inscription with the metadata that is meant to be the parent. It will include the data of: \"inscription id\", \"collection_name\", \"author wallet\", and \"unique_signature\". The unique signature will contain \"inscription id\"+\"collection_name\",+\"author wallet\". That way we can validate that this inscription really belongs to the author or collection we want. (we can also create metadata-inscription (parent) for multiple child inscriptions, with 1 signature that can be more efficient in fees).    In both solutions, we are leveraging the signing functionality to determine the authority of the inscriptions but one is based on \"inscription_id\" and one is determined by \"token_id\".    FYI: We have created a tool to add metadata into jpegs https://digital-artifacts.io already which you can test for that purpose. it is currently biased toward solution number 1 (pre-inscribing) but will be changed as to what the project will decide.  <img width=\"1049\" alt=\"Screen Shot 2023-03-04 at 21 52 56\" src=\"https://user-images.githubusercontent.com/69144568/222926059-74abc23d-c3c6-4ae8-8fd1-51a2ac7b336a.png\">\nComment29 :One tradeoff with the \u201chave the parent be an input to the reveal tx\u201d method of linkage is that collections will have to be inscribed serially (at least in terms of the transaction graph, in practice, CPFP would let you have ~20 of them in the mempool at a time\u201d. Common practice for medium to large collections now is to try to bulk inscribe in parallel. Artifacers will have more complex transaction management for larger collections.     Then again, maybe thats desirable in and of itself. A large collection with common inscription input would itself be a feat until better tooling is developed. \nComment30 :To support generative art collections, in which the art is all contained in the parent inscription, does it make sense to create a JSON schema standard for child ordinals to define their relationship to a parent?    For example, a parent ordinal renders a single item in it's collection based on a url param, `?tokenID=4969` for example.  So each child ordinal's inscription is just a JSON doc following some standard:    ```  {     \"use_p\": 1,     \"params\": [\"tokenID=4969\"],     \"metadata\": {        \"id\": 4969,        \"collection_name\": \"...\"     }  }  ```    Whenever ordinals explorer parses child inscription data which is a JSON doc containing an `is_pointer` field, it displays a `metadata` section on the inscription page, and renders that particular item in the collection using the same rules for MIME types it already has.  So in the example above, it would render an `iframe`, something like:    ```  <iframe src=\"/preview/<inscription id of parent>?tokenID=4969\" />  ```\nComment31 :> * Collections can be made closed-ended by burning the collection inscription.    Meaning burn the coins? I don't think burning bitcoins should be encouraged (or forced even if you want to have a legit/valid closed-ended collction).    Instead, given parentage is defined by the parent being an input to each reveal transaction, the final inscription in a collection could be signalled by 'closing the loop' with the parent, and the output sending it back to the address of the first inscription (its own genesis). Address re-use feels much better than destroying Bitcoins?    (also assuming I've understood the proposal and how `ord` works \ud83d\ude05)\nComment32 :> if `ord` is definitely going to go this route, then I would request that we consider some way in which a bunch of items launched today before this feature is released could have a path to becoming compliant with the standard that does get decided on    @veryordinally appreciate all of the context provided! curious whether the above comment was taken into consideration or how existing inscription collections can incorporate parent/child provenance? if at all?\nComment33 :> Provenance is important for art, and is a large part of how it derives value. More broadly, establishing a standard for on-chain provenance using Bitcoin\u2019s proven foundation enables provenance for any sort of digital artifacts.  >   > We should have some notion of provenance for inscriptions that satisfies these requirements:  >   > 1. For an inscription, see who made it  > 2. For a creator, see which inscriptions they've made  > 3. Allow referencing an inscription within an artist's body of work by number or name `/PARENT_INSCRIPTION/NUMBER`  >   > This will be accomplished as follows:  >   > * We are introducing the concept of parent-child relationships between inscriptions  > * When an inscription is created, it can be made the child of an existing inscription, which becomes its parent  > * The UTXO that currently holds the parent inscription is an additional input to the reveal transaction for the child inscription and spent to a separate output in the reveal transaction  > * The parent relationship needs to be established when an inscription is created and _cannot_ be added or changed later  > * An inscription can only have one (or no) parent  > * If an inscription has a parent, the child's inscription page will link to the parent's inscription page in the ordinals explorer  > * If an inscription has been used as a parent inscription, the parent's inscription will contain links to all of its child inscriptions in the ordinals explorer  >   > This concept can be used for provenance (with the parent inscription representing an artist), and it can also be used to establish collections:  >   > * If an inscription is part of a collection, all inscriptions that are part of the collection should have a single parent inscription representing the collection as their parent.  > * The collection inscription could in turn have the inscription representing the artist as its parent.  > * Additional levels can also easily be established, for example to establish groups of collections, or sets in a collection.  > * Collections can be made closed-ended by burning the collection inscription.    This is amazing. Is there an ETA on this? I've been holding on releasing a project waiting for this. Also if there is a way of beta testing this I want to be a part of it if possible. Thank you!\nComment34 :> > * Collections can be made closed-ended by burning the collection inscription.  >   > Meaning burn the coins? I don't think burning bitcoins should be encouraged (or forced even if you want to have a legit/valid closed-ended collction).  >   > Instead, given parentage is defined by the parent being an input to each reveal transaction, the final inscription in a collection could be signalled by 'closing the loop' with the parent, and the output sending it back to the address of the first inscription (its own genesis). Address re-use feels much better than destroying Bitcoins?  >   > (also assuming I've understood the proposal and how `ord` works sweat_smile)    Yes, it means burning the sat.    I agree with you that there are various ways to avoid burning sats.    However, Casey has expressed strong interest in burning sats as a means of implementing features: https://github.com/casey/ord/issues/784, https://github.com/casey/ord/issues/1333, https://github.com/casey/ord/issues/1501, https://github.com/casey/ord/issues/1548, https://github.com/casey/ord/issues/1588, https://github.com/casey/ord/issues/1657\nComment35 :Mind checking the solution I have proposed?  https://mirror.xyz/0xa39f4896604D861521587F735241237cF803d90E/vwuiIJNaNYR6yQ3JiV9tdpeCEEsgKaWo8WytWYhRzeA    It enables parent child relationship and in the end collection owner can do final inscription which will be a json and inscription id will act like 'smart contract' address of ETH.   It prevents all sort of scam usecases during collection mint or after mint. \nComment36 :For provenance purposes, an inscription representing an artist/creator/publisher etc and used as a parent inscription should NOT be associated with an ordinal sat and should NOT be movable/tradable. The functionality for creating a parent inscription used as an owner identity should be worked out first.     There is work and discussion on arbitrary protocol specifiers in a forked Ord repo to handle generic non-ordinal inscription use cases. I have also proposed the notion of namespaces to define different conventions and standards around inscriptions and whether or not they are attached to ordinal satoshis.     Unless a good argument can be made for enabling the movability of a parent inscription used as an owner and source identifier, I think this should be a focus now before deploying provenance parent-child support.     In some cases, such as a desire to move your identity \"token\" to a different address/wallet, it could make sense to ordinalize it. However, there are surely other ways to handle this that can be discussed. Ultimately, I see no reason why, once inscribed, an ID should move via an ordinal sat.     Also, I think a standard metadata format should be created for an owner/artist ID inscription that is intended to have a body of work associated through children inscriptions.        \nComment37 :> Mind checking the solution I have proposed? https://mirror.xyz/0xa39f4896604D861521587F735241237cF803d90E/vwuiIJNaNYR6yQ3JiV9tdpeCEEsgKaWo8WytWYhRzeA  >   > It enables parent child relationship and in the end collection owner can do final inscription which will be a json and inscription id will act like 'smart contract' address of ETH. It prevents all sort of scam usecases during collection mint or after mint.    I read through it and seems promising. Key things I like about this approach:    1. Parallel inscriptions of multiple items as no prime ordinal required in the input  2. Unique identification of every item in a collection through parent-child and child-parent relationships  3. Support for metadata/traits  4. Backward compatibility with existing explorers  5. Easy to inscribe without any learning curve for existing creators/users  Excited to see how it progresses.\nComment38 :> If you figure out another way to do provenance, e.g. a master inscription with the txids, or nostr, etc, then you can publish that on the project page such that that users can verify it. I can't promise specific support for anything in `ord` though.    Fair point!\nComment39 :> so what prevents someone from creating a collection from a parent inscription they bought/acquired? seems like a great way for scammers to create \"official\" collections from someone else's inscription    dont see this as an issue but instead a feature.  if someone buys an inscription, they can later use it as a parent for later inscriptions.  this can possibly create interesting demand for certain inscriptions  ex: artist or collection buys a sub 1k inscription to use as their \"parent\" for future collections  ex: artist or collection buys a specific inscription from a collection to use as their \"parent\" for future collections  essentially we are adding utility to every inscription, since the added utility is it can be used as a parent for future inscriptions!  so many wonderful usecases! think \"identity from inscription\"  ex: publisher uses a parent as their identifier and all children are their published work  this is a great feature add for ord    ps edit:  if someone wanted to sell their parent and preserve previous work as theirs and future work as NOT theirs.  they can just make a new child inscription from their parrent. claiming i am selling this parent inscription any future children are NOT done by me the current holder.  as it is immutable onchain, a buyer in the future can make a child but that child would come incrementally AFTER the child that claimed a close of previous artists work.  \nComment40 :Is it possible for any project collaborators to comment on or otherwise address any of the discussion here over the past week?\nComment41 :This all sounds very promising step forward.    More generally then, will there be some standards for the JSON structuring of parent/child collection/ordinal inside collection done?    I'm looking at making a project that would allow the images to be mutated/modified as time went by so wouldn't want them on chain but the collection would have a root JSON file showing collection info and the child ordinals would have the JSON specific to them, I had initially though using the enjinn/opensea style metadata format would be best as it seems to handle most eventualities regarding data and links and there is a lot of prior art out there using this JSON structure to display or catalogue collections, which makes it easier for wider adoption of ordinals.    \nComment42 :Even though we can prove an inscription belongs to one collection, but the provenance of collection itself has to be done by off-chain identity, because there is no way we can distinguish different transactions with the same meta-data. We have to identify the creator's address by off-chain.\nComment43 :> We have to identify the creator's address by off-chain.    SO.... you could inscribe a PGP Public Key, then using sats from the output of that transaction (change) inscribe everything in the collection, then finally create another text file inscription using the PGP key to sign a message that says something like    ```  101 Monkey JPEGs    A limited collection of 101 inscriptions by <Creator's ID>    <inscription ID>  <inscription ID>  ...  <inscription ID>    -----BEGIN PGP SIGNATURE-----    a5Dfa5Dfa5Df...  ...  a5Df  -----END PGP SIGNATURE-----  ```    So-long-as the initial pubkey inscription's change has enough sats in it that you can include some of its output in every inscription in the collection's inputs, this works for doing concurrent inscriptions (i.e. doesn't require 'chaining' the transactions) and also uses PGP which is an existing and widely used way of having a digital identity, and does all this on-chain rather than requiring off-chain (out of band) verification.    You culd make it a bit more complex by a creator having a permanent PGP key, and making an ephemeral one for the collection, sign it with their permanent key, sign the collection text file with the collection key, and include the revocation certificate for the collection key in the collection text file too to 'invalidate' using the collection key again to make any new inscriptions\nComment44 :would using an ECDSA signed hash/message not be more size efficient and more in keeping with things that are widely used in the crypto space?    The public key could be in the root of the collection ordinal and using a function you could validate the signature in each child has been made with that key.\nComment45 :> would using an ECDSA signed hash/message not be more size efficient    Yeah sure, it would be smaller and would work fine. I suggested PGP though as it's 'handy' in that it is already (fairly) widely used and understood (even if the UX often sucks \ud83d\ude06) and makes it easy to attach names, emails and photos to an ID, and has the potentially useful concepts of revocation certificates and keys signing eachother to indicate authenticity/trust.\nComment46 :I know, but it sounds like thats overengineering what amounts to a mini blockchain inside an ordinal to prove some kind of parent child linkage/proof.\nComment47 :A major issue with using GPG/PGP is that it would be separate key material, which would need to be persisted somehow, and would likely cause a lot of confusion for users tasked with storing added backup data beyond the seed phrase for the wallet.", "reactionGroups": {"THUMBS_UP": 42, "HEART": 2, "EYES": 5, "LAUGH": 1, "ROCKET": 10}}, {"number": 742, "title": "Liability", "summary": "{\"summary\": \"Discussion around legal liability and copyright infringement in the absence of a company\", \"sentiment\": \"neutral\", \"labels\": [\"legal\", \"incorporation\"]}", "reactionGroups": {"THUMBS_UP": 2}, "summaryJson": {"summary": "Discussion around legal liability and copyright infringement in the absence of a company", "sentiment": "neutral", "labels": ["legal", "incorporation"]}}, {"number": 709, "title": "Post an update to bitcoin-dev", "summary": "{\"summary\": \"Request to post an update on bitcoin-dev mailing list showcasing functionality on both mainnet and signet, and mentioning bounties.\", \"sentiment\": \"neutral\", \"labels\": [\"development\", \"community-engagement\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Request to post an update on bitcoin-dev mailing list showcasing functionality on both mainnet and signet, and mentioning bounties.", "sentiment": "neutral", "labels": ["development", "community-engagement"]}}, {"number": 393, "title": "Include canonical link to ordinals", "summary": "{\"summary\": \"Proposal to include a canonical link for ordinals and potential redirect\", \"sentiment\": \"neutral\", \"labels\": [\"enhancement\", \"web-development\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to include a canonical link for ordinals and potential redirect", "sentiment": "neutral", "labels": ["enhancement", "web-development"]}}, {"number": 148, "title": "Handle reorgs", "summary": "{\"summary\": \"Handle reorganizations in redb by adding checkpoints and rollbacks\", \"sentiment\": \"concerned\", \"labels\": [\"blockchain\", \"data-management\", \"bug\"]}", "reactionGroups": {}, "summaryJson": {"summary": "Handle reorganizations in redb by adding checkpoints and rollbacks", "sentiment": "concerned", "labels": ["blockchain", "data-management", "bug"]}}, {"number": 62, "title": "Ordinal-aware wallet derivation paths", "summary": "{\"summary\": \"Proposal to use a distinct derivation path for ordinal-aware HD wallets to avoid mixing with non-ordinal outputs and transactions\", \"sentiment\": \"neutral\", \"labels\": [\"wallet\", \"proposal\", \"bitcoin-core\"] }", "reactionGroups": {}, "summaryJson": {"summary": "Proposal to use a distinct derivation path for ordinal-aware HD wallets to avoid mixing with non-ordinal outputs and transactions", "sentiment": "neutral", "labels": ["wallet", "proposal", "bitcoin-core"]}}]